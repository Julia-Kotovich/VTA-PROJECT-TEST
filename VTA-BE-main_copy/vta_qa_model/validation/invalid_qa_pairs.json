[
    {
        "question": "the capstone project provides a complete experience of software development from ideation to product. the formal course structure is a mix of formal presentations and guest presentations. the course structure includes requirements elicitations with stakeholders, fast design and prototyping, architecture, practicalities of cybersecurity development following agile processes, and development using state - of - the - art development tools ( git repositories, integration servers, static analyzers ). if you want to learn more about the capstone project course, check the article in the 2nd international workshop on frontiers in software engineering education ( fisee 23 ), edited in lecture notes in computer science by springer ( https : / / link. springer. com / chapter / 10. 1007 / 978 - 3 - 031 - 48639 - 5 _ 3 ). the instructor of the capstone project is prof dr manuel oriol. manuel is a professor of computer science at constructor institute. he has 10 years of experience in academia, and 10 years in industry, co - authored 60 + articles on software engineering and software architecture, and graduated 4 doctoral students, and 25 + msc students. the teaching assistants are muhammad khalid and julia kotovich. mohammed is a phd researcher and lecturer at constructor university. julia kotovich is a phd researcher at constructor institute. to succeed in the program, students must have a strong foundation in programming skills in an imperative language at the cs bachelor level, as well as knowledge of algorithms and data structures at the same level. these foundational skills enable students to tackle the complexities of the capstone project and other advanced coursework. the course plan includes design & ideation, architecture, and initial development, portal ready and deployed, and advanced concepts and refinements based on customer feedback. the course includes an opportunity for students to attend guest lectures, which are presentations given by external lecturers from industry or academia. these lectures cover best practices and other computer science - related topics, providing students with insights from experienced professionals in the field. the start time of guest lectures can be verified in the actual course schedule. taking this course is mandatory for students enrolled in the ast and csse programs. it is a crucial part of the curriculum that ensures you gain the necessary practical and theoretical skills for your future career in software engineering and related fields. what is the role of a capstone project?",
        "predicted_answer": "a complete experience of software development from ideation to product.",
        "true_answer": "provides a complete experience of software development from ideation to product."
    },
    {
        "question": "an important aspect of a software product is the need to talk to stakeholders. to do this effectively, you have to prepare a pitch and a demo. a pitch should take 2 - 5 minutes, be simple, straight to the point, fun ( if possible ), and insightful. it should let people understand why they should give you money. a pitch should be structured as follows : problem ( job - to - be - done ), your solution ( why is your solution creating a paradigm shift ), market and competitor analysis, team, business case, unique insights that you have, and ask. the problem section answers the \" why \" question. start with a question like, \" did you ever ask yourself? \" and explain the problem from the customer's perspective. your solution answers \" what \" and \" how. \". present your solution quickly and efficiently, explain the benefits, how it solves the problem, and how it changes everything ( paradigm shift ). for market and competitor analysis, make a 2 - dimensional graph ( find the right axes where your solution fits ) and show the market size if possible. in the team section, present your team with 2 + founders ( include pictures ). the business case should show a \" hockey stick \" growth projection but not promise anything before 3 years. explain your unique insight ( this is why you are the startup that will make it ). in the ask section, indicate what you need, be it money, feedback, or advertisement. the demo should be compelling, answer the problem statement nicely, be short, and work. what should be included in the team section of a pitch?",
        "predicted_answer": "in the team section, present your team with 2 + founders ( include pictures ).",
        "true_answer": "should be compelling, answer the problem statement nicely, be short, and work."
    },
    {
        "question": "there are several tools for the processes in software development. these tools are meant to support the development not to control it. during the development process in capstone, if tools do not work and this is expressed in a retrospective, it can be changed. the four main categories of tools that development teams need are design tools, source code versioning systems, software development platforms, and continuous integration servers. design tools help to present what a solution should look like and simulate its main interaction ( it is needed to show a project to stakeholders to make it concrete ). many people use powerpoint to show what they want to have. it is even possible to make clickable demos that way. many tools exist, an example is invision. this tool can be used to easily create a first draft. the main concepts are artboards ( screens / landing visualizations ), and interactions. interactions define an event and a landing artboard. a software development platform is a web tool that allows one to store and browse source code through a repository and organize the backlog and the testing process. there are now many platforms online that provide these kinds of functionalities for free or for subscriptions. popular examples include github ( bought by microsoft and is free for open source ), gitlab and gitorious ( free clones of github to use and install on - premises ), devops by microsoft, and jira by atlassian. a continuous integration server is a server that runs pipelines pulls from a repository, compiles the code, runs tests automatically, and notifies you if there is a problem. few recognized and professional tools exist. examples are jenkins ( open source and free ), gitlabci ( open source and free ), and azure pipelines ( by microsoft ). in the capstone project course, we will use the processes and tools that we presented. much of the training for tools should be done online by following tutorials. all these are the basics that everyone needs to understand to do a decent job. ta session will help and answer questions whenever possible. what is the role of design tools in software development?",
        "predicted_answer": "design tools help to present what a solution should look like and simulate its main interaction ( it is needed to show a project to stakeholders to make it concrete ).",
        "true_answer": "help to present what a solution should look like and simulate its main interaction ( it is needed to show a project to stakeholders to make it concrete )."
    },
    {
        "question": "an important aspect of a software product is the need to talk to stakeholders. to do this effectively, you have to prepare a pitch and a demo. a pitch should take 2 - 5 minutes, be simple, straight to the point, fun ( if possible ), and insightful. it should let people understand why they should give you money. a pitch should be structured as follows : problem ( job - to - be - done ), your solution ( why is your solution creating a paradigm shift ), market and competitor analysis, team, business case, unique insights that you have, and ask. the problem section answers the \" why \" question. start with a question like, \" did you ever ask yourself? \" and explain the problem from the customer's perspective. your solution answers \" what \" and \" how. \". present your solution quickly and efficiently, explain the benefits, how it solves the problem, and how it changes everything ( paradigm shift ). for market and competitor analysis, make a 2 - dimensional graph ( find the right axes where your solution fits ) and show the market size if possible. in the team section, present your team with 2 + founders ( include pictures ). the business case should show a \" hockey stick \" growth projection but not promise anything before 3 years. explain your unique insight ( this is why you are the startup that will make it ). in the ask section, indicate what you need, be it money, feedback, or advertisement. the demo should be compelling, answer the problem statement nicely, be short, and work. give an important aspect of a software product?",
        "predicted_answer": "the need to talk to stakeholders.",
        "true_answer": "an important aspect of a software product is the need to talk to stakeholders."
    },
    {
        "question": "the capstone project provides a complete experience of software development from ideation to product. the formal course structure is a mix of formal presentations and guest presentations. the course structure includes requirements elicitations with stakeholders, fast design and prototyping, architecture, practicalities of cybersecurity development following agile processes, and development using state - of - the - art development tools ( git repositories, integration servers, static analyzers ). if you want to learn more about the capstone project course, check the article in the 2nd international workshop on frontiers in software engineering education ( fisee 23 ), edited in lecture notes in computer science by springer ( https : / / link. springer. com / chapter / 10. 1007 / 978 - 3 - 031 - 48639 - 5 _ 3 ). the instructor of the capstone project is prof dr manuel oriol. manuel is a professor of computer science at constructor institute. he has 10 years of experience in academia, and 10 years in industry, co - authored 60 + articles on software engineering and software architecture, and graduated 4 doctoral students, and 25 + msc students. the teaching assistants are muhammad khalid and julia kotovich. mohammed is a phd researcher and lecturer at constructor university. julia kotovich is a phd researcher at constructor institute. to succeed in the program, students must have a strong foundation in programming skills in an imperative language at the cs bachelor level, as well as knowledge of algorithms and data structures at the same level. these foundational skills enable students to tackle the complexities of the capstone project and other advanced coursework. the course plan includes design & ideation, architecture, and initial development, portal ready and deployed, and advanced concepts and refinements based on customer feedback. the course includes an opportunity for students to attend guest lectures, which are presentations given by external lecturers from industry or academia. these lectures cover best practices and other computer science - related topics, providing students with insights from experienced professionals in the field. the start time of guest lectures can be verified in the actual course schedule. taking this course is mandatory for students enrolled in the ast and csse programs. it is a crucial part of the curriculum that ensures you gain the necessary practical and theoretical skills for your future career in software engineering and related fields. how would you describe the capstone project?",
        "predicted_answer": "a complete experience of software development from ideation to product.",
        "true_answer": "project provides a complete experience of software development from ideation to product."
    },
    {
        "question": "the first assignment for the capstone project consists of two parts. part 1 is individual, where each student must come up with an idea for a web application that is innovative, useful, and simple to explain. part 2 involves presenting the ideas to the group, discussing advantages and disadvantages, and collectively choosing one idea to develop further. the group will then create a clickable demo using a design tool and prepare slides for a 5 - minute presentation. the assignment deliverables include a presentation in pdf or ppt format with a recorded demo and a report. for the first assignment, the organization of the assignment is as follows ; individual work at the beginning, announcement of groups at the teaching assistant ( ta ) session, presentation given by groups in the session stated in the course lecture, and the delivery of a report. the presentation deliverable should contain an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide ). the report deliverable should include a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future ). what content should be part of the assignment one presentation deliverable of the capstone project?",
        "predicted_answer": "an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide ).",
        "true_answer": "the presentation deliverable should contain an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide )."
    },
    {
        "question": "the first assignment for the capstone project consists of two parts. part 1 is individual, where each student must come up with an idea for a web application that is innovative, useful, and simple to explain. part 2 involves presenting the ideas to the group, discussing advantages and disadvantages, and collectively choosing one idea to develop further. the group will then create a clickable demo using a design tool and prepare slides for a 5 - minute presentation. the assignment deliverables include a presentation in pdf or ppt format with a recorded demo and a report. for the first assignment, the organization of the assignment is as follows ; individual work at the beginning, announcement of groups at the teaching assistant ( ta ) session, presentation given by groups in the session stated in the course lecture, and the delivery of a report. the presentation deliverable should contain an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide ). the report deliverable should include a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future ). what should be encompassed within the report for assignment one in the capstone project course?",
        "predicted_answer": "the report deliverable should include a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future ).",
        "true_answer": "explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future )."
    },
    {
        "question": "nowadays, most developers use an agile approach because it is supposed to give better results and is appealing to programmers. many development processes correspond to the agile approach, which is explained in the agile manifesto ( https : / / agilemanifesto. org ). this have become so prevalent that even large companies that relied heavily on the waterfall model now have agile versions of their processes. why is agile approach widespread?",
        "predicted_answer": "because it is supposed to give better results and is appealing to programmers.",
        "true_answer": "most developers use an agile approach because it is supposed to give better results and is appealing to programmers."
    },
    {
        "question": "the first assignment for the capstone project consists of two parts. part 1 is individual, where each student must come up with an idea for a web application that is innovative, useful, and simple to explain. part 2 involves presenting the ideas to the group, discussing advantages and disadvantages, and collectively choosing one idea to develop further. the group will then create a clickable demo using a design tool and prepare slides for a 5 - minute presentation. the assignment deliverables include a presentation in pdf or ppt format with a recorded demo and a report. for the first assignment, the organization of the assignment is as follows ; individual work at the beginning, announcement of groups at the teaching assistant ( ta ) session, presentation given by groups in the session stated in the course lecture, and the delivery of a report. the presentation deliverable should contain an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide ). the report deliverable should include a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future ). what is the projected deliverable for the first assignment of the capstone project course?",
        "predicted_answer": "deliverables include a presentation in pdf or ppt format with a recorded demo and a report.",
        "true_answer": "the assignment deliverables include a presentation in pdf or ppt format with a recorded demo and a report."
    },
    {
        "question": "the first assignment for the capstone project consists of two parts. part 1 is individual, where each student must come up with an idea for a web application that is innovative, useful, and simple to explain. part 2 involves presenting the ideas to the group, discussing advantages and disadvantages, and collectively choosing one idea to develop further. the group will then create a clickable demo using a design tool and prepare slides for a 5 - minute presentation. the assignment deliverables include a presentation in pdf or ppt format with a recorded demo and a report. for the first assignment, the organization of the assignment is as follows ; individual work at the beginning, announcement of groups at the teaching assistant ( ta ) session, presentation given by groups in the session stated in the course lecture, and the delivery of a report. the presentation deliverable should contain an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide ). the report deliverable should include a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future ). which details need to be included in the report deliverable for the first assignment of the capstone project course?",
        "predicted_answer": "explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future ).",
        "true_answer": "the report deliverable should include a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future )."
    },
    {
        "question": "the first assignment for the capstone project consists of two parts. part 1 is individual, where each student must come up with an idea for a web application that is innovative, useful, and simple to explain. part 2 involves presenting the ideas to the group, discussing advantages and disadvantages, and collectively choosing one idea to develop further. the group will then create a clickable demo using a design tool and prepare slides for a 5 - minute presentation. the assignment deliverables include a presentation in pdf or ppt format with a recorded demo and a report. for the first assignment, the organization of the assignment is as follows ; individual work at the beginning, announcement of groups at the teaching assistant ( ta ) session, presentation given by groups in the session stated in the course lecture, and the delivery of a report. the presentation deliverable should contain an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide ). the report deliverable should include a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future ). what elements should be included in the presentation deliverable of the capstone project?",
        "predicted_answer": "an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide ).",
        "true_answer": "the presentation deliverable should contain an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide )."
    },
    {
        "question": "an important aspect of a software product is the need to talk to stakeholders. to do this effectively, you have to prepare a pitch and a demo. a pitch should take 2 - 5 minutes, be simple, straight to the point, fun ( if possible ), and insightful. it should let people understand why they should give you money. a pitch should be structured as follows : problem ( job - to - be - done ), your solution ( why is your solution creating a paradigm shift ), market and competitor analysis, team, business case, unique insights that you have, and ask. the problem section answers the \" why \" question. start with a question like, \" did you ever ask yourself? \" and explain the problem from the customer's perspective. your solution answers \" what \" and \" how. \". present your solution quickly and efficiently, explain the benefits, how it solves the problem, and how it changes everything ( paradigm shift ). for market and competitor analysis, make a 2 - dimensional graph ( find the right axes where your solution fits ) and show the market size if possible. in the team section, present your team with 2 + founders ( include pictures ). the business case should show a \" hockey stick \" growth projection but not promise anything before 3 years. explain your unique insight ( this is why you are the startup that will make it ). in the ask section, indicate what you need, be it money, feedback, or advertisement. the demo should be compelling, answer the problem statement nicely, be short, and work. what do we need to prepare for a stakeholder presentation session?",
        "predicted_answer": "a pitch and a demo.",
        "true_answer": "you have to prepare a pitch and a demo."
    },
    {
        "question": "an important aspect of a software product is the need to talk to stakeholders. to do this effectively, you have to prepare a pitch and a demo. a pitch should take 2 - 5 minutes, be simple, straight to the point, fun ( if possible ), and insightful. it should let people understand why they should give you money. a pitch should be structured as follows : problem ( job - to - be - done ), your solution ( why is your solution creating a paradigm shift ), market and competitor analysis, team, business case, unique insights that you have, and ask. the problem section answers the \" why \" question. start with a question like, \" did you ever ask yourself? \" and explain the problem from the customer's perspective. your solution answers \" what \" and \" how. \". present your solution quickly and efficiently, explain the benefits, how it solves the problem, and how it changes everything ( paradigm shift ). for market and competitor analysis, make a 2 - dimensional graph ( find the right axes where your solution fits ) and show the market size if possible. in the team section, present your team with 2 + founders ( include pictures ). the business case should show a \" hockey stick \" growth projection but not promise anything before 3 years. explain your unique insight ( this is why you are the startup that will make it ). in the ask section, indicate what you need, be it money, feedback, or advertisement. the demo should be compelling, answer the problem statement nicely, be short, and work. what questions does your solution section answer?",
        "predicted_answer": "your solution answers \" what \" and \" how. \". present your solution quickly and efficiently, explain the benefits, how it solves the problem, and how it changes everything ( paradigm shift ).",
        "true_answer": "your solution answers \" what \" and \" how. \"."
    },
    {
        "question": "the capstone project provides a complete experience of software development from ideation to product. the formal course structure is a mix of formal presentations and guest presentations. the course structure includes requirements elicitations with stakeholders, fast design and prototyping, architecture, practicalities of cybersecurity development following agile processes, and development using state - of - the - art development tools ( git repositories, integration servers, static analyzers ). if you want to learn more about the capstone project course, check the article in the 2nd international workshop on frontiers in software engineering education ( fisee 23 ), edited in lecture notes in computer science by springer ( https : / / link. springer. com / chapter / 10. 1007 / 978 - 3 - 031 - 48639 - 5 _ 3 ). the instructor of the capstone project is prof dr manuel oriol. manuel is a professor of computer science at constructor institute. he has 10 years of experience in academia, and 10 years in industry, co - authored 60 + articles on software engineering and software architecture, and graduated 4 doctoral students, and 25 + msc students. the teaching assistants are muhammad khalid and julia kotovich. mohammed is a phd researcher and lecturer at constructor university. julia kotovich is a phd researcher at constructor institute. to succeed in the program, students must have a strong foundation in programming skills in an imperative language at the cs bachelor level, as well as knowledge of algorithms and data structures at the same level. these foundational skills enable students to tackle the complexities of the capstone project and other advanced coursework. the course plan includes design & ideation, architecture, and initial development, portal ready and deployed, and advanced concepts and refinements based on customer feedback. the course includes an opportunity for students to attend guest lectures, which are presentations given by external lecturers from industry or academia. these lectures cover best practices and other computer science - related topics, providing students with insights from experienced professionals in the field. the start time of guest lectures can be verified in the actual course schedule. taking this course is mandatory for students enrolled in the ast and csse programs. it is a crucial part of the curriculum that ensures you gain the necessary practical and theoretical skills for your future career in software engineering and related fields. basic information about manuel oriol",
        "predicted_answer": "manuel is a professor of computer science at constructor institute. he has 10 years of experience in academia, and 10 years in industry, co - authored 60 + articles on software engineering and software architecture, and graduated 4 doctoral students, and 25 + msc students.",
        "true_answer": "manuel is a professor of computer science at constructor institute. he has 10 years of experience in academia,"
    },
    {
        "question": "an important aspect of a software product is the need to talk to stakeholders. to do this effectively, you have to prepare a pitch and a demo. a pitch should take 2 - 5 minutes, be simple, straight to the point, fun ( if possible ), and insightful. it should let people understand why they should give you money. a pitch should be structured as follows : problem ( job - to - be - done ), your solution ( why is your solution creating a paradigm shift ), market and competitor analysis, team, business case, unique insights that you have, and ask. the problem section answers the \" why \" question. start with a question like, \" did you ever ask yourself? \" and explain the problem from the customer's perspective. your solution answers \" what \" and \" how. \". present your solution quickly and efficiently, explain the benefits, how it solves the problem, and how it changes everything ( paradigm shift ). for market and competitor analysis, make a 2 - dimensional graph ( find the right axes where your solution fits ) and show the market size if possible. in the team section, present your team with 2 + founders ( include pictures ). the business case should show a \" hockey stick \" growth projection but not promise anything before 3 years. explain your unique insight ( this is why you are the startup that will make it ). in the ask section, indicate what you need, be it money, feedback, or advertisement. the demo should be compelling, answer the problem statement nicely, be short, and work. what are the qualities of a pitch?",
        "predicted_answer": "straight to the point, fun ( if possible ), and insightful.",
        "true_answer": "should take 2 - 5 minutes, be simple, straight to the point, fun ( if possible ), and insightful."
    },
    {
        "question": "there are several tools for the processes in software development. these tools are meant to support the development not to control it. during the development process in capstone, if tools do not work and this is expressed in a retrospective, it can be changed. the four main categories of tools that development teams need are design tools, source code versioning systems, software development platforms, and continuous integration servers. design tools help to present what a solution should look like and simulate its main interaction ( it is needed to show a project to stakeholders to make it concrete ). many people use powerpoint to show what they want to have. it is even possible to make clickable demos that way. many tools exist, an example is invision. this tool can be used to easily create a first draft. the main concepts are artboards ( screens / landing visualizations ), and interactions. interactions define an event and a landing artboard. a software development platform is a web tool that allows one to store and browse source code through a repository and organize the backlog and the testing process. there are now many platforms online that provide these kinds of functionalities for free or for subscriptions. popular examples include github ( bought by microsoft and is free for open source ), gitlab and gitorious ( free clones of github to use and install on - premises ), devops by microsoft, and jira by atlassian. a continuous integration server is a server that runs pipelines pulls from a repository, compiles the code, runs tests automatically, and notifies you if there is a problem. few recognized and professional tools exist. examples are jenkins ( open source and free ), gitlabci ( open source and free ), and azure pipelines ( by microsoft ). in the capstone project course, we will use the processes and tools that we presented. much of the training for tools should be done online by following tutorials. all these are the basics that everyone needs to understand to do a decent job. ta session will help and answer questions whenever possible. what does a software development platform allow you to do?",
        "predicted_answer": "a web tool that allows one to store and browse source code through a repository and organize the backlog and the testing process.",
        "true_answer": "is a web tool that allows one to store and browse source code through a repository and organize the backlog and the testing process."
    },
    {
        "question": "the capstone project provides a complete experience of software development from ideation to product. the formal course structure is a mix of formal presentations and guest presentations. the course structure includes requirements elicitations with stakeholders, fast design and prototyping, architecture, practicalities of cybersecurity development following agile processes, and development using state - of - the - art development tools ( git repositories, integration servers, static analyzers ). if you want to learn more about the capstone project course, check the article in the 2nd international workshop on frontiers in software engineering education ( fisee 23 ), edited in lecture notes in computer science by springer ( https : / / link. springer. com / chapter / 10. 1007 / 978 - 3 - 031 - 48639 - 5 _ 3 ). the instructor of the capstone project is prof dr manuel oriol. manuel is a professor of computer science at constructor institute. he has 10 years of experience in academia, and 10 years in industry, co - authored 60 + articles on software engineering and software architecture, and graduated 4 doctoral students, and 25 + msc students. the teaching assistants are muhammad khalid and julia kotovich. mohammed is a phd researcher and lecturer at constructor university. julia kotovich is a phd researcher at constructor institute. to succeed in the program, students must have a strong foundation in programming skills in an imperative language at the cs bachelor level, as well as knowledge of algorithms and data structures at the same level. these foundational skills enable students to tackle the complexities of the capstone project and other advanced coursework. the course plan includes design & ideation, architecture, and initial development, portal ready and deployed, and advanced concepts and refinements based on customer feedback. the course includes an opportunity for students to attend guest lectures, which are presentations given by external lecturers from industry or academia. these lectures cover best practices and other computer science - related topics, providing students with insights from experienced professionals in the field. the start time of guest lectures can be verified in the actual course schedule. taking this course is mandatory for students enrolled in the ast and csse programs. it is a crucial part of the curriculum that ensures you gain the necessary practical and theoretical skills for your future career in software engineering and related fields. what is the name of instructor of capstone project?",
        "predicted_answer": "prof dr manuel oriol.",
        "true_answer": "manuel oriol."
    },
    {
        "question": "the capstone project provides a complete experience of software development from ideation to product. the formal course structure is a mix of formal presentations and guest presentations. the course structure includes requirements elicitations with stakeholders, fast design and prototyping, architecture, practicalities of cybersecurity development following agile processes, and development using state - of - the - art development tools ( git repositories, integration servers, static analyzers ). if you want to learn more about the capstone project course, check the article in the 2nd international workshop on frontiers in software engineering education ( fisee 23 ), edited in lecture notes in computer science by springer ( https : / / link. springer. com / chapter / 10. 1007 / 978 - 3 - 031 - 48639 - 5 _ 3 ). the instructor of the capstone project is prof dr manuel oriol. manuel is a professor of computer science at constructor institute. he has 10 years of experience in academia, and 10 years in industry, co - authored 60 + articles on software engineering and software architecture, and graduated 4 doctoral students, and 25 + msc students. the teaching assistants are muhammad khalid and julia kotovich. mohammed is a phd researcher and lecturer at constructor university. julia kotovich is a phd researcher at constructor institute. to succeed in the program, students must have a strong foundation in programming skills in an imperative language at the cs bachelor level, as well as knowledge of algorithms and data structures at the same level. these foundational skills enable students to tackle the complexities of the capstone project and other advanced coursework. the course plan includes design & ideation, architecture, and initial development, portal ready and deployed, and advanced concepts and refinements based on customer feedback. the course includes an opportunity for students to attend guest lectures, which are presentations given by external lecturers from industry or academia. these lectures cover best practices and other computer science - related topics, providing students with insights from experienced professionals in the field. the start time of guest lectures can be verified in the actual course schedule. taking this course is mandatory for students enrolled in the ast and csse programs. it is a crucial part of the curriculum that ensures you gain the necessary practical and theoretical skills for your future career in software engineering and related fields. basic info about manuel oriol",
        "predicted_answer": "manuel is a professor of computer science at constructor institute. he has 10 years of experience in academia, and 10 years in industry, co - authored 60 + articles on software engineering and software architecture, and graduated 4 doctoral students, and 25 + msc students.",
        "true_answer": "manuel is a professor of computer science at constructor institute. he has 10 years of experience in academia,"
    },
    {
        "question": "the first assignment for the capstone project consists of two parts. part 1 is individual, where each student must come up with an idea for a web application that is innovative, useful, and simple to explain. part 2 involves presenting the ideas to the group, discussing advantages and disadvantages, and collectively choosing one idea to develop further. the group will then create a clickable demo using a design tool and prepare slides for a 5 - minute presentation. the assignment deliverables include a presentation in pdf or ppt format with a recorded demo and a report. for the first assignment, the organization of the assignment is as follows ; individual work at the beginning, announcement of groups at the teaching assistant ( ta ) session, presentation given by groups in the session stated in the course lecture, and the delivery of a report. the presentation deliverable should contain an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide ). the report deliverable should include a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future ). what should be contained within the report deliverable for the first assignment of the capstone project course?",
        "predicted_answer": "the report deliverable should include a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future ).",
        "true_answer": "a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future )."
    },
    {
        "question": "the first assignment for the capstone project consists of two parts. part 1 is individual, where each student must come up with an idea for a web application that is innovative, useful, and simple to explain. part 2 involves presenting the ideas to the group, discussing advantages and disadvantages, and collectively choosing one idea to develop further. the group will then create a clickable demo using a design tool and prepare slides for a 5 - minute presentation. the assignment deliverables include a presentation in pdf or ppt format with a recorded demo and a report. for the first assignment, the organization of the assignment is as follows ; individual work at the beginning, announcement of groups at the teaching assistant ( ta ) session, presentation given by groups in the session stated in the course lecture, and the delivery of a report. the presentation deliverable should contain an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide ). the report deliverable should include a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future ). what is the first task students tackle upon starting the capstone project course?",
        "predicted_answer": "part 1 is individual, where each student must come up with an idea for a web application that is innovative, useful, and simple to explain. part 2 involves presenting the ideas to the group, discussing advantages and disadvantages, and collectively choosing one idea to develop further.",
        "true_answer": "the first assignment for the capstone project consists of two parts. part 1 is individual, where each student must come up with an idea for a web application that is innovative, useful, and simple to explain. part 2 involves presenting the ideas to the group, discussing advantages and disadvantages, and collectively choosing one idea to develop further."
    },
    {
        "question": "the capstone project provides a complete experience of software development from ideation to product. the formal course structure is a mix of formal presentations and guest presentations. the course structure includes requirements elicitations with stakeholders, fast design and prototyping, architecture, practicalities of cybersecurity development following agile processes, and development using state - of - the - art development tools ( git repositories, integration servers, static analyzers ). if you want to learn more about the capstone project course, check the article in the 2nd international workshop on frontiers in software engineering education ( fisee 23 ), edited in lecture notes in computer science by springer ( https : / / link. springer. com / chapter / 10. 1007 / 978 - 3 - 031 - 48639 - 5 _ 3 ). the instructor of the capstone project is prof dr manuel oriol. manuel is a professor of computer science at constructor institute. he has 10 years of experience in academia, and 10 years in industry, co - authored 60 + articles on software engineering and software architecture, and graduated 4 doctoral students, and 25 + msc students. the teaching assistants are muhammad khalid and julia kotovich. mohammed is a phd researcher and lecturer at constructor university. julia kotovich is a phd researcher at constructor institute. to succeed in the program, students must have a strong foundation in programming skills in an imperative language at the cs bachelor level, as well as knowledge of algorithms and data structures at the same level. these foundational skills enable students to tackle the complexities of the capstone project and other advanced coursework. the course plan includes design & ideation, architecture, and initial development, portal ready and deployed, and advanced concepts and refinements based on customer feedback. the course includes an opportunity for students to attend guest lectures, which are presentations given by external lecturers from industry or academia. these lectures cover best practices and other computer science - related topics, providing students with insights from experienced professionals in the field. the start time of guest lectures can be verified in the actual course schedule. taking this course is mandatory for students enrolled in the ast and csse programs. it is a crucial part of the curriculum that ensures you gain the necessary practical and theoretical skills for your future career in software engineering and related fields. what is the name of the instructor of capstone project?",
        "predicted_answer": "manuel oriol.",
        "true_answer": "prof dr manuel oriol."
    },
    {
        "question": "the capstone project spans three semesters. each semester offers 5 ects credits and each ects credit corresponds to 25 to 30 working hours. during the first semester of the capstone project, students focus on creating and proposing mocks, performing requirements elicitation, prototyping, approaching customers and users, specifying user stories, and organizing themselves using collaborative tools. in the second semester, students work on describing and defending a software architecture, coding in groups and as a large team, integrating independent works, using a source code versioning system, and specifying user stories. in the third semester, students engage in practical cybersecurity, hold discussions with stakeholders, practice machine learning, work with continuous improvement tools, and organize themselves through collaborative tools. students work on a single project throughout the course, allowing them to dive deeply into their chosen topic and apply their knowledge in a practical setting. groups or tribes for the capstone project are created in several ways. students may organize themselves into groups or tribes, or they may be assigned randomly if needed. each group typically consists of four to five students. a tribe consists of several groups. students seeking placement in specific groups should contact the teaching assistants ( tas ). the organizational points or grading of the capstone project is structured as follows ; 1 / 3 of the grade being a cohort ( tribe ) grade, and 2 / 3 of the grade being a group assignment. note that in rare cases group members are regarded independently. how long is the capstone project course?",
        "predicted_answer": "three semesters.",
        "true_answer": "the capstone project spans three semesters."
    },
    {
        "question": "the first assignment for the capstone project consists of two parts. part 1 is individual, where each student must come up with an idea for a web application that is innovative, useful, and simple to explain. part 2 involves presenting the ideas to the group, discussing advantages and disadvantages, and collectively choosing one idea to develop further. the group will then create a clickable demo using a design tool and prepare slides for a 5 - minute presentation. the assignment deliverables include a presentation in pdf or ppt format with a recorded demo and a report. for the first assignment, the organization of the assignment is as follows ; individual work at the beginning, announcement of groups at the teaching assistant ( ta ) session, presentation given by groups in the session stated in the course lecture, and the delivery of a report. the presentation deliverable should contain an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide ). the report deliverable should include a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future ). what components are expected in the report submission for the first assignment of the capstone project course?",
        "predicted_answer": "explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future ).",
        "true_answer": "the report deliverable should include a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future )."
    },
    {
        "question": "the capstone project spans three semesters. each semester offers 5 ects credits and each ects credit corresponds to 25 to 30 working hours. during the first semester of the capstone project, students focus on creating and proposing mocks, performing requirements elicitation, prototyping, approaching customers and users, specifying user stories, and organizing themselves using collaborative tools. in the second semester, students work on describing and defending a software architecture, coding in groups and as a large team, integrating independent works, using a source code versioning system, and specifying user stories. in the third semester, students engage in practical cybersecurity, hold discussions with stakeholders, practice machine learning, work with continuous improvement tools, and organize themselves through collaborative tools. students work on a single project throughout the course, allowing them to dive deeply into their chosen topic and apply their knowledge in a practical setting. groups or tribes for the capstone project are created in several ways. students may organize themselves into groups or tribes, or they may be assigned randomly if needed. each group typically consists of four to five students. a tribe consists of several groups. students seeking placement in specific groups should contact the teaching assistants ( tas ). the organizational points or grading of the capstone project is structured as follows ; 1 / 3 of the grade being a cohort ( tribe ) grade, and 2 / 3 of the grade being a group assignment. note that in rare cases group members are regarded independently. which tools do students use in the second semester for version control?",
        "predicted_answer": "describing and defending a software architecture, coding in groups and as a large team, integrating independent works, using a source code versioning system, and specifying user stories.",
        "true_answer": "source code versioning system,"
    },
    {
        "question": "the capstone project provides a complete experience of software development from ideation to product. the formal course structure is a mix of formal presentations and guest presentations. the course structure includes requirements elicitations with stakeholders, fast design and prototyping, architecture, practicalities of cybersecurity development following agile processes, and development using state - of - the - art development tools ( git repositories, integration servers, static analyzers ). if you want to learn more about the capstone project course, check the article in the 2nd international workshop on frontiers in software engineering education ( fisee 23 ), edited in lecture notes in computer science by springer ( https : / / link. springer. com / chapter / 10. 1007 / 978 - 3 - 031 - 48639 - 5 _ 3 ). the instructor of the capstone project is prof dr manuel oriol. manuel is a professor of computer science at constructor institute. he has 10 years of experience in academia, and 10 years in industry, co - authored 60 + articles on software engineering and software architecture, and graduated 4 doctoral students, and 25 + msc students. the teaching assistants are muhammad khalid and julia kotovich. mohammed is a phd researcher and lecturer at constructor university. julia kotovich is a phd researcher at constructor institute. to succeed in the program, students must have a strong foundation in programming skills in an imperative language at the cs bachelor level, as well as knowledge of algorithms and data structures at the same level. these foundational skills enable students to tackle the complexities of the capstone project and other advanced coursework. the course plan includes design & ideation, architecture, and initial development, portal ready and deployed, and advanced concepts and refinements based on customer feedback. the course includes an opportunity for students to attend guest lectures, which are presentations given by external lecturers from industry or academia. these lectures cover best practices and other computer science - related topics, providing students with insights from experienced professionals in the field. the start time of guest lectures can be verified in the actual course schedule. taking this course is mandatory for students enrolled in the ast and csse programs. it is a crucial part of the curriculum that ensures you gain the necessary practical and theoretical skills for your future career in software engineering and related fields. who is the teacher of capstone project?",
        "predicted_answer": "prof dr manuel oriol.",
        "true_answer": "prof dr manuel oriol. manuel is a professor of computer science at constructor institute."
    },
    {
        "question": "scrum is a framework used primarily in agile software development, but it's also utilized in various other fields. in scrum, the work is organized in sprints with a duration of 1 week to 1 month. during a sprint, requirements do not change. at the beginning of the sprint, there is a sprint planning event, in which work items are scheduled for the sprint. during the sprint, daily 15 - minute scrum meetings take place for the team to organize and talk about potential issues. people indicate what they did the day before, and what they will do today. if there are impediments to the sprint goals. at the end of the sprint, there is a sprint review which presents the results of the sprint to stakeholders and uses demos. the group discusses their plans for the future. after that, there is a sprint retrospective where the team talks about their impediments, issues, and positive aspects and tries to improve the process for the next sprint and forward. roles in scrum are scrum master, product owner, and development team. a scrum master is the person who takes care of the process, coaches people on scrum, ensures that there is harmony in the team, and makes sure that everyone is going in the right direction. a product owner defines what is in the product backlog, makes sure that everyone understands the backlog and the direction it takes for the requirements, and defines the requirements for the project and the sprint. the development team is made up of developers. work in scrum is organized following a backlog. a backlog is a list of work items that are organized with priorities. work items should be achievable in a sprint. work items list the requirements of the change that needs to be done, they also often include a definition of done. often such requirements are expressed as a user story following this structure : \" as a... i want to... so that... \". there is the product backlog for the whole product and the sprint backlog for a given sprint. if user stories are too large, they can be an epic which then contains several user stories. in the capstone project, a sprint is 2 weeks long, each review is typically graded, and each time student feedback is gathered using menti. how is work organized in scrum",
        "predicted_answer": "the work is organized in sprints with a duration of 1 week to 1 month.",
        "true_answer": "work is organized in sprints"
    },
    {
        "question": "the first assignment for the capstone project consists of two parts. part 1 is individual, where each student must come up with an idea for a web application that is innovative, useful, and simple to explain. part 2 involves presenting the ideas to the group, discussing advantages and disadvantages, and collectively choosing one idea to develop further. the group will then create a clickable demo using a design tool and prepare slides for a 5 - minute presentation. the assignment deliverables include a presentation in pdf or ppt format with a recorded demo and a report. for the first assignment, the organization of the assignment is as follows ; individual work at the beginning, announcement of groups at the teaching assistant ( ta ) session, presentation given by groups in the session stated in the course lecture, and the delivery of a report. the presentation deliverable should contain an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide ). the report deliverable should include a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future ). what is the expected result for the initial task of the capstone project course?",
        "predicted_answer": "the assignment deliverables include a presentation in pdf or ppt format with a recorded demo and a report.",
        "true_answer": "deliverables include a presentation in pdf or ppt format with a recorded demo and a report."
    },
    {
        "question": "there are several tools for the processes in software development. these tools are meant to support the development not to control it. during the development process in capstone, if tools do not work and this is expressed in a retrospective, it can be changed. the four main categories of tools that development teams need are design tools, source code versioning systems, software development platforms, and continuous integration servers. design tools help to present what a solution should look like and simulate its main interaction ( it is needed to show a project to stakeholders to make it concrete ). many people use powerpoint to show what they want to have. it is even possible to make clickable demos that way. many tools exist, an example is invision. this tool can be used to easily create a first draft. the main concepts are artboards ( screens / landing visualizations ), and interactions. interactions define an event and a landing artboard. a software development platform is a web tool that allows one to store and browse source code through a repository and organize the backlog and the testing process. there are now many platforms online that provide these kinds of functionalities for free or for subscriptions. popular examples include github ( bought by microsoft and is free for open source ), gitlab and gitorious ( free clones of github to use and install on - premises ), devops by microsoft, and jira by atlassian. a continuous integration server is a server that runs pipelines pulls from a repository, compiles the code, runs tests automatically, and notifies you if there is a problem. few recognized and professional tools exist. examples are jenkins ( open source and free ), gitlabci ( open source and free ), and azure pipelines ( by microsoft ). in the capstone project course, we will use the processes and tools that we presented. much of the training for tools should be done online by following tutorials. all these are the basics that everyone needs to understand to do a decent job. ta session will help and answer questions whenever possible. can you name some examples of continuous integration servers?",
        "predicted_answer": "",
        "true_answer": "jenkins ( open source and free ), gitlabci ( open source and free ), and azure pipelines ( by microsoft )."
    },
    {
        "question": "the capstone project spans three semesters. each semester offers 5 ects credits and each ects credit corresponds to 25 to 30 working hours. during the first semester of the capstone project, students focus on creating and proposing mocks, performing requirements elicitation, prototyping, approaching customers and users, specifying user stories, and organizing themselves using collaborative tools. in the second semester, students work on describing and defending a software architecture, coding in groups and as a large team, integrating independent works, using a source code versioning system, and specifying user stories. in the third semester, students engage in practical cybersecurity, hold discussions with stakeholders, practice machine learning, work with continuous improvement tools, and organize themselves through collaborative tools. students work on a single project throughout the course, allowing them to dive deeply into their chosen topic and apply their knowledge in a practical setting. groups or tribes for the capstone project are created in several ways. students may organize themselves into groups or tribes, or they may be assigned randomly if needed. each group typically consists of four to five students. a tribe consists of several groups. students seeking placement in specific groups should contact the teaching assistants ( tas ). the organizational points or grading of the capstone project is structured as follows ; 1 / 3 of the grade being a cohort ( tribe ) grade, and 2 / 3 of the grade being a group assignment. note that in rare cases group members are regarded independently. how many ects credits does each semester of the capstone project offer?",
        "predicted_answer": "5 ects credits",
        "true_answer": "5 ects"
    },
    {
        "question": "software architecture is a high - level view of a piece of software indicating its main subparts, an explanation of the diverse pieces of software that collaborate, or simply a boxes and arrow diagram ( or several ). the book pattern - oriented software architecture : a system of patterns ( https : / / www. amazon. com / pattern - oriented - software - architecture - system - patterns / dp / 0471958697 ) is a suggested resource for learning about software architecture patterns. in essence, there are types of architecture that make sense from a requirements standpoint ( functional and non - functional ). examples of software architecture are mvc ( model - view - controller ), etl ( data extraction - transformation - loading ), layered, pub - sub ( publish subscribe ), and microservices. for quick reference on software architecture, visit the following wikipedia page ( https : / / en. wikipedia. org / wiki / architectural _ pattern ). information about mvc can be found at ( https : / / en. wikipedia. org / wiki / model - view - controller ). information about etl can be found at ( https : / / en. wikipedia. org / wiki / extract, _ transform, _ load ). information on layered architecture can be found at ( https : / / www. oreilly. com / library / view / software - architecture - patterns / 9781491971437 / ch01. html ). information on pub - sub can be found at ( https : / / cloud. google. com / pubsub / architecture ). information on microservices can be found at ( https : / / www. oreilly. com / library / view / software - architecture - patterns / 9781491971437 / ch04. html ). many other books on software architecture exist here are a few recommendations ( https : / / www. oreilly. com / library / view / fundamentals - of - software / 9781492043447 /, https : / / www. oreilly. com / library / view / building - microservices - 2nd / 9781492034018 /, https : / / www. amazon. com / just - enough - software - architecture - risk - driven / dp / 0984618104 ). can you explain the concept of software architecture?",
        "predicted_answer": "high - level view of a piece of software indicating its main subparts,",
        "true_answer": "high - level view of a piece of software indicating its main subparts, an explanation of the diverse pieces of software that collaborate, or simply a boxes and arrow diagram ( or several )."
    },
    {
        "question": "scrum is a framework used primarily in agile software development, but it's also utilized in various other fields. in scrum, the work is organized in sprints with a duration of 1 week to 1 month. during a sprint, requirements do not change. at the beginning of the sprint, there is a sprint planning event, in which work items are scheduled for the sprint. during the sprint, daily 15 - minute scrum meetings take place for the team to organize and talk about potential issues. people indicate what they did the day before, and what they will do today. if there are impediments to the sprint goals. at the end of the sprint, there is a sprint review which presents the results of the sprint to stakeholders and uses demos. the group discusses their plans for the future. after that, there is a sprint retrospective where the team talks about their impediments, issues, and positive aspects and tries to improve the process for the next sprint and forward. roles in scrum are scrum master, product owner, and development team. a scrum master is the person who takes care of the process, coaches people on scrum, ensures that there is harmony in the team, and makes sure that everyone is going in the right direction. a product owner defines what is in the product backlog, makes sure that everyone understands the backlog and the direction it takes for the requirements, and defines the requirements for the project and the sprint. the development team is made up of developers. work in scrum is organized following a backlog. a backlog is a list of work items that are organized with priorities. work items should be achievable in a sprint. work items list the requirements of the change that needs to be done, they also often include a definition of done. often such requirements are expressed as a user story following this structure : \" as a... i want to... so that... \". there is the product backlog for the whole product and the sprint backlog for a given sprint. if user stories are too large, they can be an epic which then contains several user stories. in the capstone project, a sprint is 2 weeks long, each review is typically graded, and each time student feedback is gathered using menti. what is the backlog in scrum?",
        "predicted_answer": "a backlog is a list of work items that are organized with priorities.",
        "true_answer": "a list of work items that are organized with priorities."
    },
    {
        "question": "an important aspect of a software product is the need to talk to stakeholders. to do this effectively, you have to prepare a pitch and a demo. a pitch should take 2 - 5 minutes, be simple, straight to the point, fun ( if possible ), and insightful. it should let people understand why they should give you money. a pitch should be structured as follows : problem ( job - to - be - done ), your solution ( why is your solution creating a paradigm shift ), market and competitor analysis, team, business case, unique insights that you have, and ask. the problem section answers the \" why \" question. start with a question like, \" did you ever ask yourself? \" and explain the problem from the customer's perspective. your solution answers \" what \" and \" how. \". present your solution quickly and efficiently, explain the benefits, how it solves the problem, and how it changes everything ( paradigm shift ). for market and competitor analysis, make a 2 - dimensional graph ( find the right axes where your solution fits ) and show the market size if possible. in the team section, present your team with 2 + founders ( include pictures ). the business case should show a \" hockey stick \" growth projection but not promise anything before 3 years. explain your unique insight ( this is why you are the startup that will make it ). in the ask section, indicate what you need, be it money, feedback, or advertisement. the demo should be compelling, answer the problem statement nicely, be short, and work. how should the problem be explained in a pitch?",
        "predicted_answer": "from the customer's perspective.",
        "true_answer": "explain the problem from the customer's perspective."
    },
    {
        "question": "the capstone project provides a complete experience of software development from ideation to product. the formal course structure is a mix of formal presentations and guest presentations. the course structure includes requirements elicitations with stakeholders, fast design and prototyping, architecture, practicalities of cybersecurity development following agile processes, and development using state - of - the - art development tools ( git repositories, integration servers, static analyzers ). if you want to learn more about the capstone project course, check the article in the 2nd international workshop on frontiers in software engineering education ( fisee 23 ), edited in lecture notes in computer science by springer ( https : / / link. springer. com / chapter / 10. 1007 / 978 - 3 - 031 - 48639 - 5 _ 3 ). the instructor of the capstone project is prof dr manuel oriol. manuel is a professor of computer science at constructor institute. he has 10 years of experience in academia, and 10 years in industry, co - authored 60 + articles on software engineering and software architecture, and graduated 4 doctoral students, and 25 + msc students. the teaching assistants are muhammad khalid and julia kotovich. mohammed is a phd researcher and lecturer at constructor university. julia kotovich is a phd researcher at constructor institute. to succeed in the program, students must have a strong foundation in programming skills in an imperative language at the cs bachelor level, as well as knowledge of algorithms and data structures at the same level. these foundational skills enable students to tackle the complexities of the capstone project and other advanced coursework. the course plan includes design & ideation, architecture, and initial development, portal ready and deployed, and advanced concepts and refinements based on customer feedback. the course includes an opportunity for students to attend guest lectures, which are presentations given by external lecturers from industry or academia. these lectures cover best practices and other computer science - related topics, providing students with insights from experienced professionals in the field. the start time of guest lectures can be verified in the actual course schedule. taking this course is mandatory for students enrolled in the ast and csse programs. it is a crucial part of the curriculum that ensures you gain the necessary practical and theoretical skills for your future career in software engineering and related fields. information about manuel oriol",
        "predicted_answer": "manuel is a professor of computer science at constructor institute. he has 10 years of experience in academia, and 10 years in industry, co - authored 60 + articles on software engineering and software architecture, and graduated 4 doctoral students, and 25 + msc students.",
        "true_answer": "manuel is a professor of computer science at constructor institute."
    },
    {
        "question": "the first assignment for the capstone project consists of two parts. part 1 is individual, where each student must come up with an idea for a web application that is innovative, useful, and simple to explain. part 2 involves presenting the ideas to the group, discussing advantages and disadvantages, and collectively choosing one idea to develop further. the group will then create a clickable demo using a design tool and prepare slides for a 5 - minute presentation. the assignment deliverables include a presentation in pdf or ppt format with a recorded demo and a report. for the first assignment, the organization of the assignment is as follows ; individual work at the beginning, announcement of groups at the teaching assistant ( ta ) session, presentation given by groups in the session stated in the course lecture, and the delivery of a report. the presentation deliverable should contain an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide ). the report deliverable should include a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future ). what is the expected submission for the first task of the capstone project?",
        "predicted_answer": "the assignment deliverables include a presentation in pdf or ppt format with a recorded demo and a report.",
        "true_answer": "deliverables include a presentation in pdf or ppt format with a recorded demo and a report."
    },
    {
        "question": "the capstone project provides a complete experience of software development from ideation to product. the formal course structure is a mix of formal presentations and guest presentations. the course structure includes requirements elicitations with stakeholders, fast design and prototyping, architecture, practicalities of cybersecurity development following agile processes, and development using state - of - the - art development tools ( git repositories, integration servers, static analyzers ). if you want to learn more about the capstone project course, check the article in the 2nd international workshop on frontiers in software engineering education ( fisee 23 ), edited in lecture notes in computer science by springer ( https : / / link. springer. com / chapter / 10. 1007 / 978 - 3 - 031 - 48639 - 5 _ 3 ). the instructor of the capstone project is prof dr manuel oriol. manuel is a professor of computer science at constructor institute. he has 10 years of experience in academia, and 10 years in industry, co - authored 60 + articles on software engineering and software architecture, and graduated 4 doctoral students, and 25 + msc students. the teaching assistants are muhammad khalid and julia kotovich. mohammed is a phd researcher and lecturer at constructor university. julia kotovich is a phd researcher at constructor institute. to succeed in the program, students must have a strong foundation in programming skills in an imperative language at the cs bachelor level, as well as knowledge of algorithms and data structures at the same level. these foundational skills enable students to tackle the complexities of the capstone project and other advanced coursework. the course plan includes design & ideation, architecture, and initial development, portal ready and deployed, and advanced concepts and refinements based on customer feedback. the course includes an opportunity for students to attend guest lectures, which are presentations given by external lecturers from industry or academia. these lectures cover best practices and other computer science - related topics, providing students with insights from experienced professionals in the field. the start time of guest lectures can be verified in the actual course schedule. taking this course is mandatory for students enrolled in the ast and csse programs. it is a crucial part of the curriculum that ensures you gain the necessary practical and theoretical skills for your future career in software engineering and related fields. how can students know about the start time of a guest lecture?",
        "predicted_answer": "the start time of guest lectures can be verified in the actual course schedule.",
        "true_answer": "start time of guest lectures can be verified in the actual course schedule."
    },
    {
        "question": "the first assignment for the capstone project consists of two parts. part 1 is individual, where each student must come up with an idea for a web application that is innovative, useful, and simple to explain. part 2 involves presenting the ideas to the group, discussing advantages and disadvantages, and collectively choosing one idea to develop further. the group will then create a clickable demo using a design tool and prepare slides for a 5 - minute presentation. the assignment deliverables include a presentation in pdf or ppt format with a recorded demo and a report. for the first assignment, the organization of the assignment is as follows ; individual work at the beginning, announcement of groups at the teaching assistant ( ta ) session, presentation given by groups in the session stated in the course lecture, and the delivery of a report. the presentation deliverable should contain an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide ). the report deliverable should include a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future ). what content is required for the presentation deliverable of the initial assignment?",
        "predicted_answer": "an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide ).",
        "true_answer": "the presentation deliverable should contain an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide )."
    },
    {
        "question": "there are several tools for the processes in software development. these tools are meant to support the development not to control it. during the development process in capstone, if tools do not work and this is expressed in a retrospective, it can be changed. the four main categories of tools that development teams need are design tools, source code versioning systems, software development platforms, and continuous integration servers. design tools help to present what a solution should look like and simulate its main interaction ( it is needed to show a project to stakeholders to make it concrete ). many people use powerpoint to show what they want to have. it is even possible to make clickable demos that way. many tools exist, an example is invision. this tool can be used to easily create a first draft. the main concepts are artboards ( screens / landing visualizations ), and interactions. interactions define an event and a landing artboard. a software development platform is a web tool that allows one to store and browse source code through a repository and organize the backlog and the testing process. there are now many platforms online that provide these kinds of functionalities for free or for subscriptions. popular examples include github ( bought by microsoft and is free for open source ), gitlab and gitorious ( free clones of github to use and install on - premises ), devops by microsoft, and jira by atlassian. a continuous integration server is a server that runs pipelines pulls from a repository, compiles the code, runs tests automatically, and notifies you if there is a problem. few recognized and professional tools exist. examples are jenkins ( open source and free ), gitlabci ( open source and free ), and azure pipelines ( by microsoft ). in the capstone project course, we will use the processes and tools that we presented. much of the training for tools should be done online by following tutorials. all these are the basics that everyone needs to understand to do a decent job. ta session will help and answer questions whenever possible. what can be done if tools do not work during the capstone development process?",
        "predicted_answer": "",
        "true_answer": "it can be changed."
    },
    {
        "question": "an important aspect of a software product is the need to talk to stakeholders. to do this effectively, you have to prepare a pitch and a demo. a pitch should take 2 - 5 minutes, be simple, straight to the point, fun ( if possible ), and insightful. it should let people understand why they should give you money. a pitch should be structured as follows : problem ( job - to - be - done ), your solution ( why is your solution creating a paradigm shift ), market and competitor analysis, team, business case, unique insights that you have, and ask. the problem section answers the \" why \" question. start with a question like, \" did you ever ask yourself? \" and explain the problem from the customer's perspective. your solution answers \" what \" and \" how. \". present your solution quickly and efficiently, explain the benefits, how it solves the problem, and how it changes everything ( paradigm shift ). for market and competitor analysis, make a 2 - dimensional graph ( find the right axes where your solution fits ) and show the market size if possible. in the team section, present your team with 2 + founders ( include pictures ). the business case should show a \" hockey stick \" growth projection but not promise anything before 3 years. explain your unique insight ( this is why you are the startup that will make it ). in the ask section, indicate what you need, be it money, feedback, or advertisement. the demo should be compelling, answer the problem statement nicely, be short, and work. what should be shown in the team section of a pitch?",
        "predicted_answer": "in the team section, present your team with 2 + founders ( include pictures ).",
        "true_answer": "team with 2 + founders ( include pictures )."
    },
    {
        "question": "an important aspect of a software product is the need to talk to stakeholders. to do this effectively, you have to prepare a pitch and a demo. a pitch should take 2 - 5 minutes, be simple, straight to the point, fun ( if possible ), and insightful. it should let people understand why they should give you money. a pitch should be structured as follows : problem ( job - to - be - done ), your solution ( why is your solution creating a paradigm shift ), market and competitor analysis, team, business case, unique insights that you have, and ask. the problem section answers the \" why \" question. start with a question like, \" did you ever ask yourself? \" and explain the problem from the customer's perspective. your solution answers \" what \" and \" how. \". present your solution quickly and efficiently, explain the benefits, how it solves the problem, and how it changes everything ( paradigm shift ). for market and competitor analysis, make a 2 - dimensional graph ( find the right axes where your solution fits ) and show the market size if possible. in the team section, present your team with 2 + founders ( include pictures ). the business case should show a \" hockey stick \" growth projection but not promise anything before 3 years. explain your unique insight ( this is why you are the startup that will make it ). in the ask section, indicate what you need, be it money, feedback, or advertisement. the demo should be compelling, answer the problem statement nicely, be short, and work. what are the key points for a compelling demo?",
        "predicted_answer": "should be compelling, answer the problem statement nicely, be short, and work.",
        "true_answer": "the demo should be compelling, answer the problem statement nicely, be short, and work."
    },
    {
        "question": "the first assignment for the capstone project consists of two parts. part 1 is individual, where each student must come up with an idea for a web application that is innovative, useful, and simple to explain. part 2 involves presenting the ideas to the group, discussing advantages and disadvantages, and collectively choosing one idea to develop further. the group will then create a clickable demo using a design tool and prepare slides for a 5 - minute presentation. the assignment deliverables include a presentation in pdf or ppt format with a recorded demo and a report. for the first assignment, the organization of the assignment is as follows ; individual work at the beginning, announcement of groups at the teaching assistant ( ta ) session, presentation given by groups in the session stated in the course lecture, and the delivery of a report. the presentation deliverable should contain an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide ). the report deliverable should include a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future ). what components are expected in the presentation submission of the first assignment?",
        "predicted_answer": "an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide ).",
        "true_answer": "the presentation deliverable should contain an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide )."
    },
    {
        "question": "software architecture is a high - level view of a piece of software indicating its main subparts, an explanation of the diverse pieces of software that collaborate, or simply a boxes and arrow diagram ( or several ). the book pattern - oriented software architecture : a system of patterns ( https : / / www. amazon. com / pattern - oriented - software - architecture - system - patterns / dp / 0471958697 ) is a suggested resource for learning about software architecture patterns. in essence, there are types of architecture that make sense from a requirements standpoint ( functional and non - functional ). examples of software architecture are mvc ( model - view - controller ), etl ( data extraction - transformation - loading ), layered, pub - sub ( publish subscribe ), and microservices. for quick reference on software architecture, visit the following wikipedia page ( https : / / en. wikipedia. org / wiki / architectural _ pattern ). information about mvc can be found at ( https : / / en. wikipedia. org / wiki / model - view - controller ). information about etl can be found at ( https : / / en. wikipedia. org / wiki / extract, _ transform, _ load ). information on layered architecture can be found at ( https : / / www. oreilly. com / library / view / software - architecture - patterns / 9781491971437 / ch01. html ). information on pub - sub can be found at ( https : / / cloud. google. com / pubsub / architecture ). information on microservices can be found at ( https : / / www. oreilly. com / library / view / software - architecture - patterns / 9781491971437 / ch04. html ). many other books on software architecture exist here are a few recommendations ( https : / / www. oreilly. com / library / view / fundamentals - of - software / 9781492043447 /, https : / / www. oreilly. com / library / view / building - microservices - 2nd / 9781492034018 /, https : / / www. amazon. com / just - enough - software - architecture - risk - driven / dp / 0984618104 ). where can i find more information about architectural patterns?",
        "predicted_answer": "( https : / / en. wikipedia. org / wiki / model - view - controller ). information about etl can be found at ( https : / / en. wikipedia. org / wiki / extract, _ transform, _ load ). information on layered architecture can be found at ( https : / / www. oreilly. com / library / view / software - architecture - patterns / 9781491971437 / ch01. html ). information on pub - sub can be found at ( https : / / cloud. google. com / pubsub / architecture ). information on microservices can be found at ( https : / / www. oreilly. com / library / view / software - architecture - patterns / 9781491971437 / ch04. html ).",
        "true_answer": "https : / / en. wikipedia. org / wiki / architectural _ pattern )"
    },
    {
        "question": "an important aspect of a software product is the need to talk to stakeholders. to do this effectively, you have to prepare a pitch and a demo. a pitch should take 2 - 5 minutes, be simple, straight to the point, fun ( if possible ), and insightful. it should let people understand why they should give you money. a pitch should be structured as follows : problem ( job - to - be - done ), your solution ( why is your solution creating a paradigm shift ), market and competitor analysis, team, business case, unique insights that you have, and ask. the problem section answers the \" why \" question. start with a question like, \" did you ever ask yourself? \" and explain the problem from the customer's perspective. your solution answers \" what \" and \" how. \". present your solution quickly and efficiently, explain the benefits, how it solves the problem, and how it changes everything ( paradigm shift ). for market and competitor analysis, make a 2 - dimensional graph ( find the right axes where your solution fits ) and show the market size if possible. in the team section, present your team with 2 + founders ( include pictures ). the business case should show a \" hockey stick \" growth projection but not promise anything before 3 years. explain your unique insight ( this is why you are the startup that will make it ). in the ask section, indicate what you need, be it money, feedback, or advertisement. the demo should be compelling, answer the problem statement nicely, be short, and work. what should be shown in the business case?",
        "predicted_answer": "the business case should show a \" hockey stick \" growth projection but not promise anything before 3 years.",
        "true_answer": "the business case should show a \" hockey stick \" growth projection but not promise anything before 3 years. explain your unique insight ( this is why you are the startup that will make it )."
    },
    {
        "question": "the capstone project provides a complete experience of software development from ideation to product. the formal course structure is a mix of formal presentations and guest presentations. the course structure includes requirements elicitations with stakeholders, fast design and prototyping, architecture, practicalities of cybersecurity development following agile processes, and development using state - of - the - art development tools ( git repositories, integration servers, static analyzers ). if you want to learn more about the capstone project course, check the article in the 2nd international workshop on frontiers in software engineering education ( fisee 23 ), edited in lecture notes in computer science by springer ( https : / / link. springer. com / chapter / 10. 1007 / 978 - 3 - 031 - 48639 - 5 _ 3 ). the instructor of the capstone project is prof dr manuel oriol. manuel is a professor of computer science at constructor institute. he has 10 years of experience in academia, and 10 years in industry, co - authored 60 + articles on software engineering and software architecture, and graduated 4 doctoral students, and 25 + msc students. the teaching assistants are muhammad khalid and julia kotovich. mohammed is a phd researcher and lecturer at constructor university. julia kotovich is a phd researcher at constructor institute. to succeed in the program, students must have a strong foundation in programming skills in an imperative language at the cs bachelor level, as well as knowledge of algorithms and data structures at the same level. these foundational skills enable students to tackle the complexities of the capstone project and other advanced coursework. the course plan includes design & ideation, architecture, and initial development, portal ready and deployed, and advanced concepts and refinements based on customer feedback. the course includes an opportunity for students to attend guest lectures, which are presentations given by external lecturers from industry or academia. these lectures cover best practices and other computer science - related topics, providing students with insights from experienced professionals in the field. the start time of guest lectures can be verified in the actual course schedule. taking this course is mandatory for students enrolled in the ast and csse programs. it is a crucial part of the curriculum that ensures you gain the necessary practical and theoretical skills for your future career in software engineering and related fields. give some basic information about manuel oriol",
        "predicted_answer": "manuel is a professor of computer science at constructor institute. he has 10 years of experience in academia, and 10 years in industry, co - authored 60 + articles on software engineering and software architecture, and graduated 4 doctoral students, and 25 + msc students.",
        "true_answer": "manuel is a professor of computer science at constructor institute."
    },
    {
        "question": "the capstone project provides a complete experience of software development from ideation to product. the formal course structure is a mix of formal presentations and guest presentations. the course structure includes requirements elicitations with stakeholders, fast design and prototyping, architecture, practicalities of cybersecurity development following agile processes, and development using state - of - the - art development tools ( git repositories, integration servers, static analyzers ). if you want to learn more about the capstone project course, check the article in the 2nd international workshop on frontiers in software engineering education ( fisee 23 ), edited in lecture notes in computer science by springer ( https : / / link. springer. com / chapter / 10. 1007 / 978 - 3 - 031 - 48639 - 5 _ 3 ). the instructor of the capstone project is prof dr manuel oriol. manuel is a professor of computer science at constructor institute. he has 10 years of experience in academia, and 10 years in industry, co - authored 60 + articles on software engineering and software architecture, and graduated 4 doctoral students, and 25 + msc students. the teaching assistants are muhammad khalid and julia kotovich. mohammed is a phd researcher and lecturer at constructor university. julia kotovich is a phd researcher at constructor institute. to succeed in the program, students must have a strong foundation in programming skills in an imperative language at the cs bachelor level, as well as knowledge of algorithms and data structures at the same level. these foundational skills enable students to tackle the complexities of the capstone project and other advanced coursework. the course plan includes design & ideation, architecture, and initial development, portal ready and deployed, and advanced concepts and refinements based on customer feedback. the course includes an opportunity for students to attend guest lectures, which are presentations given by external lecturers from industry or academia. these lectures cover best practices and other computer science - related topics, providing students with insights from experienced professionals in the field. the start time of guest lectures can be verified in the actual course schedule. taking this course is mandatory for students enrolled in the ast and csse programs. it is a crucial part of the curriculum that ensures you gain the necessary practical and theoretical skills for your future career in software engineering and related fields. who is julia kotovich?",
        "predicted_answer": "phd researcher at constructor institute.",
        "true_answer": "julia kotovich is a phd researcher at constructor institute."
    },
    {
        "question": "software architecture is a high - level view of a piece of software indicating its main subparts, an explanation of the diverse pieces of software that collaborate, or simply a boxes and arrow diagram ( or several ). the book pattern - oriented software architecture : a system of patterns ( https : / / www. amazon. com / pattern - oriented - software - architecture - system - patterns / dp / 0471958697 ) is a suggested resource for learning about software architecture patterns. in essence, there are types of architecture that make sense from a requirements standpoint ( functional and non - functional ). examples of software architecture are mvc ( model - view - controller ), etl ( data extraction - transformation - loading ), layered, pub - sub ( publish subscribe ), and microservices. for quick reference on software architecture, visit the following wikipedia page ( https : / / en. wikipedia. org / wiki / architectural _ pattern ). information about mvc can be found at ( https : / / en. wikipedia. org / wiki / model - view - controller ). information about etl can be found at ( https : / / en. wikipedia. org / wiki / extract, _ transform, _ load ). information on layered architecture can be found at ( https : / / www. oreilly. com / library / view / software - architecture - patterns / 9781491971437 / ch01. html ). information on pub - sub can be found at ( https : / / cloud. google. com / pubsub / architecture ). information on microservices can be found at ( https : / / www. oreilly. com / library / view / software - architecture - patterns / 9781491971437 / ch04. html ). many other books on software architecture exist here are a few recommendations ( https : / / www. oreilly. com / library / view / fundamentals - of - software / 9781492043447 /, https : / / www. oreilly. com / library / view / building - microservices - 2nd / 9781492034018 /, https : / / www. amazon. com / just - enough - software - architecture - risk - driven / dp / 0984618104 ). where can i find information on the several software architectural patterns",
        "predicted_answer": "( https : / / en. wikipedia. org / wiki / model - view - controller ). information about etl can be found at ( https : / / en. wikipedia. org / wiki / extract, _ transform, _ load ). information on layered architecture can be found at ( https : / / www. oreilly. com / library / view / software - architecture - patterns / 9781491971437 / ch01. html ). information on pub - sub can be found at ( https : / / cloud. google. com / pubsub / architecture ). information on microservices can be found at ( https : / / www. oreilly. com / library / view / software - architecture - patterns / 9781491971437 / ch04. html ).",
        "true_answer": "information about mvc can be found at ( https : / / en. wikipedia. org / wiki / model - view - controller ). information about etl can be found at ( https : / / en. wikipedia. org / wiki / extract, _ transform, _ load ). information on layered architecture can be found at ( https : / / www. oreilly. com / library / view / software - architecture - patterns / 9781491971437 / ch01. html ). information on pub - sub can be found at ( https : / / cloud. google. com / pubsub / architecture ). information on microservices can be found at ( https : / / www. oreilly. com / library / view / software - architecture - patterns / 9781491971437 / ch04. html )."
    },
    {
        "question": "an important aspect of a software product is the need to talk to stakeholders. to do this effectively, you have to prepare a pitch and a demo. a pitch should take 2 - 5 minutes, be simple, straight to the point, fun ( if possible ), and insightful. it should let people understand why they should give you money. a pitch should be structured as follows : problem ( job - to - be - done ), your solution ( why is your solution creating a paradigm shift ), market and competitor analysis, team, business case, unique insights that you have, and ask. the problem section answers the \" why \" question. start with a question like, \" did you ever ask yourself? \" and explain the problem from the customer's perspective. your solution answers \" what \" and \" how. \". present your solution quickly and efficiently, explain the benefits, how it solves the problem, and how it changes everything ( paradigm shift ). for market and competitor analysis, make a 2 - dimensional graph ( find the right axes where your solution fits ) and show the market size if possible. in the team section, present your team with 2 + founders ( include pictures ). the business case should show a \" hockey stick \" growth projection but not promise anything before 3 years. explain your unique insight ( this is why you are the startup that will make it ). in the ask section, indicate what you need, be it money, feedback, or advertisement. the demo should be compelling, answer the problem statement nicely, be short, and work. what type of question should you start with in the problem section?",
        "predicted_answer": "\" did you ever ask yourself? \" and explain the problem from the customer's perspective.",
        "true_answer": "start with a question like, \" did you ever ask yourself? \" and explain the problem from the customer's perspective."
    },
    {
        "question": "there are several tools for the processes in software development. these tools are meant to support the development not to control it. during the development process in capstone, if tools do not work and this is expressed in a retrospective, it can be changed. the four main categories of tools that development teams need are design tools, source code versioning systems, software development platforms, and continuous integration servers. design tools help to present what a solution should look like and simulate its main interaction ( it is needed to show a project to stakeholders to make it concrete ). many people use powerpoint to show what they want to have. it is even possible to make clickable demos that way. many tools exist, an example is invision. this tool can be used to easily create a first draft. the main concepts are artboards ( screens / landing visualizations ), and interactions. interactions define an event and a landing artboard. a software development platform is a web tool that allows one to store and browse source code through a repository and organize the backlog and the testing process. there are now many platforms online that provide these kinds of functionalities for free or for subscriptions. popular examples include github ( bought by microsoft and is free for open source ), gitlab and gitorious ( free clones of github to use and install on - premises ), devops by microsoft, and jira by atlassian. a continuous integration server is a server that runs pipelines pulls from a repository, compiles the code, runs tests automatically, and notifies you if there is a problem. few recognized and professional tools exist. examples are jenkins ( open source and free ), gitlabci ( open source and free ), and azure pipelines ( by microsoft ). in the capstone project course, we will use the processes and tools that we presented. much of the training for tools should be done online by following tutorials. all these are the basics that everyone needs to understand to do a decent job. ta session will help and answer questions whenever possible. what are the main categories of tools that development teams need?",
        "predicted_answer": "source code versioning systems, software development platforms, and continuous integration servers.",
        "true_answer": "the four main categories of tools that development teams need are design tools, source code versioning systems, software development platforms, and continuous integration servers."
    },
    {
        "question": "the capstone project provides a complete experience of software development from ideation to product. the formal course structure is a mix of formal presentations and guest presentations. the course structure includes requirements elicitations with stakeholders, fast design and prototyping, architecture, practicalities of cybersecurity development following agile processes, and development using state - of - the - art development tools ( git repositories, integration servers, static analyzers ). if you want to learn more about the capstone project course, check the article in the 2nd international workshop on frontiers in software engineering education ( fisee 23 ), edited in lecture notes in computer science by springer ( https : / / link. springer. com / chapter / 10. 1007 / 978 - 3 - 031 - 48639 - 5 _ 3 ). the instructor of the capstone project is prof dr manuel oriol. manuel is a professor of computer science at constructor institute. he has 10 years of experience in academia, and 10 years in industry, co - authored 60 + articles on software engineering and software architecture, and graduated 4 doctoral students, and 25 + msc students. the teaching assistants are muhammad khalid and julia kotovich. mohammed is a phd researcher and lecturer at constructor university. julia kotovich is a phd researcher at constructor institute. to succeed in the program, students must have a strong foundation in programming skills in an imperative language at the cs bachelor level, as well as knowledge of algorithms and data structures at the same level. these foundational skills enable students to tackle the complexities of the capstone project and other advanced coursework. the course plan includes design & ideation, architecture, and initial development, portal ready and deployed, and advanced concepts and refinements based on customer feedback. the course includes an opportunity for students to attend guest lectures, which are presentations given by external lecturers from industry or academia. these lectures cover best practices and other computer science - related topics, providing students with insights from experienced professionals in the field. the start time of guest lectures can be verified in the actual course schedule. taking this course is mandatory for students enrolled in the ast and csse programs. it is a crucial part of the curriculum that ensures you gain the necessary practical and theoretical skills for your future career in software engineering and related fields. what is the name of instructor of capstone project?",
        "predicted_answer": "prof dr manuel oriol.",
        "true_answer": "manuel oriol."
    },
    {
        "question": "teams can be challenging environments for personal and collective growth. common reasons include feeling that everything is wrong, struggling to understand others or to be understood, perceiving teammates as too different, fearing that collaboration is impossible, disagreeing on common goals, and believing that the problem isn't your fault ( especially if you've integrated well into teams before ). to better navigate and improve team dynamics, consider exploring the following resources on team development and building : tuckman's model of team development, which is detailed in these readings : ( https : / / www. challengeapplications. com / stages - of - team - development ) and ( https : / / agilescrumguide. com / blog / files / tag - 5 - stages - of - team - development. html ). these resources provide valuable insights into the stages of team development and practical guidance on fostering a cohesive team. some tips for team collaboration in the capstone project are as follows ; when interacting with others in a team recognize the phase of team development you are in, use strategies to get to the next level, wait for things to settle, because they will if everyone stays positive ( some teams don't get away from some of these steps because they do not feel they can succeed and also, do not think it will not happen in a new team because you already know the others ), let go some of the things when it is not important for you. what model is recommended for team development?",
        "predicted_answer": "tuckman's model of team development, which is detailed in these readings : ( https : / / www. challengeapplications. com / stages - of - team - development ) and ( https : / / agilescrumguide. com / blog / files / tag - 5 - stages - of - team - development. html ).",
        "true_answer": "tuckman's model"
    },
    {
        "question": "there are several tools for the processes in software development. these tools are meant to support the development not to control it. during the development process in capstone, if tools do not work and this is expressed in a retrospective, it can be changed. the four main categories of tools that development teams need are design tools, source code versioning systems, software development platforms, and continuous integration servers. design tools help to present what a solution should look like and simulate its main interaction ( it is needed to show a project to stakeholders to make it concrete ). many people use powerpoint to show what they want to have. it is even possible to make clickable demos that way. many tools exist, an example is invision. this tool can be used to easily create a first draft. the main concepts are artboards ( screens / landing visualizations ), and interactions. interactions define an event and a landing artboard. a software development platform is a web tool that allows one to store and browse source code through a repository and organize the backlog and the testing process. there are now many platforms online that provide these kinds of functionalities for free or for subscriptions. popular examples include github ( bought by microsoft and is free for open source ), gitlab and gitorious ( free clones of github to use and install on - premises ), devops by microsoft, and jira by atlassian. a continuous integration server is a server that runs pipelines pulls from a repository, compiles the code, runs tests automatically, and notifies you if there is a problem. few recognized and professional tools exist. examples are jenkins ( open source and free ), gitlabci ( open source and free ), and azure pipelines ( by microsoft ). in the capstone project course, we will use the processes and tools that we presented. much of the training for tools should be done online by following tutorials. all these are the basics that everyone needs to understand to do a decent job. ta session will help and answer questions whenever possible. what are the four main categories of tools that development teams need?",
        "predicted_answer": "source code versioning systems, software development platforms, and continuous integration servers.",
        "true_answer": "design tools, source code versioning systems, software development platforms, and continuous integration servers."
    },
    {
        "question": "the capstone project provides a complete experience of software development from ideation to product. the formal course structure is a mix of formal presentations and guest presentations. the course structure includes requirements elicitations with stakeholders, fast design and prototyping, architecture, practicalities of cybersecurity development following agile processes, and development using state - of - the - art development tools ( git repositories, integration servers, static analyzers ). if you want to learn more about the capstone project course, check the article in the 2nd international workshop on frontiers in software engineering education ( fisee 23 ), edited in lecture notes in computer science by springer ( https : / / link. springer. com / chapter / 10. 1007 / 978 - 3 - 031 - 48639 - 5 _ 3 ). the instructor of the capstone project is prof dr manuel oriol. manuel is a professor of computer science at constructor institute. he has 10 years of experience in academia, and 10 years in industry, co - authored 60 + articles on software engineering and software architecture, and graduated 4 doctoral students, and 25 + msc students. the teaching assistants are muhammad khalid and julia kotovich. mohammed is a phd researcher and lecturer at constructor university. julia kotovich is a phd researcher at constructor institute. to succeed in the program, students must have a strong foundation in programming skills in an imperative language at the cs bachelor level, as well as knowledge of algorithms and data structures at the same level. these foundational skills enable students to tackle the complexities of the capstone project and other advanced coursework. the course plan includes design & ideation, architecture, and initial development, portal ready and deployed, and advanced concepts and refinements based on customer feedback. the course includes an opportunity for students to attend guest lectures, which are presentations given by external lecturers from industry or academia. these lectures cover best practices and other computer science - related topics, providing students with insights from experienced professionals in the field. the start time of guest lectures can be verified in the actual course schedule. taking this course is mandatory for students enrolled in the ast and csse programs. it is a crucial part of the curriculum that ensures you gain the necessary practical and theoretical skills for your future career in software engineering and related fields. where can you learn more about the capstone project course?",
        "predicted_answer": "",
        "true_answer": "( https : / / link. springer. com / chapter / 10. 1007 / 978 - 3 - 031 - 48639 - 5 _ 3 )."
    },
    {
        "question": "the capstone project spans three semesters. each semester offers 5 ects credits and each ects credit corresponds to 25 to 30 working hours. during the first semester of the capstone project, students focus on creating and proposing mocks, performing requirements elicitation, prototyping, approaching customers and users, specifying user stories, and organizing themselves using collaborative tools. in the second semester, students work on describing and defending a software architecture, coding in groups and as a large team, integrating independent works, using a source code versioning system, and specifying user stories. in the third semester, students engage in practical cybersecurity, hold discussions with stakeholders, practice machine learning, work with continuous improvement tools, and organize themselves through collaborative tools. students work on a single project throughout the course, allowing them to dive deeply into their chosen topic and apply their knowledge in a practical setting. groups or tribes for the capstone project are created in several ways. students may organize themselves into groups or tribes, or they may be assigned randomly if needed. each group typically consists of four to five students. a tribe consists of several groups. students seeking placement in specific groups should contact the teaching assistants ( tas ). the organizational points or grading of the capstone project is structured as follows ; 1 / 3 of the grade being a cohort ( tribe ) grade, and 2 / 3 of the grade being a group assignment. note that in rare cases group members are regarded independently. the capstone project grading is what?",
        "predicted_answer": "1 / 3 of the grade being a cohort ( tribe ) grade, and 2 / 3 of the grade being a group assignment.",
        "true_answer": "grading of the capstone project is structured as follows ; 1 / 3 of the grade being a cohort ( tribe ) grade, and 2 / 3 of the grade being a group assignment."
    },
    {
        "question": "the capstone project spans three semesters. each semester offers 5 ects credits and each ects credit corresponds to 25 to 30 working hours. during the first semester of the capstone project, students focus on creating and proposing mocks, performing requirements elicitation, prototyping, approaching customers and users, specifying user stories, and organizing themselves using collaborative tools. in the second semester, students work on describing and defending a software architecture, coding in groups and as a large team, integrating independent works, using a source code versioning system, and specifying user stories. in the third semester, students engage in practical cybersecurity, hold discussions with stakeholders, practice machine learning, work with continuous improvement tools, and organize themselves through collaborative tools. students work on a single project throughout the course, allowing them to dive deeply into their chosen topic and apply their knowledge in a practical setting. groups or tribes for the capstone project are created in several ways. students may organize themselves into groups or tribes, or they may be assigned randomly if needed. each group typically consists of four to five students. a tribe consists of several groups. students seeking placement in specific groups should contact the teaching assistants ( tas ). the organizational points or grading of the capstone project is structured as follows ; 1 / 3 of the grade being a cohort ( tribe ) grade, and 2 / 3 of the grade being a group assignment. note that in rare cases group members are regarded independently. how can a student be placed in a specific group?",
        "predicted_answer": "contact the teaching assistants ( tas ).",
        "true_answer": "students seeking placement in specific groups should contact the teaching assistants ( tas )."
    },
    {
        "question": "the capstone project provides a complete experience of software development from ideation to product. the formal course structure is a mix of formal presentations and guest presentations. the course structure includes requirements elicitations with stakeholders, fast design and prototyping, architecture, practicalities of cybersecurity development following agile processes, and development using state - of - the - art development tools ( git repositories, integration servers, static analyzers ). if you want to learn more about the capstone project course, check the article in the 2nd international workshop on frontiers in software engineering education ( fisee 23 ), edited in lecture notes in computer science by springer ( https : / / link. springer. com / chapter / 10. 1007 / 978 - 3 - 031 - 48639 - 5 _ 3 ). the instructor of the capstone project is prof dr manuel oriol. manuel is a professor of computer science at constructor institute. he has 10 years of experience in academia, and 10 years in industry, co - authored 60 + articles on software engineering and software architecture, and graduated 4 doctoral students, and 25 + msc students. the teaching assistants are muhammad khalid and julia kotovich. mohammed is a phd researcher and lecturer at constructor university. julia kotovich is a phd researcher at constructor institute. to succeed in the program, students must have a strong foundation in programming skills in an imperative language at the cs bachelor level, as well as knowledge of algorithms and data structures at the same level. these foundational skills enable students to tackle the complexities of the capstone project and other advanced coursework. the course plan includes design & ideation, architecture, and initial development, portal ready and deployed, and advanced concepts and refinements based on customer feedback. the course includes an opportunity for students to attend guest lectures, which are presentations given by external lecturers from industry or academia. these lectures cover best practices and other computer science - related topics, providing students with insights from experienced professionals in the field. the start time of guest lectures can be verified in the actual course schedule. taking this course is mandatory for students enrolled in the ast and csse programs. it is a crucial part of the curriculum that ensures you gain the necessary practical and theoretical skills for your future career in software engineering and related fields. who are in charge of guest lectures in the capstone project course?",
        "predicted_answer": "external lecturers from industry or academia. these lectures cover best practices and other computer science - related topics, providing students with insights from experienced professionals in the field.",
        "true_answer": "external lecturers from industry or academia."
    },
    {
        "question": "the first assignment for the capstone project consists of two parts. part 1 is individual, where each student must come up with an idea for a web application that is innovative, useful, and simple to explain. part 2 involves presenting the ideas to the group, discussing advantages and disadvantages, and collectively choosing one idea to develop further. the group will then create a clickable demo using a design tool and prepare slides for a 5 - minute presentation. the assignment deliverables include a presentation in pdf or ppt format with a recorded demo and a report. for the first assignment, the organization of the assignment is as follows ; individual work at the beginning, announcement of groups at the teaching assistant ( ta ) session, presentation given by groups in the session stated in the course lecture, and the delivery of a report. the presentation deliverable should contain an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide ). the report deliverable should include a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future ). how is the first assignment organized within the capstone project course?",
        "predicted_answer": "individual work at the beginning, announcement of groups at the teaching assistant ( ta ) session, presentation given by groups in the session stated in the course lecture, and the delivery of a report.",
        "true_answer": "an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide )."
    },
    {
        "question": "software architecture is a high - level view of a piece of software indicating its main subparts, an explanation of the diverse pieces of software that collaborate, or simply a boxes and arrow diagram ( or several ). the book pattern - oriented software architecture : a system of patterns ( https : / / www. amazon. com / pattern - oriented - software - architecture - system - patterns / dp / 0471958697 ) is a suggested resource for learning about software architecture patterns. in essence, there are types of architecture that make sense from a requirements standpoint ( functional and non - functional ). examples of software architecture are mvc ( model - view - controller ), etl ( data extraction - transformation - loading ), layered, pub - sub ( publish subscribe ), and microservices. for quick reference on software architecture, visit the following wikipedia page ( https : / / en. wikipedia. org / wiki / architectural _ pattern ). information about mvc can be found at ( https : / / en. wikipedia. org / wiki / model - view - controller ). information about etl can be found at ( https : / / en. wikipedia. org / wiki / extract, _ transform, _ load ). information on layered architecture can be found at ( https : / / www. oreilly. com / library / view / software - architecture - patterns / 9781491971437 / ch01. html ). information on pub - sub can be found at ( https : / / cloud. google. com / pubsub / architecture ). information on microservices can be found at ( https : / / www. oreilly. com / library / view / software - architecture - patterns / 9781491971437 / ch04. html ). many other books on software architecture exist here are a few recommendations ( https : / / www. oreilly. com / library / view / fundamentals - of - software / 9781492043447 /, https : / / www. oreilly. com / library / view / building - microservices - 2nd / 9781492034018 /, https : / / www. amazon. com / just - enough - software - architecture - risk - driven / dp / 0984618104 ). what are some recommended books on software architecture?",
        "predicted_answer": "",
        "true_answer": "( https : / / www. oreilly. com / library / view / fundamentals - of - software / 9781492043447 /, https : / / www. oreilly. com / library / view / building - microservices - 2nd / 9781492034018 /, https : / / www. amazon. com / just - enough - software - architecture - risk - driven / dp / 0984618104 )."
    },
    {
        "question": "the capstone project provides a complete experience of software development from ideation to product. the formal course structure is a mix of formal presentations and guest presentations. the course structure includes requirements elicitations with stakeholders, fast design and prototyping, architecture, practicalities of cybersecurity development following agile processes, and development using state - of - the - art development tools ( git repositories, integration servers, static analyzers ). if you want to learn more about the capstone project course, check the article in the 2nd international workshop on frontiers in software engineering education ( fisee 23 ), edited in lecture notes in computer science by springer ( https : / / link. springer. com / chapter / 10. 1007 / 978 - 3 - 031 - 48639 - 5 _ 3 ). the instructor of the capstone project is prof dr manuel oriol. manuel is a professor of computer science at constructor institute. he has 10 years of experience in academia, and 10 years in industry, co - authored 60 + articles on software engineering and software architecture, and graduated 4 doctoral students, and 25 + msc students. the teaching assistants are muhammad khalid and julia kotovich. mohammed is a phd researcher and lecturer at constructor university. julia kotovich is a phd researcher at constructor institute. to succeed in the program, students must have a strong foundation in programming skills in an imperative language at the cs bachelor level, as well as knowledge of algorithms and data structures at the same level. these foundational skills enable students to tackle the complexities of the capstone project and other advanced coursework. the course plan includes design & ideation, architecture, and initial development, portal ready and deployed, and advanced concepts and refinements based on customer feedback. the course includes an opportunity for students to attend guest lectures, which are presentations given by external lecturers from industry or academia. these lectures cover best practices and other computer science - related topics, providing students with insights from experienced professionals in the field. the start time of guest lectures can be verified in the actual course schedule. taking this course is mandatory for students enrolled in the ast and csse programs. it is a crucial part of the curriculum that ensures you gain the necessary practical and theoretical skills for your future career in software engineering and related fields. what purpose does the capstone project serve?",
        "predicted_answer": "a complete experience of software development from ideation to product.",
        "true_answer": "provides a complete experience of software development from ideation to product."
    },
    {
        "question": "the capstone project provides a complete experience of software development from ideation to product. the formal course structure is a mix of formal presentations and guest presentations. the course structure includes requirements elicitations with stakeholders, fast design and prototyping, architecture, practicalities of cybersecurity development following agile processes, and development using state - of - the - art development tools ( git repositories, integration servers, static analyzers ). if you want to learn more about the capstone project course, check the article in the 2nd international workshop on frontiers in software engineering education ( fisee 23 ), edited in lecture notes in computer science by springer ( https : / / link. springer. com / chapter / 10. 1007 / 978 - 3 - 031 - 48639 - 5 _ 3 ). the instructor of the capstone project is prof dr manuel oriol. manuel is a professor of computer science at constructor institute. he has 10 years of experience in academia, and 10 years in industry, co - authored 60 + articles on software engineering and software architecture, and graduated 4 doctoral students, and 25 + msc students. the teaching assistants are muhammad khalid and julia kotovich. mohammed is a phd researcher and lecturer at constructor university. julia kotovich is a phd researcher at constructor institute. to succeed in the program, students must have a strong foundation in programming skills in an imperative language at the cs bachelor level, as well as knowledge of algorithms and data structures at the same level. these foundational skills enable students to tackle the complexities of the capstone project and other advanced coursework. the course plan includes design & ideation, architecture, and initial development, portal ready and deployed, and advanced concepts and refinements based on customer feedback. the course includes an opportunity for students to attend guest lectures, which are presentations given by external lecturers from industry or academia. these lectures cover best practices and other computer science - related topics, providing students with insights from experienced professionals in the field. the start time of guest lectures can be verified in the actual course schedule. taking this course is mandatory for students enrolled in the ast and csse programs. it is a crucial part of the curriculum that ensures you gain the necessary practical and theoretical skills for your future career in software engineering and related fields. what is the purpose of the capstone project?",
        "predicted_answer": "a complete experience of software development from ideation to product.",
        "true_answer": "provides a complete experience of software development from ideation to product."
    },
    {
        "question": "the capstone project spans three semesters. each semester offers 5 ects credits and each ects credit corresponds to 25 to 30 working hours. during the first semester of the capstone project, students focus on creating and proposing mocks, performing requirements elicitation, prototyping, approaching customers and users, specifying user stories, and organizing themselves using collaborative tools. in the second semester, students work on describing and defending a software architecture, coding in groups and as a large team, integrating independent works, using a source code versioning system, and specifying user stories. in the third semester, students engage in practical cybersecurity, hold discussions with stakeholders, practice machine learning, work with continuous improvement tools, and organize themselves through collaborative tools. students work on a single project throughout the course, allowing them to dive deeply into their chosen topic and apply their knowledge in a practical setting. groups or tribes for the capstone project are created in several ways. students may organize themselves into groups or tribes, or they may be assigned randomly if needed. each group typically consists of four to five students. a tribe consists of several groups. students seeking placement in specific groups should contact the teaching assistants ( tas ). the organizational points or grading of the capstone project is structured as follows ; 1 / 3 of the grade being a cohort ( tribe ) grade, and 2 / 3 of the grade being a group assignment. note that in rare cases group members are regarded independently. what proportion of the grade is determined by the cohort ( tribe ) in the capstone project grading?",
        "predicted_answer": "1 / 3 of the grade being a cohort ( tribe ) grade, and 2 / 3 of the grade being a group assignment.",
        "true_answer": "1 / 3"
    },
    {
        "question": "the first assignment for the capstone project consists of two parts. part 1 is individual, where each student must come up with an idea for a web application that is innovative, useful, and simple to explain. part 2 involves presenting the ideas to the group, discussing advantages and disadvantages, and collectively choosing one idea to develop further. the group will then create a clickable demo using a design tool and prepare slides for a 5 - minute presentation. the assignment deliverables include a presentation in pdf or ppt format with a recorded demo and a report. for the first assignment, the organization of the assignment is as follows ; individual work at the beginning, announcement of groups at the teaching assistant ( ta ) session, presentation given by groups in the session stated in the course lecture, and the delivery of a report. the presentation deliverable should contain an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide ). the report deliverable should include a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future ). which items need to be incorporated into the report for the first assignment of the capstone project course?",
        "predicted_answer": "explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future ).",
        "true_answer": "a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future )."
    },
    {
        "question": "there are several tools for the processes in software development. these tools are meant to support the development not to control it. during the development process in capstone, if tools do not work and this is expressed in a retrospective, it can be changed. the four main categories of tools that development teams need are design tools, source code versioning systems, software development platforms, and continuous integration servers. design tools help to present what a solution should look like and simulate its main interaction ( it is needed to show a project to stakeholders to make it concrete ). many people use powerpoint to show what they want to have. it is even possible to make clickable demos that way. many tools exist, an example is invision. this tool can be used to easily create a first draft. the main concepts are artboards ( screens / landing visualizations ), and interactions. interactions define an event and a landing artboard. a software development platform is a web tool that allows one to store and browse source code through a repository and organize the backlog and the testing process. there are now many platforms online that provide these kinds of functionalities for free or for subscriptions. popular examples include github ( bought by microsoft and is free for open source ), gitlab and gitorious ( free clones of github to use and install on - premises ), devops by microsoft, and jira by atlassian. a continuous integration server is a server that runs pipelines pulls from a repository, compiles the code, runs tests automatically, and notifies you if there is a problem. few recognized and professional tools exist. examples are jenkins ( open source and free ), gitlabci ( open source and free ), and azure pipelines ( by microsoft ). in the capstone project course, we will use the processes and tools that we presented. much of the training for tools should be done online by following tutorials. all these are the basics that everyone needs to understand to do a decent job. ta session will help and answer questions whenever possible. what is the benefit of design tools?",
        "predicted_answer": "design tools help to present what a solution should look like and simulate its main interaction ( it is needed to show a project to stakeholders to make it concrete ).",
        "true_answer": "present what a solution should look like and simulate its main interaction ( it is needed to show a project to stakeholders to make it concrete )."
    },
    {
        "question": "the first assignment for the capstone project consists of two parts. part 1 is individual, where each student must come up with an idea for a web application that is innovative, useful, and simple to explain. part 2 involves presenting the ideas to the group, discussing advantages and disadvantages, and collectively choosing one idea to develop further. the group will then create a clickable demo using a design tool and prepare slides for a 5 - minute presentation. the assignment deliverables include a presentation in pdf or ppt format with a recorded demo and a report. for the first assignment, the organization of the assignment is as follows ; individual work at the beginning, announcement of groups at the teaching assistant ( ta ) session, presentation given by groups in the session stated in the course lecture, and the delivery of a report. the presentation deliverable should contain an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide ). the report deliverable should include a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future ). what is the initial task in the capstone project course?",
        "predicted_answer": "part 1 is individual, where each student must come up with an idea for a web application that is innovative, useful, and simple to explain. part 2 involves presenting the ideas to the group, discussing advantages and disadvantages, and collectively choosing one idea to develop further.",
        "true_answer": "the first assignment for the capstone project consists of two parts. part 1 is individual, where each student must come up with an idea for a web application that is innovative, useful, and simple to explain. part 2 involves presenting the ideas to the group, discussing advantages and disadvantages, and collectively choosing one idea to develop further."
    },
    {
        "question": "the capstone project provides a complete experience of software development from ideation to product. the formal course structure is a mix of formal presentations and guest presentations. the course structure includes requirements elicitations with stakeholders, fast design and prototyping, architecture, practicalities of cybersecurity development following agile processes, and development using state - of - the - art development tools ( git repositories, integration servers, static analyzers ). if you want to learn more about the capstone project course, check the article in the 2nd international workshop on frontiers in software engineering education ( fisee 23 ), edited in lecture notes in computer science by springer ( https : / / link. springer. com / chapter / 10. 1007 / 978 - 3 - 031 - 48639 - 5 _ 3 ). the instructor of the capstone project is prof dr manuel oriol. manuel is a professor of computer science at constructor institute. he has 10 years of experience in academia, and 10 years in industry, co - authored 60 + articles on software engineering and software architecture, and graduated 4 doctoral students, and 25 + msc students. the teaching assistants are muhammad khalid and julia kotovich. mohammed is a phd researcher and lecturer at constructor university. julia kotovich is a phd researcher at constructor institute. to succeed in the program, students must have a strong foundation in programming skills in an imperative language at the cs bachelor level, as well as knowledge of algorithms and data structures at the same level. these foundational skills enable students to tackle the complexities of the capstone project and other advanced coursework. the course plan includes design & ideation, architecture, and initial development, portal ready and deployed, and advanced concepts and refinements based on customer feedback. the course includes an opportunity for students to attend guest lectures, which are presentations given by external lecturers from industry or academia. these lectures cover best practices and other computer science - related topics, providing students with insights from experienced professionals in the field. the start time of guest lectures can be verified in the actual course schedule. taking this course is mandatory for students enrolled in the ast and csse programs. it is a crucial part of the curriculum that ensures you gain the necessary practical and theoretical skills for your future career in software engineering and related fields. what do the guest lectures in capstone project cover?",
        "predicted_answer": "best practices and other computer science - related topics, providing students with insights from experienced professionals in the field.",
        "true_answer": "best practices and other computer science - related topics,"
    },
    {
        "question": "there are several tools for the processes in software development. these tools are meant to support the development not to control it. during the development process in capstone, if tools do not work and this is expressed in a retrospective, it can be changed. the four main categories of tools that development teams need are design tools, source code versioning systems, software development platforms, and continuous integration servers. design tools help to present what a solution should look like and simulate its main interaction ( it is needed to show a project to stakeholders to make it concrete ). many people use powerpoint to show what they want to have. it is even possible to make clickable demos that way. many tools exist, an example is invision. this tool can be used to easily create a first draft. the main concepts are artboards ( screens / landing visualizations ), and interactions. interactions define an event and a landing artboard. a software development platform is a web tool that allows one to store and browse source code through a repository and organize the backlog and the testing process. there are now many platforms online that provide these kinds of functionalities for free or for subscriptions. popular examples include github ( bought by microsoft and is free for open source ), gitlab and gitorious ( free clones of github to use and install on - premises ), devops by microsoft, and jira by atlassian. a continuous integration server is a server that runs pipelines pulls from a repository, compiles the code, runs tests automatically, and notifies you if there is a problem. few recognized and professional tools exist. examples are jenkins ( open source and free ), gitlabci ( open source and free ), and azure pipelines ( by microsoft ). in the capstone project course, we will use the processes and tools that we presented. much of the training for tools should be done online by following tutorials. all these are the basics that everyone needs to understand to do a decent job. ta session will help and answer questions whenever possible. what is a design tool used for?",
        "predicted_answer": "design tools help to present what a solution should look like and simulate its main interaction ( it is needed to show a project to stakeholders to make it concrete ).",
        "true_answer": "help to present what a solution should look like and simulate its main interaction ( it is needed to show a project to stakeholders to make it concrete )."
    },
    {
        "question": "software architecture is a high - level view of a piece of software indicating its main subparts, an explanation of the diverse pieces of software that collaborate, or simply a boxes and arrow diagram ( or several ). the book pattern - oriented software architecture : a system of patterns ( https : / / www. amazon. com / pattern - oriented - software - architecture - system - patterns / dp / 0471958697 ) is a suggested resource for learning about software architecture patterns. in essence, there are types of architecture that make sense from a requirements standpoint ( functional and non - functional ). examples of software architecture are mvc ( model - view - controller ), etl ( data extraction - transformation - loading ), layered, pub - sub ( publish subscribe ), and microservices. for quick reference on software architecture, visit the following wikipedia page ( https : / / en. wikipedia. org / wiki / architectural _ pattern ). information about mvc can be found at ( https : / / en. wikipedia. org / wiki / model - view - controller ). information about etl can be found at ( https : / / en. wikipedia. org / wiki / extract, _ transform, _ load ). information on layered architecture can be found at ( https : / / www. oreilly. com / library / view / software - architecture - patterns / 9781491971437 / ch01. html ). information on pub - sub can be found at ( https : / / cloud. google. com / pubsub / architecture ). information on microservices can be found at ( https : / / www. oreilly. com / library / view / software - architecture - patterns / 9781491971437 / ch04. html ). many other books on software architecture exist here are a few recommendations ( https : / / www. oreilly. com / library / view / fundamentals - of - software / 9781492043447 /, https : / / www. oreilly. com / library / view / building - microservices - 2nd / 9781492034018 /, https : / / www. amazon. com / just - enough - software - architecture - risk - driven / dp / 0984618104 ). what is a high - level view of a piece of software typically called?",
        "predicted_answer": "high - level view of a piece of software indicating its main subparts,",
        "true_answer": "software architecture"
    },
    {
        "question": "the first assignment for the capstone project consists of two parts. part 1 is individual, where each student must come up with an idea for a web application that is innovative, useful, and simple to explain. part 2 involves presenting the ideas to the group, discussing advantages and disadvantages, and collectively choosing one idea to develop further. the group will then create a clickable demo using a design tool and prepare slides for a 5 - minute presentation. the assignment deliverables include a presentation in pdf or ppt format with a recorded demo and a report. for the first assignment, the organization of the assignment is as follows ; individual work at the beginning, announcement of groups at the teaching assistant ( ta ) session, presentation given by groups in the session stated in the course lecture, and the delivery of a report. the presentation deliverable should contain an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide ). the report deliverable should include a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future ). what is the required submission for the first assignment of the capstone project course?",
        "predicted_answer": "the assignment deliverables include a presentation in pdf or ppt format with a recorded demo and a report.",
        "true_answer": "deliverables include a presentation in pdf or ppt format with a recorded demo and a report."
    },
    {
        "question": "the first assignment for the capstone project consists of two parts. part 1 is individual, where each student must come up with an idea for a web application that is innovative, useful, and simple to explain. part 2 involves presenting the ideas to the group, discussing advantages and disadvantages, and collectively choosing one idea to develop further. the group will then create a clickable demo using a design tool and prepare slides for a 5 - minute presentation. the assignment deliverables include a presentation in pdf or ppt format with a recorded demo and a report. for the first assignment, the organization of the assignment is as follows ; individual work at the beginning, announcement of groups at the teaching assistant ( ta ) session, presentation given by groups in the session stated in the course lecture, and the delivery of a report. the presentation deliverable should contain an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide ). the report deliverable should include a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future ). which elements should be featured in the presentation submission of assignment one?",
        "predicted_answer": "an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide ).",
        "true_answer": "the presentation deliverable should contain an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide )."
    },
    {
        "question": "the first assignment for the capstone project consists of two parts. part 1 is individual, where each student must come up with an idea for a web application that is innovative, useful, and simple to explain. part 2 involves presenting the ideas to the group, discussing advantages and disadvantages, and collectively choosing one idea to develop further. the group will then create a clickable demo using a design tool and prepare slides for a 5 - minute presentation. the assignment deliverables include a presentation in pdf or ppt format with a recorded demo and a report. for the first assignment, the organization of the assignment is as follows ; individual work at the beginning, announcement of groups at the teaching assistant ( ta ) session, presentation given by groups in the session stated in the course lecture, and the delivery of a report. the presentation deliverable should contain an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide ). the report deliverable should include a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future ). what elements should be included in the report deliverable for assignment one of the capstone project course?",
        "predicted_answer": "the report deliverable should include a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future ).",
        "true_answer": "a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future )."
    },
    {
        "question": "the capstone project spans three semesters. each semester offers 5 ects credits and each ects credit corresponds to 25 to 30 working hours. during the first semester of the capstone project, students focus on creating and proposing mocks, performing requirements elicitation, prototyping, approaching customers and users, specifying user stories, and organizing themselves using collaborative tools. in the second semester, students work on describing and defending a software architecture, coding in groups and as a large team, integrating independent works, using a source code versioning system, and specifying user stories. in the third semester, students engage in practical cybersecurity, hold discussions with stakeholders, practice machine learning, work with continuous improvement tools, and organize themselves through collaborative tools. students work on a single project throughout the course, allowing them to dive deeply into their chosen topic and apply their knowledge in a practical setting. groups or tribes for the capstone project are created in several ways. students may organize themselves into groups or tribes, or they may be assigned randomly if needed. each group typically consists of four to five students. a tribe consists of several groups. students seeking placement in specific groups should contact the teaching assistants ( tas ). the organizational points or grading of the capstone project is structured as follows ; 1 / 3 of the grade being a cohort ( tribe ) grade, and 2 / 3 of the grade being a group assignment. note that in rare cases group members are regarded independently. what do students do in the second semester regarding team structure?",
        "predicted_answer": "describing and defending a software architecture, coding in groups and as a large team, integrating independent works, using a source code versioning system, and specifying user stories.",
        "true_answer": "coding in groups and as a large team, integrating independent works,"
    },
    {
        "question": "the first assignment for the capstone project consists of two parts. part 1 is individual, where each student must come up with an idea for a web application that is innovative, useful, and simple to explain. part 2 involves presenting the ideas to the group, discussing advantages and disadvantages, and collectively choosing one idea to develop further. the group will then create a clickable demo using a design tool and prepare slides for a 5 - minute presentation. the assignment deliverables include a presentation in pdf or ppt format with a recorded demo and a report. for the first assignment, the organization of the assignment is as follows ; individual work at the beginning, announcement of groups at the teaching assistant ( ta ) session, presentation given by groups in the session stated in the course lecture, and the delivery of a report. the presentation deliverable should contain an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide ). the report deliverable should include a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future ). what components are expected in the report submission for the first assignment of the capstone project course?",
        "predicted_answer": "explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future ).",
        "true_answer": "a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future )."
    },
    {
        "question": "the first assignment for the capstone project consists of two parts. part 1 is individual, where each student must come up with an idea for a web application that is innovative, useful, and simple to explain. part 2 involves presenting the ideas to the group, discussing advantages and disadvantages, and collectively choosing one idea to develop further. the group will then create a clickable demo using a design tool and prepare slides for a 5 - minute presentation. the assignment deliverables include a presentation in pdf or ppt format with a recorded demo and a report. for the first assignment, the organization of the assignment is as follows ; individual work at the beginning, announcement of groups at the teaching assistant ( ta ) session, presentation given by groups in the session stated in the course lecture, and the delivery of a report. the presentation deliverable should contain an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide ). the report deliverable should include a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future ). what constitutes the first assignment in the capstone project course?",
        "predicted_answer": "part 1 is individual, where each student must come up with an idea for a web application that is innovative, useful, and simple to explain. part 2 involves presenting the ideas to the group, discussing advantages and disadvantages, and collectively choosing one idea to develop further.",
        "true_answer": "the first assignment for the capstone project consists of two parts. part 1 is individual, where each student must come up with an idea for a web application that is innovative, useful, and simple to explain. part 2 involves presenting the ideas to the group, discussing advantages and disadvantages, and collectively choosing one idea to develop further."
    },
    {
        "question": "scrum is a framework used primarily in agile software development, but it's also utilized in various other fields. in scrum, the work is organized in sprints with a duration of 1 week to 1 month. during a sprint, requirements do not change. at the beginning of the sprint, there is a sprint planning event, in which work items are scheduled for the sprint. during the sprint, daily 15 - minute scrum meetings take place for the team to organize and talk about potential issues. people indicate what they did the day before, and what they will do today. if there are impediments to the sprint goals. at the end of the sprint, there is a sprint review which presents the results of the sprint to stakeholders and uses demos. the group discusses their plans for the future. after that, there is a sprint retrospective where the team talks about their impediments, issues, and positive aspects and tries to improve the process for the next sprint and forward. roles in scrum are scrum master, product owner, and development team. a scrum master is the person who takes care of the process, coaches people on scrum, ensures that there is harmony in the team, and makes sure that everyone is going in the right direction. a product owner defines what is in the product backlog, makes sure that everyone understands the backlog and the direction it takes for the requirements, and defines the requirements for the project and the sprint. the development team is made up of developers. work in scrum is organized following a backlog. a backlog is a list of work items that are organized with priorities. work items should be achievable in a sprint. work items list the requirements of the change that needs to be done, they also often include a definition of done. often such requirements are expressed as a user story following this structure : \" as a... i want to... so that... \". there is the product backlog for the whole product and the sprint backlog for a given sprint. if user stories are too large, they can be an epic which then contains several user stories. in the capstone project, a sprint is 2 weeks long, each review is typically graded, and each time student feedback is gathered using menti. what is the goal of daily scrum stand - ups?",
        "predicted_answer": "to organize and talk about potential issues.",
        "true_answer": "daily 15 - minute scrum meetings take place for the team to organize and talk about potential issues."
    },
    {
        "question": "the capstone project spans three semesters. each semester offers 5 ects credits and each ects credit corresponds to 25 to 30 working hours. during the first semester of the capstone project, students focus on creating and proposing mocks, performing requirements elicitation, prototyping, approaching customers and users, specifying user stories, and organizing themselves using collaborative tools. in the second semester, students work on describing and defending a software architecture, coding in groups and as a large team, integrating independent works, using a source code versioning system, and specifying user stories. in the third semester, students engage in practical cybersecurity, hold discussions with stakeholders, practice machine learning, work with continuous improvement tools, and organize themselves through collaborative tools. students work on a single project throughout the course, allowing them to dive deeply into their chosen topic and apply their knowledge in a practical setting. groups or tribes for the capstone project are created in several ways. students may organize themselves into groups or tribes, or they may be assigned randomly if needed. each group typically consists of four to five students. a tribe consists of several groups. students seeking placement in specific groups should contact the teaching assistants ( tas ). the organizational points or grading of the capstone project is structured as follows ; 1 / 3 of the grade being a cohort ( tribe ) grade, and 2 / 3 of the grade being a group assignment. note that in rare cases group members are regarded independently. how long does the capstone project course last?",
        "predicted_answer": "three semesters.",
        "true_answer": "the capstone project spans three semesters."
    },
    {
        "question": "the capstone project provides a complete experience of software development from ideation to product. the formal course structure is a mix of formal presentations and guest presentations. the course structure includes requirements elicitations with stakeholders, fast design and prototyping, architecture, practicalities of cybersecurity development following agile processes, and development using state - of - the - art development tools ( git repositories, integration servers, static analyzers ). if you want to learn more about the capstone project course, check the article in the 2nd international workshop on frontiers in software engineering education ( fisee 23 ), edited in lecture notes in computer science by springer ( https : / / link. springer. com / chapter / 10. 1007 / 978 - 3 - 031 - 48639 - 5 _ 3 ). the instructor of the capstone project is prof dr manuel oriol. manuel is a professor of computer science at constructor institute. he has 10 years of experience in academia, and 10 years in industry, co - authored 60 + articles on software engineering and software architecture, and graduated 4 doctoral students, and 25 + msc students. the teaching assistants are muhammad khalid and julia kotovich. mohammed is a phd researcher and lecturer at constructor university. julia kotovich is a phd researcher at constructor institute. to succeed in the program, students must have a strong foundation in programming skills in an imperative language at the cs bachelor level, as well as knowledge of algorithms and data structures at the same level. these foundational skills enable students to tackle the complexities of the capstone project and other advanced coursework. the course plan includes design & ideation, architecture, and initial development, portal ready and deployed, and advanced concepts and refinements based on customer feedback. the course includes an opportunity for students to attend guest lectures, which are presentations given by external lecturers from industry or academia. these lectures cover best practices and other computer science - related topics, providing students with insights from experienced professionals in the field. the start time of guest lectures can be verified in the actual course schedule. taking this course is mandatory for students enrolled in the ast and csse programs. it is a crucial part of the curriculum that ensures you gain the necessary practical and theoretical skills for your future career in software engineering and related fields. who is the instructing professor of capstone project?",
        "predicted_answer": "prof dr manuel oriol.",
        "true_answer": "manuel oriol."
    },
    {
        "question": "an important aspect of a software product is the need to talk to stakeholders. to do this effectively, you have to prepare a pitch and a demo. a pitch should take 2 - 5 minutes, be simple, straight to the point, fun ( if possible ), and insightful. it should let people understand why they should give you money. a pitch should be structured as follows : problem ( job - to - be - done ), your solution ( why is your solution creating a paradigm shift ), market and competitor analysis, team, business case, unique insights that you have, and ask. the problem section answers the \" why \" question. start with a question like, \" did you ever ask yourself? \" and explain the problem from the customer's perspective. your solution answers \" what \" and \" how. \". present your solution quickly and efficiently, explain the benefits, how it solves the problem, and how it changes everything ( paradigm shift ). for market and competitor analysis, make a 2 - dimensional graph ( find the right axes where your solution fits ) and show the market size if possible. in the team section, present your team with 2 + founders ( include pictures ). the business case should show a \" hockey stick \" growth projection but not promise anything before 3 years. explain your unique insight ( this is why you are the startup that will make it ). in the ask section, indicate what you need, be it money, feedback, or advertisement. the demo should be compelling, answer the problem statement nicely, be short, and work. what should you explain about your solution?",
        "predicted_answer": "your solution answers \" what \" and \" how. \". present your solution quickly and efficiently, explain the benefits, how it solves the problem, and how it changes everything ( paradigm shift ).",
        "true_answer": "explain the benefits, how it solves the problem, and how it changes everything ( paradigm shift )."
    },
    {
        "question": "scrum is a framework used primarily in agile software development, but it's also utilized in various other fields. in scrum, the work is organized in sprints with a duration of 1 week to 1 month. during a sprint, requirements do not change. at the beginning of the sprint, there is a sprint planning event, in which work items are scheduled for the sprint. during the sprint, daily 15 - minute scrum meetings take place for the team to organize and talk about potential issues. people indicate what they did the day before, and what they will do today. if there are impediments to the sprint goals. at the end of the sprint, there is a sprint review which presents the results of the sprint to stakeholders and uses demos. the group discusses their plans for the future. after that, there is a sprint retrospective where the team talks about their impediments, issues, and positive aspects and tries to improve the process for the next sprint and forward. roles in scrum are scrum master, product owner, and development team. a scrum master is the person who takes care of the process, coaches people on scrum, ensures that there is harmony in the team, and makes sure that everyone is going in the right direction. a product owner defines what is in the product backlog, makes sure that everyone understands the backlog and the direction it takes for the requirements, and defines the requirements for the project and the sprint. the development team is made up of developers. work in scrum is organized following a backlog. a backlog is a list of work items that are organized with priorities. work items should be achievable in a sprint. work items list the requirements of the change that needs to be done, they also often include a definition of done. often such requirements are expressed as a user story following this structure : \" as a... i want to... so that... \". there is the product backlog for the whole product and the sprint backlog for a given sprint. if user stories are too large, they can be an epic which then contains several user stories. in the capstone project, a sprint is 2 weeks long, each review is typically graded, and each time student feedback is gathered using menti. what is the purpose behind daily scrum meetings?",
        "predicted_answer": "daily 15 - minute scrum meetings take place for the team to organize and talk about potential issues.",
        "true_answer": "to organize and talk about potential issues."
    },
    {
        "question": "there are several tools for the processes in software development. these tools are meant to support the development not to control it. during the development process in capstone, if tools do not work and this is expressed in a retrospective, it can be changed. the four main categories of tools that development teams need are design tools, source code versioning systems, software development platforms, and continuous integration servers. design tools help to present what a solution should look like and simulate its main interaction ( it is needed to show a project to stakeholders to make it concrete ). many people use powerpoint to show what they want to have. it is even possible to make clickable demos that way. many tools exist, an example is invision. this tool can be used to easily create a first draft. the main concepts are artboards ( screens / landing visualizations ), and interactions. interactions define an event and a landing artboard. a software development platform is a web tool that allows one to store and browse source code through a repository and organize the backlog and the testing process. there are now many platforms online that provide these kinds of functionalities for free or for subscriptions. popular examples include github ( bought by microsoft and is free for open source ), gitlab and gitorious ( free clones of github to use and install on - premises ), devops by microsoft, and jira by atlassian. a continuous integration server is a server that runs pipelines pulls from a repository, compiles the code, runs tests automatically, and notifies you if there is a problem. few recognized and professional tools exist. examples are jenkins ( open source and free ), gitlabci ( open source and free ), and azure pipelines ( by microsoft ). in the capstone project course, we will use the processes and tools that we presented. much of the training for tools should be done online by following tutorials. all these are the basics that everyone needs to understand to do a decent job. ta session will help and answer questions whenever possible. what can be done to resolve tool failures in the capstone development process?",
        "predicted_answer": "",
        "true_answer": "it can be changed."
    },
    {
        "question": "teams can be challenging environments for personal and collective growth. common reasons include feeling that everything is wrong, struggling to understand others or to be understood, perceiving teammates as too different, fearing that collaboration is impossible, disagreeing on common goals, and believing that the problem isn't your fault ( especially if you've integrated well into teams before ). to better navigate and improve team dynamics, consider exploring the following resources on team development and building : tuckman's model of team development, which is detailed in these readings : ( https : / / www. challengeapplications. com / stages - of - team - development ) and ( https : / / agilescrumguide. com / blog / files / tag - 5 - stages - of - team - development. html ). these resources provide valuable insights into the stages of team development and practical guidance on fostering a cohesive team. some tips for team collaboration in the capstone project are as follows ; when interacting with others in a team recognize the phase of team development you are in, use strategies to get to the next level, wait for things to settle, because they will if everyone stays positive ( some teams don't get away from some of these steps because they do not feel they can succeed and also, do not think it will not happen in a new team because you already know the others ), let go some of the things when it is not important for you. how can potential collaboration problems be avoided in team projects?",
        "predicted_answer": "when interacting with others in a team recognize the phase of team development you are in, use strategies to get to the next level, wait for things to settle, because they will if everyone stays positive ( some teams don't get away from some of these steps because they do not feel they can succeed and also, do not think it will not happen in a new team because you already know the others ), let go some of the things when it is not important for you.",
        "true_answer": "recognize the phase of team development you are in, use strategies to get to the next level, wait for things to settle, because they will if everyone stays positive ( some teams don't get away from some of these steps because they do not feel they can succeed and also, do not think it will not happen in a new team because you already know the others ), let go some of the things when it is not important for you."
    },
    {
        "question": "teams can be challenging environments for personal and collective growth. common reasons include feeling that everything is wrong, struggling to understand others or to be understood, perceiving teammates as too different, fearing that collaboration is impossible, disagreeing on common goals, and believing that the problem isn't your fault ( especially if you've integrated well into teams before ). to better navigate and improve team dynamics, consider exploring the following resources on team development and building : tuckman's model of team development, which is detailed in these readings : ( https : / / www. challengeapplications. com / stages - of - team - development ) and ( https : / / agilescrumguide. com / blog / files / tag - 5 - stages - of - team - development. html ). these resources provide valuable insights into the stages of team development and practical guidance on fostering a cohesive team. some tips for team collaboration in the capstone project are as follows ; when interacting with others in a team recognize the phase of team development you are in, use strategies to get to the next level, wait for things to settle, because they will if everyone stays positive ( some teams don't get away from some of these steps because they do not feel they can succeed and also, do not think it will not happen in a new team because you already know the others ), let go some of the things when it is not important for you. what best practices can teams use to prevent collaboration challenges?",
        "predicted_answer": "when interacting with others in a team recognize the phase of team development you are in, use strategies to get to the next level, wait for things to settle, because they will if everyone stays positive ( some teams don't get away from some of these steps because they do not feel they can succeed and also, do not think it will not happen in a new team because you already know the others ), let go some of the things when it is not important for you.",
        "true_answer": "recognize the phase of team development you are in, use strategies to get to the next level, wait for things to settle, because they will if everyone stays positive ( some teams don't get away from some of these steps because they do not feel they can succeed and also, do not think it will not happen in a new team because you already know the others ), let go some of the things when it is not important for you."
    },
    {
        "question": "the capstone project spans three semesters. each semester offers 5 ects credits and each ects credit corresponds to 25 to 30 working hours. during the first semester of the capstone project, students focus on creating and proposing mocks, performing requirements elicitation, prototyping, approaching customers and users, specifying user stories, and organizing themselves using collaborative tools. in the second semester, students work on describing and defending a software architecture, coding in groups and as a large team, integrating independent works, using a source code versioning system, and specifying user stories. in the third semester, students engage in practical cybersecurity, hold discussions with stakeholders, practice machine learning, work with continuous improvement tools, and organize themselves through collaborative tools. students work on a single project throughout the course, allowing them to dive deeply into their chosen topic and apply their knowledge in a practical setting. groups or tribes for the capstone project are created in several ways. students may organize themselves into groups or tribes, or they may be assigned randomly if needed. each group typically consists of four to five students. a tribe consists of several groups. students seeking placement in specific groups should contact the teaching assistants ( tas ). the organizational points or grading of the capstone project is structured as follows ; 1 / 3 of the grade being a cohort ( tribe ) grade, and 2 / 3 of the grade being a group assignment. note that in rare cases group members are regarded independently. how many students can form a group?",
        "predicted_answer": "four to five students.",
        "true_answer": "each group typically consists of four to five students."
    },
    {
        "question": "the first assignment for the capstone project consists of two parts. part 1 is individual, where each student must come up with an idea for a web application that is innovative, useful, and simple to explain. part 2 involves presenting the ideas to the group, discussing advantages and disadvantages, and collectively choosing one idea to develop further. the group will then create a clickable demo using a design tool and prepare slides for a 5 - minute presentation. the assignment deliverables include a presentation in pdf or ppt format with a recorded demo and a report. for the first assignment, the organization of the assignment is as follows ; individual work at the beginning, announcement of groups at the teaching assistant ( ta ) session, presentation given by groups in the session stated in the course lecture, and the delivery of a report. the presentation deliverable should contain an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide ). the report deliverable should include a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future ). what is the expected submission for the first task of the capstone project course?",
        "predicted_answer": "the assignment deliverables include a presentation in pdf or ppt format with a recorded demo and a report.",
        "true_answer": "deliverables include a presentation in pdf or ppt format with a recorded demo and a report."
    },
    {
        "question": "there are several tools for the processes in software development. these tools are meant to support the development not to control it. during the development process in capstone, if tools do not work and this is expressed in a retrospective, it can be changed. the four main categories of tools that development teams need are design tools, source code versioning systems, software development platforms, and continuous integration servers. design tools help to present what a solution should look like and simulate its main interaction ( it is needed to show a project to stakeholders to make it concrete ). many people use powerpoint to show what they want to have. it is even possible to make clickable demos that way. many tools exist, an example is invision. this tool can be used to easily create a first draft. the main concepts are artboards ( screens / landing visualizations ), and interactions. interactions define an event and a landing artboard. a software development platform is a web tool that allows one to store and browse source code through a repository and organize the backlog and the testing process. there are now many platforms online that provide these kinds of functionalities for free or for subscriptions. popular examples include github ( bought by microsoft and is free for open source ), gitlab and gitorious ( free clones of github to use and install on - premises ), devops by microsoft, and jira by atlassian. a continuous integration server is a server that runs pipelines pulls from a repository, compiles the code, runs tests automatically, and notifies you if there is a problem. few recognized and professional tools exist. examples are jenkins ( open source and free ), gitlabci ( open source and free ), and azure pipelines ( by microsoft ). in the capstone project course, we will use the processes and tools that we presented. much of the training for tools should be done online by following tutorials. all these are the basics that everyone needs to understand to do a decent job. ta session will help and answer questions whenever possible. what steps can be taken if tools fail during the capstone development process?",
        "predicted_answer": "",
        "true_answer": "it can be changed."
    },
    {
        "question": "software architecture is a high - level view of a piece of software indicating its main subparts, an explanation of the diverse pieces of software that collaborate, or simply a boxes and arrow diagram ( or several ). the book pattern - oriented software architecture : a system of patterns ( https : / / www. amazon. com / pattern - oriented - software - architecture - system - patterns / dp / 0471958697 ) is a suggested resource for learning about software architecture patterns. in essence, there are types of architecture that make sense from a requirements standpoint ( functional and non - functional ). examples of software architecture are mvc ( model - view - controller ), etl ( data extraction - transformation - loading ), layered, pub - sub ( publish subscribe ), and microservices. for quick reference on software architecture, visit the following wikipedia page ( https : / / en. wikipedia. org / wiki / architectural _ pattern ). information about mvc can be found at ( https : / / en. wikipedia. org / wiki / model - view - controller ). information about etl can be found at ( https : / / en. wikipedia. org / wiki / extract, _ transform, _ load ). information on layered architecture can be found at ( https : / / www. oreilly. com / library / view / software - architecture - patterns / 9781491971437 / ch01. html ). information on pub - sub can be found at ( https : / / cloud. google. com / pubsub / architecture ). information on microservices can be found at ( https : / / www. oreilly. com / library / view / software - architecture - patterns / 9781491971437 / ch04. html ). many other books on software architecture exist here are a few recommendations ( https : / / www. oreilly. com / library / view / fundamentals - of - software / 9781492043447 /, https : / / www. oreilly. com / library / view / building - microservices - 2nd / 9781492034018 /, https : / / www. amazon. com / just - enough - software - architecture - risk - driven / dp / 0984618104 ). where can you find information about microservices architecture?",
        "predicted_answer": "( https : / / en. wikipedia. org / wiki / model - view - controller ). information about etl can be found at ( https : / / en. wikipedia. org / wiki / extract, _ transform, _ load ). information on layered architecture can be found at ( https : / / www. oreilly. com / library / view / software - architecture - patterns / 9781491971437 / ch01. html ). information on pub - sub can be found at ( https : / / cloud. google. com / pubsub / architecture ). information on microservices can be found at ( https : / / www. oreilly. com / library / view / software - architecture - patterns / 9781491971437 / ch04. html ).",
        "true_answer": "( https : / / www. oreilly. com / library / view / software - architecture - patterns / 9781491971437 / ch04. html )."
    },
    {
        "question": "the first assignment for the capstone project consists of two parts. part 1 is individual, where each student must come up with an idea for a web application that is innovative, useful, and simple to explain. part 2 involves presenting the ideas to the group, discussing advantages and disadvantages, and collectively choosing one idea to develop further. the group will then create a clickable demo using a design tool and prepare slides for a 5 - minute presentation. the assignment deliverables include a presentation in pdf or ppt format with a recorded demo and a report. for the first assignment, the organization of the assignment is as follows ; individual work at the beginning, announcement of groups at the teaching assistant ( ta ) session, presentation given by groups in the session stated in the course lecture, and the delivery of a report. the presentation deliverable should contain an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide ). the report deliverable should include a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future ). what should be contained in the report deliverable for assignment one of the capstone project course?",
        "predicted_answer": "the report deliverable should include a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future ).",
        "true_answer": "a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future )."
    },
    {
        "question": "scrum is a framework used primarily in agile software development, but it's also utilized in various other fields. in scrum, the work is organized in sprints with a duration of 1 week to 1 month. during a sprint, requirements do not change. at the beginning of the sprint, there is a sprint planning event, in which work items are scheduled for the sprint. during the sprint, daily 15 - minute scrum meetings take place for the team to organize and talk about potential issues. people indicate what they did the day before, and what they will do today. if there are impediments to the sprint goals. at the end of the sprint, there is a sprint review which presents the results of the sprint to stakeholders and uses demos. the group discusses their plans for the future. after that, there is a sprint retrospective where the team talks about their impediments, issues, and positive aspects and tries to improve the process for the next sprint and forward. roles in scrum are scrum master, product owner, and development team. a scrum master is the person who takes care of the process, coaches people on scrum, ensures that there is harmony in the team, and makes sure that everyone is going in the right direction. a product owner defines what is in the product backlog, makes sure that everyone understands the backlog and the direction it takes for the requirements, and defines the requirements for the project and the sprint. the development team is made up of developers. work in scrum is organized following a backlog. a backlog is a list of work items that are organized with priorities. work items should be achievable in a sprint. work items list the requirements of the change that needs to be done, they also often include a definition of done. often such requirements are expressed as a user story following this structure : \" as a... i want to... so that... \". there is the product backlog for the whole product and the sprint backlog for a given sprint. if user stories are too large, they can be an epic which then contains several user stories. in the capstone project, a sprint is 2 weeks long, each review is typically graded, and each time student feedback is gathered using menti. what is the aim of the daily scrum meeting format?",
        "predicted_answer": "to organize and talk about potential issues.",
        "true_answer": "daily 15 - minute scrum meetings take place for the team to organize and talk about potential issues."
    },
    {
        "question": "scrum is a framework used primarily in agile software development, but it's also utilized in various other fields. in scrum, the work is organized in sprints with a duration of 1 week to 1 month. during a sprint, requirements do not change. at the beginning of the sprint, there is a sprint planning event, in which work items are scheduled for the sprint. during the sprint, daily 15 - minute scrum meetings take place for the team to organize and talk about potential issues. people indicate what they did the day before, and what they will do today. if there are impediments to the sprint goals. at the end of the sprint, there is a sprint review which presents the results of the sprint to stakeholders and uses demos. the group discusses their plans for the future. after that, there is a sprint retrospective where the team talks about their impediments, issues, and positive aspects and tries to improve the process for the next sprint and forward. roles in scrum are scrum master, product owner, and development team. a scrum master is the person who takes care of the process, coaches people on scrum, ensures that there is harmony in the team, and makes sure that everyone is going in the right direction. a product owner defines what is in the product backlog, makes sure that everyone understands the backlog and the direction it takes for the requirements, and defines the requirements for the project and the sprint. the development team is made up of developers. work in scrum is organized following a backlog. a backlog is a list of work items that are organized with priorities. work items should be achievable in a sprint. work items list the requirements of the change that needs to be done, they also often include a definition of done. often such requirements are expressed as a user story following this structure : \" as a... i want to... so that... \". there is the product backlog for the whole product and the sprint backlog for a given sprint. if user stories are too large, they can be an epic which then contains several user stories. in the capstone project, a sprint is 2 weeks long, each review is typically graded, and each time student feedback is gathered using menti. how is work organized in scrum",
        "predicted_answer": "the work is organized in sprints with a duration of 1 week to 1 month.",
        "true_answer": "the work is organized in sprints"
    },
    {
        "question": "the capstone project provides a complete experience of software development from ideation to product. the formal course structure is a mix of formal presentations and guest presentations. the course structure includes requirements elicitations with stakeholders, fast design and prototyping, architecture, practicalities of cybersecurity development following agile processes, and development using state - of - the - art development tools ( git repositories, integration servers, static analyzers ). if you want to learn more about the capstone project course, check the article in the 2nd international workshop on frontiers in software engineering education ( fisee 23 ), edited in lecture notes in computer science by springer ( https : / / link. springer. com / chapter / 10. 1007 / 978 - 3 - 031 - 48639 - 5 _ 3 ). the instructor of the capstone project is prof dr manuel oriol. manuel is a professor of computer science at constructor institute. he has 10 years of experience in academia, and 10 years in industry, co - authored 60 + articles on software engineering and software architecture, and graduated 4 doctoral students, and 25 + msc students. the teaching assistants are muhammad khalid and julia kotovich. mohammed is a phd researcher and lecturer at constructor university. julia kotovich is a phd researcher at constructor institute. to succeed in the program, students must have a strong foundation in programming skills in an imperative language at the cs bachelor level, as well as knowledge of algorithms and data structures at the same level. these foundational skills enable students to tackle the complexities of the capstone project and other advanced coursework. the course plan includes design & ideation, architecture, and initial development, portal ready and deployed, and advanced concepts and refinements based on customer feedback. the course includes an opportunity for students to attend guest lectures, which are presentations given by external lecturers from industry or academia. these lectures cover best practices and other computer science - related topics, providing students with insights from experienced professionals in the field. the start time of guest lectures can be verified in the actual course schedule. taking this course is mandatory for students enrolled in the ast and csse programs. it is a crucial part of the curriculum that ensures you gain the necessary practical and theoretical skills for your future career in software engineering and related fields. who is muhammad khalid?",
        "predicted_answer": "mohammed is a phd researcher and lecturer at constructor university.",
        "true_answer": "phd researcher and lecturer at constructor university."
    },
    {
        "question": "the capstone project spans three semesters. each semester offers 5 ects credits and each ects credit corresponds to 25 to 30 working hours. during the first semester of the capstone project, students focus on creating and proposing mocks, performing requirements elicitation, prototyping, approaching customers and users, specifying user stories, and organizing themselves using collaborative tools. in the second semester, students work on describing and defending a software architecture, coding in groups and as a large team, integrating independent works, using a source code versioning system, and specifying user stories. in the third semester, students engage in practical cybersecurity, hold discussions with stakeholders, practice machine learning, work with continuous improvement tools, and organize themselves through collaborative tools. students work on a single project throughout the course, allowing them to dive deeply into their chosen topic and apply their knowledge in a practical setting. groups or tribes for the capstone project are created in several ways. students may organize themselves into groups or tribes, or they may be assigned randomly if needed. each group typically consists of four to five students. a tribe consists of several groups. students seeking placement in specific groups should contact the teaching assistants ( tas ). the organizational points or grading of the capstone project is structured as follows ; 1 / 3 of the grade being a cohort ( tribe ) grade, and 2 / 3 of the grade being a group assignment. note that in rare cases group members are regarded independently. how many working hours correspond to each ects credit?",
        "predicted_answer": "25 to 30",
        "true_answer": "25 to 30 working hours."
    },
    {
        "question": "the first assignment for the capstone project consists of two parts. part 1 is individual, where each student must come up with an idea for a web application that is innovative, useful, and simple to explain. part 2 involves presenting the ideas to the group, discussing advantages and disadvantages, and collectively choosing one idea to develop further. the group will then create a clickable demo using a design tool and prepare slides for a 5 - minute presentation. the assignment deliverables include a presentation in pdf or ppt format with a recorded demo and a report. for the first assignment, the organization of the assignment is as follows ; individual work at the beginning, announcement of groups at the teaching assistant ( ta ) session, presentation given by groups in the session stated in the course lecture, and the delivery of a report. the presentation deliverable should contain an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide ). the report deliverable should include a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future ). what should the report deliverable encompass for assignment one of the capstone project course?",
        "predicted_answer": "explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future ).",
        "true_answer": "a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future )."
    },
    {
        "question": "the first assignment for the capstone project consists of two parts. part 1 is individual, where each student must come up with an idea for a web application that is innovative, useful, and simple to explain. part 2 involves presenting the ideas to the group, discussing advantages and disadvantages, and collectively choosing one idea to develop further. the group will then create a clickable demo using a design tool and prepare slides for a 5 - minute presentation. the assignment deliverables include a presentation in pdf or ppt format with a recorded demo and a report. for the first assignment, the organization of the assignment is as follows ; individual work at the beginning, announcement of groups at the teaching assistant ( ta ) session, presentation given by groups in the session stated in the course lecture, and the delivery of a report. the presentation deliverable should contain an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide ). the report deliverable should include a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future ). which aspects should be covered in the report for assignment one of the capstone project course?",
        "predicted_answer": "explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future ).",
        "true_answer": "the report deliverable should include a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future )."
    },
    {
        "question": "software architecture is a high - level view of a piece of software indicating its main subparts, an explanation of the diverse pieces of software that collaborate, or simply a boxes and arrow diagram ( or several ). the book pattern - oriented software architecture : a system of patterns ( https : / / www. amazon. com / pattern - oriented - software - architecture - system - patterns / dp / 0471958697 ) is a suggested resource for learning about software architecture patterns. in essence, there are types of architecture that make sense from a requirements standpoint ( functional and non - functional ). examples of software architecture are mvc ( model - view - controller ), etl ( data extraction - transformation - loading ), layered, pub - sub ( publish subscribe ), and microservices. for quick reference on software architecture, visit the following wikipedia page ( https : / / en. wikipedia. org / wiki / architectural _ pattern ). information about mvc can be found at ( https : / / en. wikipedia. org / wiki / model - view - controller ). information about etl can be found at ( https : / / en. wikipedia. org / wiki / extract, _ transform, _ load ). information on layered architecture can be found at ( https : / / www. oreilly. com / library / view / software - architecture - patterns / 9781491971437 / ch01. html ). information on pub - sub can be found at ( https : / / cloud. google. com / pubsub / architecture ). information on microservices can be found at ( https : / / www. oreilly. com / library / view / software - architecture - patterns / 9781491971437 / ch04. html ). many other books on software architecture exist here are a few recommendations ( https : / / www. oreilly. com / library / view / fundamentals - of - software / 9781492043447 /, https : / / www. oreilly. com / library / view / building - microservices - 2nd / 9781492034018 /, https : / / www. amazon. com / just - enough - software - architecture - risk - driven / dp / 0984618104 ). where can you find information about pub - sub architecture?",
        "predicted_answer": "( https : / / cloud. google. com / pubsub / architecture ). information on microservices can be found at ( https : / / www. oreilly. com / library / view / software - architecture - patterns / 9781491971437 / ch04. html ).",
        "true_answer": "( https : / / cloud. google. com / pubsub / architecture )."
    },
    {
        "question": "there are several tools for the processes in software development. these tools are meant to support the development not to control it. during the development process in capstone, if tools do not work and this is expressed in a retrospective, it can be changed. the four main categories of tools that development teams need are design tools, source code versioning systems, software development platforms, and continuous integration servers. design tools help to present what a solution should look like and simulate its main interaction ( it is needed to show a project to stakeholders to make it concrete ). many people use powerpoint to show what they want to have. it is even possible to make clickable demos that way. many tools exist, an example is invision. this tool can be used to easily create a first draft. the main concepts are artboards ( screens / landing visualizations ), and interactions. interactions define an event and a landing artboard. a software development platform is a web tool that allows one to store and browse source code through a repository and organize the backlog and the testing process. there are now many platforms online that provide these kinds of functionalities for free or for subscriptions. popular examples include github ( bought by microsoft and is free for open source ), gitlab and gitorious ( free clones of github to use and install on - premises ), devops by microsoft, and jira by atlassian. a continuous integration server is a server that runs pipelines pulls from a repository, compiles the code, runs tests automatically, and notifies you if there is a problem. few recognized and professional tools exist. examples are jenkins ( open source and free ), gitlabci ( open source and free ), and azure pipelines ( by microsoft ). in the capstone project course, we will use the processes and tools that we presented. much of the training for tools should be done online by following tutorials. all these are the basics that everyone needs to understand to do a decent job. ta session will help and answer questions whenever possible. what is a software development platform?",
        "predicted_answer": "a web tool that allows one to store and browse source code through a repository and organize the backlog and the testing process.",
        "true_answer": "a software development platform is a web tool that allows one to store and browse source code through a repository and organize the backlog and the testing process."
    },
    {
        "question": "nowadays, most developers use an agile approach because it is supposed to give better results and is appealing to programmers. many development processes correspond to the agile approach, which is explained in the agile manifesto ( https : / / agilemanifesto. org ). this have become so prevalent that even large companies that relied heavily on the waterfall model now have agile versions of their processes. where can we find information about the agile approach?",
        "predicted_answer": "the agile manifesto ( https : / / agilemanifesto. org ).",
        "true_answer": "agile manifesto ( https : / / agilemanifesto. org )."
    },
    {
        "question": "the first assignment for the capstone project consists of two parts. part 1 is individual, where each student must come up with an idea for a web application that is innovative, useful, and simple to explain. part 2 involves presenting the ideas to the group, discussing advantages and disadvantages, and collectively choosing one idea to develop further. the group will then create a clickable demo using a design tool and prepare slides for a 5 - minute presentation. the assignment deliverables include a presentation in pdf or ppt format with a recorded demo and a report. for the first assignment, the organization of the assignment is as follows ; individual work at the beginning, announcement of groups at the teaching assistant ( ta ) session, presentation given by groups in the session stated in the course lecture, and the delivery of a report. the presentation deliverable should contain an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide ). the report deliverable should include a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future ). what is the expected submission for the first assignment of the capstone project?",
        "predicted_answer": "the assignment deliverables include a presentation in pdf or ppt format with a recorded demo and a report.",
        "true_answer": "deliverables include a presentation in pdf or ppt format with a recorded demo and a report."
    },
    {
        "question": "there are several tools for the processes in software development. these tools are meant to support the development not to control it. during the development process in capstone, if tools do not work and this is expressed in a retrospective, it can be changed. the four main categories of tools that development teams need are design tools, source code versioning systems, software development platforms, and continuous integration servers. design tools help to present what a solution should look like and simulate its main interaction ( it is needed to show a project to stakeholders to make it concrete ). many people use powerpoint to show what they want to have. it is even possible to make clickable demos that way. many tools exist, an example is invision. this tool can be used to easily create a first draft. the main concepts are artboards ( screens / landing visualizations ), and interactions. interactions define an event and a landing artboard. a software development platform is a web tool that allows one to store and browse source code through a repository and organize the backlog and the testing process. there are now many platforms online that provide these kinds of functionalities for free or for subscriptions. popular examples include github ( bought by microsoft and is free for open source ), gitlab and gitorious ( free clones of github to use and install on - premises ), devops by microsoft, and jira by atlassian. a continuous integration server is a server that runs pipelines pulls from a repository, compiles the code, runs tests automatically, and notifies you if there is a problem. few recognized and professional tools exist. examples are jenkins ( open source and free ), gitlabci ( open source and free ), and azure pipelines ( by microsoft ). in the capstone project course, we will use the processes and tools that we presented. much of the training for tools should be done online by following tutorials. all these are the basics that everyone needs to understand to do a decent job. ta session will help and answer questions whenever possible. what are some examples of continuous integration servers?",
        "predicted_answer": "",
        "true_answer": "jenkins ( open source and free ), gitlabci ( open source and free ), and azure pipelines ( by microsoft )."
    },
    {
        "question": "the first assignment for the capstone project consists of two parts. part 1 is individual, where each student must come up with an idea for a web application that is innovative, useful, and simple to explain. part 2 involves presenting the ideas to the group, discussing advantages and disadvantages, and collectively choosing one idea to develop further. the group will then create a clickable demo using a design tool and prepare slides for a 5 - minute presentation. the assignment deliverables include a presentation in pdf or ppt format with a recorded demo and a report. for the first assignment, the organization of the assignment is as follows ; individual work at the beginning, announcement of groups at the teaching assistant ( ta ) session, presentation given by groups in the session stated in the course lecture, and the delivery of a report. the presentation deliverable should contain an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide ). the report deliverable should include a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future ). what elements should be included in the report deliverable for assignment one of the capstone project course?",
        "predicted_answer": "the report deliverable should include a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future ).",
        "true_answer": "explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future )."
    },
    {
        "question": "software architecture is a high - level view of a piece of software indicating its main subparts, an explanation of the diverse pieces of software that collaborate, or simply a boxes and arrow diagram ( or several ). the book pattern - oriented software architecture : a system of patterns ( https : / / www. amazon. com / pattern - oriented - software - architecture - system - patterns / dp / 0471958697 ) is a suggested resource for learning about software architecture patterns. in essence, there are types of architecture that make sense from a requirements standpoint ( functional and non - functional ). examples of software architecture are mvc ( model - view - controller ), etl ( data extraction - transformation - loading ), layered, pub - sub ( publish subscribe ), and microservices. for quick reference on software architecture, visit the following wikipedia page ( https : / / en. wikipedia. org / wiki / architectural _ pattern ). information about mvc can be found at ( https : / / en. wikipedia. org / wiki / model - view - controller ). information about etl can be found at ( https : / / en. wikipedia. org / wiki / extract, _ transform, _ load ). information on layered architecture can be found at ( https : / / www. oreilly. com / library / view / software - architecture - patterns / 9781491971437 / ch01. html ). information on pub - sub can be found at ( https : / / cloud. google. com / pubsub / architecture ). information on microservices can be found at ( https : / / www. oreilly. com / library / view / software - architecture - patterns / 9781491971437 / ch04. html ). many other books on software architecture exist here are a few recommendations ( https : / / www. oreilly. com / library / view / fundamentals - of - software / 9781492043447 /, https : / / www. oreilly. com / library / view / building - microservices - 2nd / 9781492034018 /, https : / / www. amazon. com / just - enough - software - architecture - risk - driven / dp / 0984618104 ). where can you find information about microservices architecture?",
        "predicted_answer": "( https : / / en. wikipedia. org / wiki / model - view - controller ). information about etl can be found at ( https : / / en. wikipedia. org / wiki / extract, _ transform, _ load ). information on layered architecture can be found at ( https : / / www. oreilly. com / library / view / software - architecture - patterns / 9781491971437 / ch01. html ). information on pub - sub can be found at ( https : / / cloud. google. com / pubsub / architecture ). information on microservices can be found at ( https : / / www. oreilly. com / library / view / software - architecture - patterns / 9781491971437 / ch04. html ).",
        "true_answer": "( https : / / www. oreilly. com / library / view / software - architecture - patterns / 9781491971437 / ch04. html )."
    },
    {
        "question": "the first assignment for the capstone project consists of two parts. part 1 is individual, where each student must come up with an idea for a web application that is innovative, useful, and simple to explain. part 2 involves presenting the ideas to the group, discussing advantages and disadvantages, and collectively choosing one idea to develop further. the group will then create a clickable demo using a design tool and prepare slides for a 5 - minute presentation. the assignment deliverables include a presentation in pdf or ppt format with a recorded demo and a report. for the first assignment, the organization of the assignment is as follows ; individual work at the beginning, announcement of groups at the teaching assistant ( ta ) session, presentation given by groups in the session stated in the course lecture, and the delivery of a report. the presentation deliverable should contain an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide ). the report deliverable should include a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future ). what content is required for the presentation deliverable of the initial assignment of the capstone project course?",
        "predicted_answer": "an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide ).",
        "true_answer": "the presentation deliverable should contain an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide )."
    },
    {
        "question": "scrum is a framework used primarily in agile software development, but it's also utilized in various other fields. in scrum, the work is organized in sprints with a duration of 1 week to 1 month. during a sprint, requirements do not change. at the beginning of the sprint, there is a sprint planning event, in which work items are scheduled for the sprint. during the sprint, daily 15 - minute scrum meetings take place for the team to organize and talk about potential issues. people indicate what they did the day before, and what they will do today. if there are impediments to the sprint goals. at the end of the sprint, there is a sprint review which presents the results of the sprint to stakeholders and uses demos. the group discusses their plans for the future. after that, there is a sprint retrospective where the team talks about their impediments, issues, and positive aspects and tries to improve the process for the next sprint and forward. roles in scrum are scrum master, product owner, and development team. a scrum master is the person who takes care of the process, coaches people on scrum, ensures that there is harmony in the team, and makes sure that everyone is going in the right direction. a product owner defines what is in the product backlog, makes sure that everyone understands the backlog and the direction it takes for the requirements, and defines the requirements for the project and the sprint. the development team is made up of developers. work in scrum is organized following a backlog. a backlog is a list of work items that are organized with priorities. work items should be achievable in a sprint. work items list the requirements of the change that needs to be done, they also often include a definition of done. often such requirements are expressed as a user story following this structure : \" as a... i want to... so that... \". there is the product backlog for the whole product and the sprint backlog for a given sprint. if user stories are too large, they can be an epic which then contains several user stories. in the capstone project, a sprint is 2 weeks long, each review is typically graded, and each time student feedback is gathered using menti. what is the purpose of daily scrum meetings?",
        "predicted_answer": "daily 15 - minute scrum meetings take place for the team to organize and talk about potential issues.",
        "true_answer": "to organize and talk about potential issues."
    },
    {
        "question": "the first assignment for the capstone project consists of two parts. part 1 is individual, where each student must come up with an idea for a web application that is innovative, useful, and simple to explain. part 2 involves presenting the ideas to the group, discussing advantages and disadvantages, and collectively choosing one idea to develop further. the group will then create a clickable demo using a design tool and prepare slides for a 5 - minute presentation. the assignment deliverables include a presentation in pdf or ppt format with a recorded demo and a report. for the first assignment, the organization of the assignment is as follows ; individual work at the beginning, announcement of groups at the teaching assistant ( ta ) session, presentation given by groups in the session stated in the course lecture, and the delivery of a report. the presentation deliverable should contain an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide ). the report deliverable should include a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future ). what should be encompassed within the report for assignment one in the capstone project course?",
        "predicted_answer": "the report deliverable should include a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future ).",
        "true_answer": "a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future )."
    },
    {
        "question": "software architecture is a high - level view of a piece of software indicating its main subparts, an explanation of the diverse pieces of software that collaborate, or simply a boxes and arrow diagram ( or several ). the book pattern - oriented software architecture : a system of patterns ( https : / / www. amazon. com / pattern - oriented - software - architecture - system - patterns / dp / 0471958697 ) is a suggested resource for learning about software architecture patterns. in essence, there are types of architecture that make sense from a requirements standpoint ( functional and non - functional ). examples of software architecture are mvc ( model - view - controller ), etl ( data extraction - transformation - loading ), layered, pub - sub ( publish subscribe ), and microservices. for quick reference on software architecture, visit the following wikipedia page ( https : / / en. wikipedia. org / wiki / architectural _ pattern ). information about mvc can be found at ( https : / / en. wikipedia. org / wiki / model - view - controller ). information about etl can be found at ( https : / / en. wikipedia. org / wiki / extract, _ transform, _ load ). information on layered architecture can be found at ( https : / / www. oreilly. com / library / view / software - architecture - patterns / 9781491971437 / ch01. html ). information on pub - sub can be found at ( https : / / cloud. google. com / pubsub / architecture ). information on microservices can be found at ( https : / / www. oreilly. com / library / view / software - architecture - patterns / 9781491971437 / ch04. html ). many other books on software architecture exist here are a few recommendations ( https : / / www. oreilly. com / library / view / fundamentals - of - software / 9781492043447 /, https : / / www. oreilly. com / library / view / building - microservices - 2nd / 9781492034018 /, https : / / www. amazon. com / just - enough - software - architecture - risk - driven / dp / 0984618104 ). how would you define software architecture?",
        "predicted_answer": "high - level view of a piece of software indicating its main subparts,",
        "true_answer": "an explanation of the diverse pieces of software that collaborate,"
    },
    {
        "question": "the first assignment for the capstone project consists of two parts. part 1 is individual, where each student must come up with an idea for a web application that is innovative, useful, and simple to explain. part 2 involves presenting the ideas to the group, discussing advantages and disadvantages, and collectively choosing one idea to develop further. the group will then create a clickable demo using a design tool and prepare slides for a 5 - minute presentation. the assignment deliverables include a presentation in pdf or ppt format with a recorded demo and a report. for the first assignment, the organization of the assignment is as follows ; individual work at the beginning, announcement of groups at the teaching assistant ( ta ) session, presentation given by groups in the session stated in the course lecture, and the delivery of a report. the presentation deliverable should contain an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide ). the report deliverable should include a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future ). what should be contained within the report deliverable for the first assignment of the capstone project course?",
        "predicted_answer": "the report deliverable should include a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future ).",
        "true_answer": "explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future )."
    },
    {
        "question": "the capstone project provides a complete experience of software development from ideation to product. the formal course structure is a mix of formal presentations and guest presentations. the course structure includes requirements elicitations with stakeholders, fast design and prototyping, architecture, practicalities of cybersecurity development following agile processes, and development using state - of - the - art development tools ( git repositories, integration servers, static analyzers ). if you want to learn more about the capstone project course, check the article in the 2nd international workshop on frontiers in software engineering education ( fisee 23 ), edited in lecture notes in computer science by springer ( https : / / link. springer. com / chapter / 10. 1007 / 978 - 3 - 031 - 48639 - 5 _ 3 ). the instructor of the capstone project is prof dr manuel oriol. manuel is a professor of computer science at constructor institute. he has 10 years of experience in academia, and 10 years in industry, co - authored 60 + articles on software engineering and software architecture, and graduated 4 doctoral students, and 25 + msc students. the teaching assistants are muhammad khalid and julia kotovich. mohammed is a phd researcher and lecturer at constructor university. julia kotovich is a phd researcher at constructor institute. to succeed in the program, students must have a strong foundation in programming skills in an imperative language at the cs bachelor level, as well as knowledge of algorithms and data structures at the same level. these foundational skills enable students to tackle the complexities of the capstone project and other advanced coursework. the course plan includes design & ideation, architecture, and initial development, portal ready and deployed, and advanced concepts and refinements based on customer feedback. the course includes an opportunity for students to attend guest lectures, which are presentations given by external lecturers from industry or academia. these lectures cover best practices and other computer science - related topics, providing students with insights from experienced professionals in the field. the start time of guest lectures can be verified in the actual course schedule. taking this course is mandatory for students enrolled in the ast and csse programs. it is a crucial part of the curriculum that ensures you gain the necessary practical and theoretical skills for your future career in software engineering and related fields. who presents the guest lectures in the capstone project course?",
        "predicted_answer": "external lecturers from industry or academia. these lectures cover best practices and other computer science - related topics, providing students with insights from experienced professionals in the field.",
        "true_answer": "external lecturers from industry or academia."
    },
    {
        "question": "the first assignment for the capstone project consists of two parts. part 1 is individual, where each student must come up with an idea for a web application that is innovative, useful, and simple to explain. part 2 involves presenting the ideas to the group, discussing advantages and disadvantages, and collectively choosing one idea to develop further. the group will then create a clickable demo using a design tool and prepare slides for a 5 - minute presentation. the assignment deliverables include a presentation in pdf or ppt format with a recorded demo and a report. for the first assignment, the organization of the assignment is as follows ; individual work at the beginning, announcement of groups at the teaching assistant ( ta ) session, presentation given by groups in the session stated in the course lecture, and the delivery of a report. the presentation deliverable should contain an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide ). the report deliverable should include a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future ). which elements should be featured in the report for the first assignment of the capstone project course?",
        "predicted_answer": "explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future ).",
        "true_answer": "the report deliverable should include a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future )."
    },
    {
        "question": "the first assignment for the capstone project consists of two parts. part 1 is individual, where each student must come up with an idea for a web application that is innovative, useful, and simple to explain. part 2 involves presenting the ideas to the group, discussing advantages and disadvantages, and collectively choosing one idea to develop further. the group will then create a clickable demo using a design tool and prepare slides for a 5 - minute presentation. the assignment deliverables include a presentation in pdf or ppt format with a recorded demo and a report. for the first assignment, the organization of the assignment is as follows ; individual work at the beginning, announcement of groups at the teaching assistant ( ta ) session, presentation given by groups in the session stated in the course lecture, and the delivery of a report. the presentation deliverable should contain an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide ). the report deliverable should include a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future ). what is the opening assignment students encounter in the capstone project course?",
        "predicted_answer": "part 1 is individual, where each student must come up with an idea for a web application that is innovative, useful, and simple to explain. part 2 involves presenting the ideas to the group, discussing advantages and disadvantages, and collectively choosing one idea to develop further.",
        "true_answer": "the first assignment for the capstone project consists of two parts. part 1 is individual, where each student must come up with an idea for a web application that is innovative, useful, and simple to explain. part 2 involves presenting the ideas to the group, discussing advantages and disadvantages, and collectively choosing one idea to develop further."
    },
    {
        "question": "the capstone project provides a complete experience of software development from ideation to product. the formal course structure is a mix of formal presentations and guest presentations. the course structure includes requirements elicitations with stakeholders, fast design and prototyping, architecture, practicalities of cybersecurity development following agile processes, and development using state - of - the - art development tools ( git repositories, integration servers, static analyzers ). if you want to learn more about the capstone project course, check the article in the 2nd international workshop on frontiers in software engineering education ( fisee 23 ), edited in lecture notes in computer science by springer ( https : / / link. springer. com / chapter / 10. 1007 / 978 - 3 - 031 - 48639 - 5 _ 3 ). the instructor of the capstone project is prof dr manuel oriol. manuel is a professor of computer science at constructor institute. he has 10 years of experience in academia, and 10 years in industry, co - authored 60 + articles on software engineering and software architecture, and graduated 4 doctoral students, and 25 + msc students. the teaching assistants are muhammad khalid and julia kotovich. mohammed is a phd researcher and lecturer at constructor university. julia kotovich is a phd researcher at constructor institute. to succeed in the program, students must have a strong foundation in programming skills in an imperative language at the cs bachelor level, as well as knowledge of algorithms and data structures at the same level. these foundational skills enable students to tackle the complexities of the capstone project and other advanced coursework. the course plan includes design & ideation, architecture, and initial development, portal ready and deployed, and advanced concepts and refinements based on customer feedback. the course includes an opportunity for students to attend guest lectures, which are presentations given by external lecturers from industry or academia. these lectures cover best practices and other computer science - related topics, providing students with insights from experienced professionals in the field. the start time of guest lectures can be verified in the actual course schedule. taking this course is mandatory for students enrolled in the ast and csse programs. it is a crucial part of the curriculum that ensures you gain the necessary practical and theoretical skills for your future career in software engineering and related fields. tell me about capstone project.",
        "predicted_answer": "a complete experience of software development from ideation to product.",
        "true_answer": "provides a complete experience of software development from ideation to product."
    },
    {
        "question": "an important aspect of a software product is the need to talk to stakeholders. to do this effectively, you have to prepare a pitch and a demo. a pitch should take 2 - 5 minutes, be simple, straight to the point, fun ( if possible ), and insightful. it should let people understand why they should give you money. a pitch should be structured as follows : problem ( job - to - be - done ), your solution ( why is your solution creating a paradigm shift ), market and competitor analysis, team, business case, unique insights that you have, and ask. the problem section answers the \" why \" question. start with a question like, \" did you ever ask yourself? \" and explain the problem from the customer's perspective. your solution answers \" what \" and \" how. \". present your solution quickly and efficiently, explain the benefits, how it solves the problem, and how it changes everything ( paradigm shift ). for market and competitor analysis, make a 2 - dimensional graph ( find the right axes where your solution fits ) and show the market size if possible. in the team section, present your team with 2 + founders ( include pictures ). the business case should show a \" hockey stick \" growth projection but not promise anything before 3 years. explain your unique insight ( this is why you are the startup that will make it ). in the ask section, indicate what you need, be it money, feedback, or advertisement. the demo should be compelling, answer the problem statement nicely, be short, and work. how to structure the team section of pitch?",
        "predicted_answer": "in the team section, present your team with 2 + founders ( include pictures ).",
        "true_answer": "present your team with 2 + founders ( include pictures )."
    },
    {
        "question": "the capstone project spans three semesters. each semester offers 5 ects credits and each ects credit corresponds to 25 to 30 working hours. during the first semester of the capstone project, students focus on creating and proposing mocks, performing requirements elicitation, prototyping, approaching customers and users, specifying user stories, and organizing themselves using collaborative tools. in the second semester, students work on describing and defending a software architecture, coding in groups and as a large team, integrating independent works, using a source code versioning system, and specifying user stories. in the third semester, students engage in practical cybersecurity, hold discussions with stakeholders, practice machine learning, work with continuous improvement tools, and organize themselves through collaborative tools. students work on a single project throughout the course, allowing them to dive deeply into their chosen topic and apply their knowledge in a practical setting. groups or tribes for the capstone project are created in several ways. students may organize themselves into groups or tribes, or they may be assigned randomly if needed. each group typically consists of four to five students. a tribe consists of several groups. students seeking placement in specific groups should contact the teaching assistants ( tas ). the organizational points or grading of the capstone project is structured as follows ; 1 / 3 of the grade being a cohort ( tribe ) grade, and 2 / 3 of the grade being a group assignment. note that in rare cases group members are regarded independently. what fraction of the capstone project grade is based on group assignments?",
        "predicted_answer": "1 / 3 of the grade being a cohort ( tribe ) grade, and 2 / 3 of the grade being a group assignment.",
        "true_answer": "2 / 3"
    },
    {
        "question": "the first assignment for the capstone project consists of two parts. part 1 is individual, where each student must come up with an idea for a web application that is innovative, useful, and simple to explain. part 2 involves presenting the ideas to the group, discussing advantages and disadvantages, and collectively choosing one idea to develop further. the group will then create a clickable demo using a design tool and prepare slides for a 5 - minute presentation. the assignment deliverables include a presentation in pdf or ppt format with a recorded demo and a report. for the first assignment, the organization of the assignment is as follows ; individual work at the beginning, announcement of groups at the teaching assistant ( ta ) session, presentation given by groups in the session stated in the course lecture, and the delivery of a report. the presentation deliverable should contain an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide ). the report deliverable should include a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future ). what is the expected result for the initial assigment of the capstone project course?",
        "predicted_answer": "the assignment deliverables include a presentation in pdf or ppt format with a recorded demo and a report.",
        "true_answer": "deliverables include a presentation in pdf or ppt format with a recorded demo and a report."
    },
    {
        "question": "the first assignment for the capstone project consists of two parts. part 1 is individual, where each student must come up with an idea for a web application that is innovative, useful, and simple to explain. part 2 involves presenting the ideas to the group, discussing advantages and disadvantages, and collectively choosing one idea to develop further. the group will then create a clickable demo using a design tool and prepare slides for a 5 - minute presentation. the assignment deliverables include a presentation in pdf or ppt format with a recorded demo and a report. for the first assignment, the organization of the assignment is as follows ; individual work at the beginning, announcement of groups at the teaching assistant ( ta ) session, presentation given by groups in the session stated in the course lecture, and the delivery of a report. the presentation deliverable should contain an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide ). the report deliverable should include a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future ). what elements should be included in the presentation deliverable?",
        "predicted_answer": "an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide ).",
        "true_answer": "the presentation deliverable should contain an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide )."
    },
    {
        "question": "software architecture is a high - level view of a piece of software indicating its main subparts, an explanation of the diverse pieces of software that collaborate, or simply a boxes and arrow diagram ( or several ). the book pattern - oriented software architecture : a system of patterns ( https : / / www. amazon. com / pattern - oriented - software - architecture - system - patterns / dp / 0471958697 ) is a suggested resource for learning about software architecture patterns. in essence, there are types of architecture that make sense from a requirements standpoint ( functional and non - functional ). examples of software architecture are mvc ( model - view - controller ), etl ( data extraction - transformation - loading ), layered, pub - sub ( publish subscribe ), and microservices. for quick reference on software architecture, visit the following wikipedia page ( https : / / en. wikipedia. org / wiki / architectural _ pattern ). information about mvc can be found at ( https : / / en. wikipedia. org / wiki / model - view - controller ). information about etl can be found at ( https : / / en. wikipedia. org / wiki / extract, _ transform, _ load ). information on layered architecture can be found at ( https : / / www. oreilly. com / library / view / software - architecture - patterns / 9781491971437 / ch01. html ). information on pub - sub can be found at ( https : / / cloud. google. com / pubsub / architecture ). information on microservices can be found at ( https : / / www. oreilly. com / library / view / software - architecture - patterns / 9781491971437 / ch04. html ). many other books on software architecture exist here are a few recommendations ( https : / / www. oreilly. com / library / view / fundamentals - of - software / 9781492043447 /, https : / / www. oreilly. com / library / view / building - microservices - 2nd / 9781492034018 /, https : / / www. amazon. com / just - enough - software - architecture - risk - driven / dp / 0984618104 ). can you provide a description of software architecture?",
        "predicted_answer": "high - level view of a piece of software indicating its main subparts,",
        "true_answer": "high - level view of a piece of software indicating its main subparts, an explanation of the diverse pieces of software that collaborate, or simply a boxes and arrow diagram ( or several )."
    },
    {
        "question": "the first assignment for the capstone project consists of two parts. part 1 is individual, where each student must come up with an idea for a web application that is innovative, useful, and simple to explain. part 2 involves presenting the ideas to the group, discussing advantages and disadvantages, and collectively choosing one idea to develop further. the group will then create a clickable demo using a design tool and prepare slides for a 5 - minute presentation. the assignment deliverables include a presentation in pdf or ppt format with a recorded demo and a report. for the first assignment, the organization of the assignment is as follows ; individual work at the beginning, announcement of groups at the teaching assistant ( ta ) session, presentation given by groups in the session stated in the course lecture, and the delivery of a report. the presentation deliverable should contain an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide ). the report deliverable should include a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future ). what content should be part of the assignment one presentation deliverable of the capstone project course?",
        "predicted_answer": "an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide ).",
        "true_answer": "the presentation deliverable should contain an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide )."
    },
    {
        "question": "the first assignment for the capstone project consists of two parts. part 1 is individual, where each student must come up with an idea for a web application that is innovative, useful, and simple to explain. part 2 involves presenting the ideas to the group, discussing advantages and disadvantages, and collectively choosing one idea to develop further. the group will then create a clickable demo using a design tool and prepare slides for a 5 - minute presentation. the assignment deliverables include a presentation in pdf or ppt format with a recorded demo and a report. for the first assignment, the organization of the assignment is as follows ; individual work at the beginning, announcement of groups at the teaching assistant ( ta ) session, presentation given by groups in the session stated in the course lecture, and the delivery of a report. the presentation deliverable should contain an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide ). the report deliverable should include a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future ). how is the first assignment laid out in the capstone project course?",
        "predicted_answer": "",
        "true_answer": "individual work at the beginning, announcement of groups at the teaching assistant ( ta ) session, presentation given by groups in the session stated in the course lecture, and the delivery of a report."
    },
    {
        "question": "the first assignment for the capstone project consists of two parts. part 1 is individual, where each student must come up with an idea for a web application that is innovative, useful, and simple to explain. part 2 involves presenting the ideas to the group, discussing advantages and disadvantages, and collectively choosing one idea to develop further. the group will then create a clickable demo using a design tool and prepare slides for a 5 - minute presentation. the assignment deliverables include a presentation in pdf or ppt format with a recorded demo and a report. for the first assignment, the organization of the assignment is as follows ; individual work at the beginning, announcement of groups at the teaching assistant ( ta ) session, presentation given by groups in the session stated in the course lecture, and the delivery of a report. the presentation deliverable should contain an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide ). the report deliverable should include a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future ). what is the expected submission for the first assignment of the capstone project course?",
        "predicted_answer": "the assignment deliverables include a presentation in pdf or ppt format with a recorded demo and a report.",
        "true_answer": "deliverables include a presentation in pdf or ppt format with a recorded demo and a report."
    },
    {
        "question": "the first assignment for the capstone project consists of two parts. part 1 is individual, where each student must come up with an idea for a web application that is innovative, useful, and simple to explain. part 2 involves presenting the ideas to the group, discussing advantages and disadvantages, and collectively choosing one idea to develop further. the group will then create a clickable demo using a design tool and prepare slides for a 5 - minute presentation. the assignment deliverables include a presentation in pdf or ppt format with a recorded demo and a report. for the first assignment, the organization of the assignment is as follows ; individual work at the beginning, announcement of groups at the teaching assistant ( ta ) session, presentation given by groups in the session stated in the course lecture, and the delivery of a report. the presentation deliverable should contain an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide ). the report deliverable should include a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future ). what content is required for the report deliverable in assignment one of the capstone project course?",
        "predicted_answer": "the report deliverable should include a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future ).",
        "true_answer": "explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future )."
    },
    {
        "question": "the first assignment for the capstone project consists of two parts. part 1 is individual, where each student must come up with an idea for a web application that is innovative, useful, and simple to explain. part 2 involves presenting the ideas to the group, discussing advantages and disadvantages, and collectively choosing one idea to develop further. the group will then create a clickable demo using a design tool and prepare slides for a 5 - minute presentation. the assignment deliverables include a presentation in pdf or ppt format with a recorded demo and a report. for the first assignment, the organization of the assignment is as follows ; individual work at the beginning, announcement of groups at the teaching assistant ( ta ) session, presentation given by groups in the session stated in the course lecture, and the delivery of a report. the presentation deliverable should contain an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide ). the report deliverable should include a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future ). which details need to be included in the report deliverable for the first assignment of the capstone project course?",
        "predicted_answer": "explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future ).",
        "true_answer": "a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future )."
    },
    {
        "question": "the capstone project provides a complete experience of software development from ideation to product. the formal course structure is a mix of formal presentations and guest presentations. the course structure includes requirements elicitations with stakeholders, fast design and prototyping, architecture, practicalities of cybersecurity development following agile processes, and development using state - of - the - art development tools ( git repositories, integration servers, static analyzers ). if you want to learn more about the capstone project course, check the article in the 2nd international workshop on frontiers in software engineering education ( fisee 23 ), edited in lecture notes in computer science by springer ( https : / / link. springer. com / chapter / 10. 1007 / 978 - 3 - 031 - 48639 - 5 _ 3 ). the instructor of the capstone project is prof dr manuel oriol. manuel is a professor of computer science at constructor institute. he has 10 years of experience in academia, and 10 years in industry, co - authored 60 + articles on software engineering and software architecture, and graduated 4 doctoral students, and 25 + msc students. the teaching assistants are muhammad khalid and julia kotovich. mohammed is a phd researcher and lecturer at constructor university. julia kotovich is a phd researcher at constructor institute. to succeed in the program, students must have a strong foundation in programming skills in an imperative language at the cs bachelor level, as well as knowledge of algorithms and data structures at the same level. these foundational skills enable students to tackle the complexities of the capstone project and other advanced coursework. the course plan includes design & ideation, architecture, and initial development, portal ready and deployed, and advanced concepts and refinements based on customer feedback. the course includes an opportunity for students to attend guest lectures, which are presentations given by external lecturers from industry or academia. these lectures cover best practices and other computer science - related topics, providing students with insights from experienced professionals in the field. the start time of guest lectures can be verified in the actual course schedule. taking this course is mandatory for students enrolled in the ast and csse programs. it is a crucial part of the curriculum that ensures you gain the necessary practical and theoretical skills for your future career in software engineering and related fields. is capstone project course mandatory?",
        "predicted_answer": "taking this course is mandatory for students enrolled in the ast and csse programs.",
        "true_answer": "taking this course is mandatory for students enrolled in the ast and csse programs. it is a crucial part of the curriculum that ensures you gain the necessary practical and theoretical skills for your future career in software engineering and related fields."
    },
    {
        "question": "the capstone project spans three semesters. each semester offers 5 ects credits and each ects credit corresponds to 25 to 30 working hours. during the first semester of the capstone project, students focus on creating and proposing mocks, performing requirements elicitation, prototyping, approaching customers and users, specifying user stories, and organizing themselves using collaborative tools. in the second semester, students work on describing and defending a software architecture, coding in groups and as a large team, integrating independent works, using a source code versioning system, and specifying user stories. in the third semester, students engage in practical cybersecurity, hold discussions with stakeholders, practice machine learning, work with continuous improvement tools, and organize themselves through collaborative tools. students work on a single project throughout the course, allowing them to dive deeply into their chosen topic and apply their knowledge in a practical setting. groups or tribes for the capstone project are created in several ways. students may organize themselves into groups or tribes, or they may be assigned randomly if needed. each group typically consists of four to five students. a tribe consists of several groups. students seeking placement in specific groups should contact the teaching assistants ( tas ). the organizational points or grading of the capstone project is structured as follows ; 1 / 3 of the grade being a cohort ( tribe ) grade, and 2 / 3 of the grade being a group assignment. note that in rare cases group members are regarded independently. what should a student do if they want to join a specific group?",
        "predicted_answer": "contact the teaching assistants ( tas ).",
        "true_answer": "students seeking placement in specific groups should contact the teaching assistants ( tas )."
    },
    {
        "question": "the capstone project provides a complete experience of software development from ideation to product. the formal course structure is a mix of formal presentations and guest presentations. the course structure includes requirements elicitations with stakeholders, fast design and prototyping, architecture, practicalities of cybersecurity development following agile processes, and development using state - of - the - art development tools ( git repositories, integration servers, static analyzers ). if you want to learn more about the capstone project course, check the article in the 2nd international workshop on frontiers in software engineering education ( fisee 23 ), edited in lecture notes in computer science by springer ( https : / / link. springer. com / chapter / 10. 1007 / 978 - 3 - 031 - 48639 - 5 _ 3 ). the instructor of the capstone project is prof dr manuel oriol. manuel is a professor of computer science at constructor institute. he has 10 years of experience in academia, and 10 years in industry, co - authored 60 + articles on software engineering and software architecture, and graduated 4 doctoral students, and 25 + msc students. the teaching assistants are muhammad khalid and julia kotovich. mohammed is a phd researcher and lecturer at constructor university. julia kotovich is a phd researcher at constructor institute. to succeed in the program, students must have a strong foundation in programming skills in an imperative language at the cs bachelor level, as well as knowledge of algorithms and data structures at the same level. these foundational skills enable students to tackle the complexities of the capstone project and other advanced coursework. the course plan includes design & ideation, architecture, and initial development, portal ready and deployed, and advanced concepts and refinements based on customer feedback. the course includes an opportunity for students to attend guest lectures, which are presentations given by external lecturers from industry or academia. these lectures cover best practices and other computer science - related topics, providing students with insights from experienced professionals in the field. the start time of guest lectures can be verified in the actual course schedule. taking this course is mandatory for students enrolled in the ast and csse programs. it is a crucial part of the curriculum that ensures you gain the necessary practical and theoretical skills for your future career in software engineering and related fields. what fundamental competencies are crucial for students to succeed in the capstone project program?",
        "predicted_answer": "programming skills in an imperative language at the cs bachelor level, as well as knowledge of algorithms and data structures at the same level.",
        "true_answer": "students must have a strong foundation in programming skills in an imperative language at the cs bachelor level, as well as knowledge of algorithms and data structures at the same level."
    },
    {
        "question": "the capstone project provides a complete experience of software development from ideation to product. the formal course structure is a mix of formal presentations and guest presentations. the course structure includes requirements elicitations with stakeholders, fast design and prototyping, architecture, practicalities of cybersecurity development following agile processes, and development using state - of - the - art development tools ( git repositories, integration servers, static analyzers ). if you want to learn more about the capstone project course, check the article in the 2nd international workshop on frontiers in software engineering education ( fisee 23 ), edited in lecture notes in computer science by springer ( https : / / link. springer. com / chapter / 10. 1007 / 978 - 3 - 031 - 48639 - 5 _ 3 ). the instructor of the capstone project is prof dr manuel oriol. manuel is a professor of computer science at constructor institute. he has 10 years of experience in academia, and 10 years in industry, co - authored 60 + articles on software engineering and software architecture, and graduated 4 doctoral students, and 25 + msc students. the teaching assistants are muhammad khalid and julia kotovich. mohammed is a phd researcher and lecturer at constructor university. julia kotovich is a phd researcher at constructor institute. to succeed in the program, students must have a strong foundation in programming skills in an imperative language at the cs bachelor level, as well as knowledge of algorithms and data structures at the same level. these foundational skills enable students to tackle the complexities of the capstone project and other advanced coursework. the course plan includes design & ideation, architecture, and initial development, portal ready and deployed, and advanced concepts and refinements based on customer feedback. the course includes an opportunity for students to attend guest lectures, which are presentations given by external lecturers from industry or academia. these lectures cover best practices and other computer science - related topics, providing students with insights from experienced professionals in the field. the start time of guest lectures can be verified in the actual course schedule. taking this course is mandatory for students enrolled in the ast and csse programs. it is a crucial part of the curriculum that ensures you gain the necessary practical and theoretical skills for your future career in software engineering and related fields. what do the guest lectures in the capstone project cover?",
        "predicted_answer": "best practices and other computer science - related topics, providing students with insights from experienced professionals in the field.",
        "true_answer": "best practices and other computer science - related topics,"
    },
    {
        "question": "there are several tools for the processes in software development. these tools are meant to support the development not to control it. during the development process in capstone, if tools do not work and this is expressed in a retrospective, it can be changed. the four main categories of tools that development teams need are design tools, source code versioning systems, software development platforms, and continuous integration servers. design tools help to present what a solution should look like and simulate its main interaction ( it is needed to show a project to stakeholders to make it concrete ). many people use powerpoint to show what they want to have. it is even possible to make clickable demos that way. many tools exist, an example is invision. this tool can be used to easily create a first draft. the main concepts are artboards ( screens / landing visualizations ), and interactions. interactions define an event and a landing artboard. a software development platform is a web tool that allows one to store and browse source code through a repository and organize the backlog and the testing process. there are now many platforms online that provide these kinds of functionalities for free or for subscriptions. popular examples include github ( bought by microsoft and is free for open source ), gitlab and gitorious ( free clones of github to use and install on - premises ), devops by microsoft, and jira by atlassian. a continuous integration server is a server that runs pipelines pulls from a repository, compiles the code, runs tests automatically, and notifies you if there is a problem. few recognized and professional tools exist. examples are jenkins ( open source and free ), gitlabci ( open source and free ), and azure pipelines ( by microsoft ). in the capstone project course, we will use the processes and tools that we presented. much of the training for tools should be done online by following tutorials. all these are the basics that everyone needs to understand to do a decent job. ta session will help and answer questions whenever possible. could you name a design tool?",
        "predicted_answer": "",
        "true_answer": "invision."
    },
    {
        "question": "the capstone project provides a complete experience of software development from ideation to product. the formal course structure is a mix of formal presentations and guest presentations. the course structure includes requirements elicitations with stakeholders, fast design and prototyping, architecture, practicalities of cybersecurity development following agile processes, and development using state - of - the - art development tools ( git repositories, integration servers, static analyzers ). if you want to learn more about the capstone project course, check the article in the 2nd international workshop on frontiers in software engineering education ( fisee 23 ), edited in lecture notes in computer science by springer ( https : / / link. springer. com / chapter / 10. 1007 / 978 - 3 - 031 - 48639 - 5 _ 3 ). the instructor of the capstone project is prof dr manuel oriol. manuel is a professor of computer science at constructor institute. he has 10 years of experience in academia, and 10 years in industry, co - authored 60 + articles on software engineering and software architecture, and graduated 4 doctoral students, and 25 + msc students. the teaching assistants are muhammad khalid and julia kotovich. mohammed is a phd researcher and lecturer at constructor university. julia kotovich is a phd researcher at constructor institute. to succeed in the program, students must have a strong foundation in programming skills in an imperative language at the cs bachelor level, as well as knowledge of algorithms and data structures at the same level. these foundational skills enable students to tackle the complexities of the capstone project and other advanced coursework. the course plan includes design & ideation, architecture, and initial development, portal ready and deployed, and advanced concepts and refinements based on customer feedback. the course includes an opportunity for students to attend guest lectures, which are presentations given by external lecturers from industry or academia. these lectures cover best practices and other computer science - related topics, providing students with insights from experienced professionals in the field. the start time of guest lectures can be verified in the actual course schedule. taking this course is mandatory for students enrolled in the ast and csse programs. it is a crucial part of the curriculum that ensures you gain the necessary practical and theoretical skills for your future career in software engineering and related fields. what is manuel oriol's professional background?",
        "predicted_answer": "manuel is a professor of computer science at constructor institute. he has 10 years of experience in academia, and 10 years in industry, co - authored 60 + articles on software engineering and software architecture, and graduated 4 doctoral students, and 25 + msc students.",
        "true_answer": "manuel is a professor of computer science at constructor institute."
    },
    {
        "question": "the capstone project provides a complete experience of software development from ideation to product. the formal course structure is a mix of formal presentations and guest presentations. the course structure includes requirements elicitations with stakeholders, fast design and prototyping, architecture, practicalities of cybersecurity development following agile processes, and development using state - of - the - art development tools ( git repositories, integration servers, static analyzers ). if you want to learn more about the capstone project course, check the article in the 2nd international workshop on frontiers in software engineering education ( fisee 23 ), edited in lecture notes in computer science by springer ( https : / / link. springer. com / chapter / 10. 1007 / 978 - 3 - 031 - 48639 - 5 _ 3 ). the instructor of the capstone project is prof dr manuel oriol. manuel is a professor of computer science at constructor institute. he has 10 years of experience in academia, and 10 years in industry, co - authored 60 + articles on software engineering and software architecture, and graduated 4 doctoral students, and 25 + msc students. the teaching assistants are muhammad khalid and julia kotovich. mohammed is a phd researcher and lecturer at constructor university. julia kotovich is a phd researcher at constructor institute. to succeed in the program, students must have a strong foundation in programming skills in an imperative language at the cs bachelor level, as well as knowledge of algorithms and data structures at the same level. these foundational skills enable students to tackle the complexities of the capstone project and other advanced coursework. the course plan includes design & ideation, architecture, and initial development, portal ready and deployed, and advanced concepts and refinements based on customer feedback. the course includes an opportunity for students to attend guest lectures, which are presentations given by external lecturers from industry or academia. these lectures cover best practices and other computer science - related topics, providing students with insights from experienced professionals in the field. the start time of guest lectures can be verified in the actual course schedule. taking this course is mandatory for students enrolled in the ast and csse programs. it is a crucial part of the curriculum that ensures you gain the necessary practical and theoretical skills for your future career in software engineering and related fields. what is the definition of the capstone project course?",
        "predicted_answer": "a complete experience of software development from ideation to product.",
        "true_answer": "complete experience of software development from ideation to product."
    },
    {
        "question": "the first assignment for the capstone project consists of two parts. part 1 is individual, where each student must come up with an idea for a web application that is innovative, useful, and simple to explain. part 2 involves presenting the ideas to the group, discussing advantages and disadvantages, and collectively choosing one idea to develop further. the group will then create a clickable demo using a design tool and prepare slides for a 5 - minute presentation. the assignment deliverables include a presentation in pdf or ppt format with a recorded demo and a report. for the first assignment, the organization of the assignment is as follows ; individual work at the beginning, announcement of groups at the teaching assistant ( ta ) session, presentation given by groups in the session stated in the course lecture, and the delivery of a report. the presentation deliverable should contain an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide ). the report deliverable should include a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future ). what is the first assignment in the capstone project course?",
        "predicted_answer": "part 1 is individual, where each student must come up with an idea for a web application that is innovative, useful, and simple to explain. part 2 involves presenting the ideas to the group, discussing advantages and disadvantages, and collectively choosing one idea to develop further.",
        "true_answer": "the first assignment for the capstone project consists of two parts. part 1 is individual, where each student must come up with an idea for a web application that is innovative, useful, and simple to explain. part 2 involves presenting the ideas to the group, discussing advantages and disadvantages, and collectively choosing one idea to develop further."
    },
    {
        "question": "the capstone project spans three semesters. each semester offers 5 ects credits and each ects credit corresponds to 25 to 30 working hours. during the first semester of the capstone project, students focus on creating and proposing mocks, performing requirements elicitation, prototyping, approaching customers and users, specifying user stories, and organizing themselves using collaborative tools. in the second semester, students work on describing and defending a software architecture, coding in groups and as a large team, integrating independent works, using a source code versioning system, and specifying user stories. in the third semester, students engage in practical cybersecurity, hold discussions with stakeholders, practice machine learning, work with continuous improvement tools, and organize themselves through collaborative tools. students work on a single project throughout the course, allowing them to dive deeply into their chosen topic and apply their knowledge in a practical setting. groups or tribes for the capstone project are created in several ways. students may organize themselves into groups or tribes, or they may be assigned randomly if needed. each group typically consists of four to five students. a tribe consists of several groups. students seeking placement in specific groups should contact the teaching assistants ( tas ). the organizational points or grading of the capstone project is structured as follows ; 1 / 3 of the grade being a cohort ( tribe ) grade, and 2 / 3 of the grade being a group assignment. note that in rare cases group members are regarded independently. what practical skills do students develop in the third semester?",
        "predicted_answer": "practical cybersecurity, hold discussions with stakeholders, practice machine learning, work with continuous improvement tools, and organize themselves through collaborative tools.",
        "true_answer": "practical cybersecurity, hold discussions with stakeholders, practice machine learning, work with continuous improvement tools,"
    },
    {
        "question": "the first assignment for the capstone project consists of two parts. part 1 is individual, where each student must come up with an idea for a web application that is innovative, useful, and simple to explain. part 2 involves presenting the ideas to the group, discussing advantages and disadvantages, and collectively choosing one idea to develop further. the group will then create a clickable demo using a design tool and prepare slides for a 5 - minute presentation. the assignment deliverables include a presentation in pdf or ppt format with a recorded demo and a report. for the first assignment, the organization of the assignment is as follows ; individual work at the beginning, announcement of groups at the teaching assistant ( ta ) session, presentation given by groups in the session stated in the course lecture, and the delivery of a report. the presentation deliverable should contain an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide ). the report deliverable should include a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future ). which aspects should be covered in the assignment one presentation submission of the capstone project?",
        "predicted_answer": "an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide ).",
        "true_answer": "the presentation deliverable should contain an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide )."
    },
    {
        "question": "the first assignment for the capstone project consists of two parts. part 1 is individual, where each student must come up with an idea for a web application that is innovative, useful, and simple to explain. part 2 involves presenting the ideas to the group, discussing advantages and disadvantages, and collectively choosing one idea to develop further. the group will then create a clickable demo using a design tool and prepare slides for a 5 - minute presentation. the assignment deliverables include a presentation in pdf or ppt format with a recorded demo and a report. for the first assignment, the organization of the assignment is as follows ; individual work at the beginning, announcement of groups at the teaching assistant ( ta ) session, presentation given by groups in the session stated in the course lecture, and the delivery of a report. the presentation deliverable should contain an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide ). the report deliverable should include a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future ). what information should be contained within the report deliverable for the first assignment of the capstone project course?",
        "predicted_answer": "the report deliverable should include a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future ).",
        "true_answer": "explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future )."
    },
    {
        "question": "the capstone project spans three semesters. each semester offers 5 ects credits and each ects credit corresponds to 25 to 30 working hours. during the first semester of the capstone project, students focus on creating and proposing mocks, performing requirements elicitation, prototyping, approaching customers and users, specifying user stories, and organizing themselves using collaborative tools. in the second semester, students work on describing and defending a software architecture, coding in groups and as a large team, integrating independent works, using a source code versioning system, and specifying user stories. in the third semester, students engage in practical cybersecurity, hold discussions with stakeholders, practice machine learning, work with continuous improvement tools, and organize themselves through collaborative tools. students work on a single project throughout the course, allowing them to dive deeply into their chosen topic and apply their knowledge in a practical setting. groups or tribes for the capstone project are created in several ways. students may organize themselves into groups or tribes, or they may be assigned randomly if needed. each group typically consists of four to five students. a tribe consists of several groups. students seeking placement in specific groups should contact the teaching assistants ( tas ). the organizational points or grading of the capstone project is structured as follows ; 1 / 3 of the grade being a cohort ( tribe ) grade, and 2 / 3 of the grade being a group assignment. note that in rare cases group members are regarded independently. what fraction of the capstone project grade is based on the cohort performance?",
        "predicted_answer": "1 / 3 of the grade being a cohort ( tribe ) grade, and 2 / 3 of the grade being a group assignment.",
        "true_answer": "1 / 3"
    },
    {
        "question": "the capstone project spans three semesters. each semester offers 5 ects credits and each ects credit corresponds to 25 to 30 working hours. during the first semester of the capstone project, students focus on creating and proposing mocks, performing requirements elicitation, prototyping, approaching customers and users, specifying user stories, and organizing themselves using collaborative tools. in the second semester, students work on describing and defending a software architecture, coding in groups and as a large team, integrating independent works, using a source code versioning system, and specifying user stories. in the third semester, students engage in practical cybersecurity, hold discussions with stakeholders, practice machine learning, work with continuous improvement tools, and organize themselves through collaborative tools. students work on a single project throughout the course, allowing them to dive deeply into their chosen topic and apply their knowledge in a practical setting. groups or tribes for the capstone project are created in several ways. students may organize themselves into groups or tribes, or they may be assigned randomly if needed. each group typically consists of four to five students. a tribe consists of several groups. students seeking placement in specific groups should contact the teaching assistants ( tas ). the organizational points or grading of the capstone project is structured as follows ; 1 / 3 of the grade being a cohort ( tribe ) grade, and 2 / 3 of the grade being a group assignment. note that in rare cases group members are regarded independently. how many ects credits does each semester of the capstone project offer?",
        "predicted_answer": "5 ects credits",
        "true_answer": "5"
    },
    {
        "question": "the capstone project provides a complete experience of software development from ideation to product. the formal course structure is a mix of formal presentations and guest presentations. the course structure includes requirements elicitations with stakeholders, fast design and prototyping, architecture, practicalities of cybersecurity development following agile processes, and development using state - of - the - art development tools ( git repositories, integration servers, static analyzers ). if you want to learn more about the capstone project course, check the article in the 2nd international workshop on frontiers in software engineering education ( fisee 23 ), edited in lecture notes in computer science by springer ( https : / / link. springer. com / chapter / 10. 1007 / 978 - 3 - 031 - 48639 - 5 _ 3 ). the instructor of the capstone project is prof dr manuel oriol. manuel is a professor of computer science at constructor institute. he has 10 years of experience in academia, and 10 years in industry, co - authored 60 + articles on software engineering and software architecture, and graduated 4 doctoral students, and 25 + msc students. the teaching assistants are muhammad khalid and julia kotovich. mohammed is a phd researcher and lecturer at constructor university. julia kotovich is a phd researcher at constructor institute. to succeed in the program, students must have a strong foundation in programming skills in an imperative language at the cs bachelor level, as well as knowledge of algorithms and data structures at the same level. these foundational skills enable students to tackle the complexities of the capstone project and other advanced coursework. the course plan includes design & ideation, architecture, and initial development, portal ready and deployed, and advanced concepts and refinements based on customer feedback. the course includes an opportunity for students to attend guest lectures, which are presentations given by external lecturers from industry or academia. these lectures cover best practices and other computer science - related topics, providing students with insights from experienced professionals in the field. the start time of guest lectures can be verified in the actual course schedule. taking this course is mandatory for students enrolled in the ast and csse programs. it is a crucial part of the curriculum that ensures you gain the necessary practical and theoretical skills for your future career in software engineering and related fields. can you explain the concept of the capstone project course?",
        "predicted_answer": "a complete experience of software development from ideation to product. the formal course structure is a mix of formal presentations and guest presentations. the course structure includes requirements elicitations with stakeholders, fast design and prototyping, architecture, practicalities of cybersecurity development following agile processes, and development using state - of - the - art development tools ( git repositories, integration servers, static analyzers ). if you want to learn more about the capstone project course, check the article in the 2nd international workshop on frontiers in software engineering education ( fisee 23 ), edited in lecture notes in computer science by springer ( https : / / link. springer. com / chapter / 10. 1007 / 978 - 3 - 031 - 48639 - 5 _ 3 ). the instructor of the capstone project is prof dr manuel oriol. manuel is a professor of computer science at constructor institute. he has 10 years of experience in academia, and 10 years in industry, co - authored 60 + articles on software engineering and software architecture, and graduated 4 doctoral students, and 25 + msc students. the teaching assistants are muhammad khalid and julia kotovich. mohammed is a phd researcher and lecturer at constructor university. julia kotovich is a phd researcher at constructor institute. to succeed in the program, students must have a strong foundation in programming skills in an imperative language at the cs bachelor level, as well as knowledge of algorithms and data structures at the same level. these foundational skills enable students to tackle the complexities of the capstone project and other advanced coursework. the course plan includes design & ideation, architecture, and initial development, portal ready and deployed, and advanced concepts and refinements based on customer feedback.",
        "true_answer": "a complete experience of software development from ideation to product."
    },
    {
        "question": "the first assignment for the capstone project consists of two parts. part 1 is individual, where each student must come up with an idea for a web application that is innovative, useful, and simple to explain. part 2 involves presenting the ideas to the group, discussing advantages and disadvantages, and collectively choosing one idea to develop further. the group will then create a clickable demo using a design tool and prepare slides for a 5 - minute presentation. the assignment deliverables include a presentation in pdf or ppt format with a recorded demo and a report. for the first assignment, the organization of the assignment is as follows ; individual work at the beginning, announcement of groups at the teaching assistant ( ta ) session, presentation given by groups in the session stated in the course lecture, and the delivery of a report. the presentation deliverable should contain an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide ). the report deliverable should include a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future ). what content is necessary for inclusion in the presentation deliverable of assignment one?",
        "predicted_answer": "an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide ).",
        "true_answer": "the presentation deliverable should contain an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide )."
    },
    {
        "question": "the capstone project provides a complete experience of software development from ideation to product. the formal course structure is a mix of formal presentations and guest presentations. the course structure includes requirements elicitations with stakeholders, fast design and prototyping, architecture, practicalities of cybersecurity development following agile processes, and development using state - of - the - art development tools ( git repositories, integration servers, static analyzers ). if you want to learn more about the capstone project course, check the article in the 2nd international workshop on frontiers in software engineering education ( fisee 23 ), edited in lecture notes in computer science by springer ( https : / / link. springer. com / chapter / 10. 1007 / 978 - 3 - 031 - 48639 - 5 _ 3 ). the instructor of the capstone project is prof dr manuel oriol. manuel is a professor of computer science at constructor institute. he has 10 years of experience in academia, and 10 years in industry, co - authored 60 + articles on software engineering and software architecture, and graduated 4 doctoral students, and 25 + msc students. the teaching assistants are muhammad khalid and julia kotovich. mohammed is a phd researcher and lecturer at constructor university. julia kotovich is a phd researcher at constructor institute. to succeed in the program, students must have a strong foundation in programming skills in an imperative language at the cs bachelor level, as well as knowledge of algorithms and data structures at the same level. these foundational skills enable students to tackle the complexities of the capstone project and other advanced coursework. the course plan includes design & ideation, architecture, and initial development, portal ready and deployed, and advanced concepts and refinements based on customer feedback. the course includes an opportunity for students to attend guest lectures, which are presentations given by external lecturers from industry or academia. these lectures cover best practices and other computer science - related topics, providing students with insights from experienced professionals in the field. the start time of guest lectures can be verified in the actual course schedule. taking this course is mandatory for students enrolled in the ast and csse programs. it is a crucial part of the curriculum that ensures you gain the necessary practical and theoretical skills for your future career in software engineering and related fields. provide some basic information about manuel oriol",
        "predicted_answer": "manuel is a professor of computer science at constructor institute. he has 10 years of experience in academia, and 10 years in industry, co - authored 60 + articles on software engineering and software architecture, and graduated 4 doctoral students, and 25 + msc students.",
        "true_answer": "manuel is a professor of computer science at constructor institute."
    },
    {
        "question": "the capstone project provides a complete experience of software development from ideation to product. the formal course structure is a mix of formal presentations and guest presentations. the course structure includes requirements elicitations with stakeholders, fast design and prototyping, architecture, practicalities of cybersecurity development following agile processes, and development using state - of - the - art development tools ( git repositories, integration servers, static analyzers ). if you want to learn more about the capstone project course, check the article in the 2nd international workshop on frontiers in software engineering education ( fisee 23 ), edited in lecture notes in computer science by springer ( https : / / link. springer. com / chapter / 10. 1007 / 978 - 3 - 031 - 48639 - 5 _ 3 ). the instructor of the capstone project is prof dr manuel oriol. manuel is a professor of computer science at constructor institute. he has 10 years of experience in academia, and 10 years in industry, co - authored 60 + articles on software engineering and software architecture, and graduated 4 doctoral students, and 25 + msc students. the teaching assistants are muhammad khalid and julia kotovich. mohammed is a phd researcher and lecturer at constructor university. julia kotovich is a phd researcher at constructor institute. to succeed in the program, students must have a strong foundation in programming skills in an imperative language at the cs bachelor level, as well as knowledge of algorithms and data structures at the same level. these foundational skills enable students to tackle the complexities of the capstone project and other advanced coursework. the course plan includes design & ideation, architecture, and initial development, portal ready and deployed, and advanced concepts and refinements based on customer feedback. the course includes an opportunity for students to attend guest lectures, which are presentations given by external lecturers from industry or academia. these lectures cover best practices and other computer science - related topics, providing students with insights from experienced professionals in the field. the start time of guest lectures can be verified in the actual course schedule. taking this course is mandatory for students enrolled in the ast and csse programs. it is a crucial part of the curriculum that ensures you gain the necessary practical and theoretical skills for your future career in software engineering and related fields. which fundamental skills are necessary for students to thrive in the capstone project program?",
        "predicted_answer": "programming skills in an imperative language at the cs bachelor level, as well as knowledge of algorithms and data structures at the same level.",
        "true_answer": "students must have a strong foundation in programming skills in an imperative language at the cs bachelor level, as well as knowledge of algorithms and data structures at the same level."
    },
    {
        "question": "an important aspect of a software product is the need to talk to stakeholders. to do this effectively, you have to prepare a pitch and a demo. a pitch should take 2 - 5 minutes, be simple, straight to the point, fun ( if possible ), and insightful. it should let people understand why they should give you money. a pitch should be structured as follows : problem ( job - to - be - done ), your solution ( why is your solution creating a paradigm shift ), market and competitor analysis, team, business case, unique insights that you have, and ask. the problem section answers the \" why \" question. start with a question like, \" did you ever ask yourself? \" and explain the problem from the customer's perspective. your solution answers \" what \" and \" how. \". present your solution quickly and efficiently, explain the benefits, how it solves the problem, and how it changes everything ( paradigm shift ). for market and competitor analysis, make a 2 - dimensional graph ( find the right axes where your solution fits ) and show the market size if possible. in the team section, present your team with 2 + founders ( include pictures ). the business case should show a \" hockey stick \" growth projection but not promise anything before 3 years. explain your unique insight ( this is why you are the startup that will make it ). in the ask section, indicate what you need, be it money, feedback, or advertisement. the demo should be compelling, answer the problem statement nicely, be short, and work. how should we analyze the market and competitors?",
        "predicted_answer": "make a 2 - dimensional graph ( find the right axes where your solution fits ) and show the market size if possible.",
        "true_answer": "for market and competitor analysis, make a 2 - dimensional graph ( find the right axes where your solution fits ) and show the market size if possible."
    },
    {
        "question": "the capstone project provides a complete experience of software development from ideation to product. the formal course structure is a mix of formal presentations and guest presentations. the course structure includes requirements elicitations with stakeholders, fast design and prototyping, architecture, practicalities of cybersecurity development following agile processes, and development using state - of - the - art development tools ( git repositories, integration servers, static analyzers ). if you want to learn more about the capstone project course, check the article in the 2nd international workshop on frontiers in software engineering education ( fisee 23 ), edited in lecture notes in computer science by springer ( https : / / link. springer. com / chapter / 10. 1007 / 978 - 3 - 031 - 48639 - 5 _ 3 ). the instructor of the capstone project is prof dr manuel oriol. manuel is a professor of computer science at constructor institute. he has 10 years of experience in academia, and 10 years in industry, co - authored 60 + articles on software engineering and software architecture, and graduated 4 doctoral students, and 25 + msc students. the teaching assistants are muhammad khalid and julia kotovich. mohammed is a phd researcher and lecturer at constructor university. julia kotovich is a phd researcher at constructor institute. to succeed in the program, students must have a strong foundation in programming skills in an imperative language at the cs bachelor level, as well as knowledge of algorithms and data structures at the same level. these foundational skills enable students to tackle the complexities of the capstone project and other advanced coursework. the course plan includes design & ideation, architecture, and initial development, portal ready and deployed, and advanced concepts and refinements based on customer feedback. the course includes an opportunity for students to attend guest lectures, which are presentations given by external lecturers from industry or academia. these lectures cover best practices and other computer science - related topics, providing students with insights from experienced professionals in the field. the start time of guest lectures can be verified in the actual course schedule. taking this course is mandatory for students enrolled in the ast and csse programs. it is a crucial part of the curriculum that ensures you gain the necessary practical and theoretical skills for your future career in software engineering and related fields. what is the plan for the capstone course?",
        "predicted_answer": "design & ideation, architecture, and initial development, portal ready and deployed, and advanced concepts and refinements based on customer feedback.",
        "true_answer": "course plan includes design & ideation, architecture, and initial development, portal ready and deployed, and advanced concepts and refinements based on customer feedback."
    },
    {
        "question": "an important aspect of a software product is the need to talk to stakeholders. to do this effectively, you have to prepare a pitch and a demo. a pitch should take 2 - 5 minutes, be simple, straight to the point, fun ( if possible ), and insightful. it should let people understand why they should give you money. a pitch should be structured as follows : problem ( job - to - be - done ), your solution ( why is your solution creating a paradigm shift ), market and competitor analysis, team, business case, unique insights that you have, and ask. the problem section answers the \" why \" question. start with a question like, \" did you ever ask yourself? \" and explain the problem from the customer's perspective. your solution answers \" what \" and \" how. \". present your solution quickly and efficiently, explain the benefits, how it solves the problem, and how it changes everything ( paradigm shift ). for market and competitor analysis, make a 2 - dimensional graph ( find the right axes where your solution fits ) and show the market size if possible. in the team section, present your team with 2 + founders ( include pictures ). the business case should show a \" hockey stick \" growth projection but not promise anything before 3 years. explain your unique insight ( this is why you are the startup that will make it ). in the ask section, indicate what you need, be it money, feedback, or advertisement. the demo should be compelling, answer the problem statement nicely, be short, and work. what should be shown in the business case?",
        "predicted_answer": "the business case should show a \" hockey stick \" growth projection but not promise anything before 3 years.",
        "true_answer": "show a \" hockey stick \" growth projection but not promise anything before 3 years."
    },
    {
        "question": "the capstone project spans three semesters. each semester offers 5 ects credits and each ects credit corresponds to 25 to 30 working hours. during the first semester of the capstone project, students focus on creating and proposing mocks, performing requirements elicitation, prototyping, approaching customers and users, specifying user stories, and organizing themselves using collaborative tools. in the second semester, students work on describing and defending a software architecture, coding in groups and as a large team, integrating independent works, using a source code versioning system, and specifying user stories. in the third semester, students engage in practical cybersecurity, hold discussions with stakeholders, practice machine learning, work with continuous improvement tools, and organize themselves through collaborative tools. students work on a single project throughout the course, allowing them to dive deeply into their chosen topic and apply their knowledge in a practical setting. groups or tribes for the capstone project are created in several ways. students may organize themselves into groups or tribes, or they may be assigned randomly if needed. each group typically consists of four to five students. a tribe consists of several groups. students seeking placement in specific groups should contact the teaching assistants ( tas ). the organizational points or grading of the capstone project is structured as follows ; 1 / 3 of the grade being a cohort ( tribe ) grade, and 2 / 3 of the grade being a group assignment. note that in rare cases group members are regarded independently. what is the grading criteria of capstone?",
        "predicted_answer": "1 / 3 of the grade being a cohort ( tribe ) grade, and 2 / 3 of the grade being a group assignment.",
        "true_answer": "grading of the capstone project is structured as follows ; 1 / 3 of the grade being a cohort ( tribe ) grade, and 2 / 3 of the grade being a group assignment."
    },
    {
        "question": "the first assignment for the capstone project consists of two parts. part 1 is individual, where each student must come up with an idea for a web application that is innovative, useful, and simple to explain. part 2 involves presenting the ideas to the group, discussing advantages and disadvantages, and collectively choosing one idea to develop further. the group will then create a clickable demo using a design tool and prepare slides for a 5 - minute presentation. the assignment deliverables include a presentation in pdf or ppt format with a recorded demo and a report. for the first assignment, the organization of the assignment is as follows ; individual work at the beginning, announcement of groups at the teaching assistant ( ta ) session, presentation given by groups in the session stated in the course lecture, and the delivery of a report. the presentation deliverable should contain an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide ). the report deliverable should include a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future ). which elements should be featured in the report for the first assignment of the capstone project course?",
        "predicted_answer": "explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future ).",
        "true_answer": "a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future )."
    },
    {
        "question": "the first assignment for the capstone project consists of two parts. part 1 is individual, where each student must come up with an idea for a web application that is innovative, useful, and simple to explain. part 2 involves presenting the ideas to the group, discussing advantages and disadvantages, and collectively choosing one idea to develop further. the group will then create a clickable demo using a design tool and prepare slides for a 5 - minute presentation. the assignment deliverables include a presentation in pdf or ppt format with a recorded demo and a report. for the first assignment, the organization of the assignment is as follows ; individual work at the beginning, announcement of groups at the teaching assistant ( ta ) session, presentation given by groups in the session stated in the course lecture, and the delivery of a report. the presentation deliverable should contain an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide ). the report deliverable should include a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future ). what content should be part of the report deliverable for assignment one of the capstone project course?",
        "predicted_answer": "the report deliverable should include a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future ).",
        "true_answer": "a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future )."
    },
    {
        "question": "an important aspect of a software product is the need to talk to stakeholders. to do this effectively, you have to prepare a pitch and a demo. a pitch should take 2 - 5 minutes, be simple, straight to the point, fun ( if possible ), and insightful. it should let people understand why they should give you money. a pitch should be structured as follows : problem ( job - to - be - done ), your solution ( why is your solution creating a paradigm shift ), market and competitor analysis, team, business case, unique insights that you have, and ask. the problem section answers the \" why \" question. start with a question like, \" did you ever ask yourself? \" and explain the problem from the customer's perspective. your solution answers \" what \" and \" how. \". present your solution quickly and efficiently, explain the benefits, how it solves the problem, and how it changes everything ( paradigm shift ). for market and competitor analysis, make a 2 - dimensional graph ( find the right axes where your solution fits ) and show the market size if possible. in the team section, present your team with 2 + founders ( include pictures ). the business case should show a \" hockey stick \" growth projection but not promise anything before 3 years. explain your unique insight ( this is why you are the startup that will make it ). in the ask section, indicate what you need, be it money, feedback, or advertisement. the demo should be compelling, answer the problem statement nicely, be short, and work. why is preparing a pitch important for a stakeholder presentation session?",
        "predicted_answer": "",
        "true_answer": "let people understand why they should give you money."
    },
    {
        "question": "the first assignment for the capstone project consists of two parts. part 1 is individual, where each student must come up with an idea for a web application that is innovative, useful, and simple to explain. part 2 involves presenting the ideas to the group, discussing advantages and disadvantages, and collectively choosing one idea to develop further. the group will then create a clickable demo using a design tool and prepare slides for a 5 - minute presentation. the assignment deliverables include a presentation in pdf or ppt format with a recorded demo and a report. for the first assignment, the organization of the assignment is as follows ; individual work at the beginning, announcement of groups at the teaching assistant ( ta ) session, presentation given by groups in the session stated in the course lecture, and the delivery of a report. the presentation deliverable should contain an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide ). the report deliverable should include a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future ). what information should be contained within the presentation deliverable of assignment 1?",
        "predicted_answer": "an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide ).",
        "true_answer": "the presentation deliverable should contain an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide )."
    },
    {
        "question": "the first assignment for the capstone project consists of two parts. part 1 is individual, where each student must come up with an idea for a web application that is innovative, useful, and simple to explain. part 2 involves presenting the ideas to the group, discussing advantages and disadvantages, and collectively choosing one idea to develop further. the group will then create a clickable demo using a design tool and prepare slides for a 5 - minute presentation. the assignment deliverables include a presentation in pdf or ppt format with a recorded demo and a report. for the first assignment, the organization of the assignment is as follows ; individual work at the beginning, announcement of groups at the teaching assistant ( ta ) session, presentation given by groups in the session stated in the course lecture, and the delivery of a report. the presentation deliverable should contain an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide ). the report deliverable should include a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future ). which aspects should be covered in the presentation submission of assignment one?",
        "predicted_answer": "an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide ).",
        "true_answer": "the presentation deliverable should contain an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide )."
    },
    {
        "question": "the first assignment for the capstone project consists of two parts. part 1 is individual, where each student must come up with an idea for a web application that is innovative, useful, and simple to explain. part 2 involves presenting the ideas to the group, discussing advantages and disadvantages, and collectively choosing one idea to develop further. the group will then create a clickable demo using a design tool and prepare slides for a 5 - minute presentation. the assignment deliverables include a presentation in pdf or ppt format with a recorded demo and a report. for the first assignment, the organization of the assignment is as follows ; individual work at the beginning, announcement of groups at the teaching assistant ( ta ) session, presentation given by groups in the session stated in the course lecture, and the delivery of a report. the presentation deliverable should contain an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide ). the report deliverable should include a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future ). which items need to be incorporated into the report for the first assignment of the capstone project course?",
        "predicted_answer": "explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future ).",
        "true_answer": "the report deliverable should include a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future )."
    },
    {
        "question": "the first assignment for the capstone project consists of two parts. part 1 is individual, where each student must come up with an idea for a web application that is innovative, useful, and simple to explain. part 2 involves presenting the ideas to the group, discussing advantages and disadvantages, and collectively choosing one idea to develop further. the group will then create a clickable demo using a design tool and prepare slides for a 5 - minute presentation. the assignment deliverables include a presentation in pdf or ppt format with a recorded demo and a report. for the first assignment, the organization of the assignment is as follows ; individual work at the beginning, announcement of groups at the teaching assistant ( ta ) session, presentation given by groups in the session stated in the course lecture, and the delivery of a report. the presentation deliverable should contain an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide ). the report deliverable should include a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future ). what components are expected in the presentation submission of the initial assignment?",
        "predicted_answer": "an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide ).",
        "true_answer": "the presentation deliverable should contain an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide )."
    },
    {
        "question": "the capstone project provides a complete experience of software development from ideation to product. the formal course structure is a mix of formal presentations and guest presentations. the course structure includes requirements elicitations with stakeholders, fast design and prototyping, architecture, practicalities of cybersecurity development following agile processes, and development using state - of - the - art development tools ( git repositories, integration servers, static analyzers ). if you want to learn more about the capstone project course, check the article in the 2nd international workshop on frontiers in software engineering education ( fisee 23 ), edited in lecture notes in computer science by springer ( https : / / link. springer. com / chapter / 10. 1007 / 978 - 3 - 031 - 48639 - 5 _ 3 ). the instructor of the capstone project is prof dr manuel oriol. manuel is a professor of computer science at constructor institute. he has 10 years of experience in academia, and 10 years in industry, co - authored 60 + articles on software engineering and software architecture, and graduated 4 doctoral students, and 25 + msc students. the teaching assistants are muhammad khalid and julia kotovich. mohammed is a phd researcher and lecturer at constructor university. julia kotovich is a phd researcher at constructor institute. to succeed in the program, students must have a strong foundation in programming skills in an imperative language at the cs bachelor level, as well as knowledge of algorithms and data structures at the same level. these foundational skills enable students to tackle the complexities of the capstone project and other advanced coursework. the course plan includes design & ideation, architecture, and initial development, portal ready and deployed, and advanced concepts and refinements based on customer feedback. the course includes an opportunity for students to attend guest lectures, which are presentations given by external lecturers from industry or academia. these lectures cover best practices and other computer science - related topics, providing students with insights from experienced professionals in the field. the start time of guest lectures can be verified in the actual course schedule. taking this course is mandatory for students enrolled in the ast and csse programs. it is a crucial part of the curriculum that ensures you gain the necessary practical and theoretical skills for your future career in software engineering and related fields. what are the fundamental skill required to succeed in the program?",
        "predicted_answer": "programming skills in an imperative language at the cs bachelor level, as well as knowledge of algorithms and data structures at the same level.",
        "true_answer": "students must have a strong foundation in programming skills in an imperative language at the cs bachelor level, as well as knowledge of algorithms and data structures at the same level."
    },
    {
        "question": "the first assignment for the capstone project consists of two parts. part 1 is individual, where each student must come up with an idea for a web application that is innovative, useful, and simple to explain. part 2 involves presenting the ideas to the group, discussing advantages and disadvantages, and collectively choosing one idea to develop further. the group will then create a clickable demo using a design tool and prepare slides for a 5 - minute presentation. the assignment deliverables include a presentation in pdf or ppt format with a recorded demo and a report. for the first assignment, the organization of the assignment is as follows ; individual work at the beginning, announcement of groups at the teaching assistant ( ta ) session, presentation given by groups in the session stated in the course lecture, and the delivery of a report. the presentation deliverable should contain an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide ). the report deliverable should include a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future ). what should the presentation deliverable of assignment 1 encompass?",
        "predicted_answer": "an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide ).",
        "true_answer": "the presentation deliverable should contain an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide )."
    },
    {
        "question": "an important aspect of a software product is the need to talk to stakeholders. to do this effectively, you have to prepare a pitch and a demo. a pitch should take 2 - 5 minutes, be simple, straight to the point, fun ( if possible ), and insightful. it should let people understand why they should give you money. a pitch should be structured as follows : problem ( job - to - be - done ), your solution ( why is your solution creating a paradigm shift ), market and competitor analysis, team, business case, unique insights that you have, and ask. the problem section answers the \" why \" question. start with a question like, \" did you ever ask yourself? \" and explain the problem from the customer's perspective. your solution answers \" what \" and \" how. \". present your solution quickly and efficiently, explain the benefits, how it solves the problem, and how it changes everything ( paradigm shift ). for market and competitor analysis, make a 2 - dimensional graph ( find the right axes where your solution fits ) and show the market size if possible. in the team section, present your team with 2 + founders ( include pictures ). the business case should show a \" hockey stick \" growth projection but not promise anything before 3 years. explain your unique insight ( this is why you are the startup that will make it ). in the ask section, indicate what you need, be it money, feedback, or advertisement. the demo should be compelling, answer the problem statement nicely, be short, and work. what should be included in the ask section?",
        "predicted_answer": "indicate what you need, be it money, feedback, or advertisement.",
        "true_answer": "in the ask section, indicate what you need, be it money, feedback, or advertisement."
    },
    {
        "question": "the capstone project spans three semesters. each semester offers 5 ects credits and each ects credit corresponds to 25 to 30 working hours. during the first semester of the capstone project, students focus on creating and proposing mocks, performing requirements elicitation, prototyping, approaching customers and users, specifying user stories, and organizing themselves using collaborative tools. in the second semester, students work on describing and defending a software architecture, coding in groups and as a large team, integrating independent works, using a source code versioning system, and specifying user stories. in the third semester, students engage in practical cybersecurity, hold discussions with stakeholders, practice machine learning, work with continuous improvement tools, and organize themselves through collaborative tools. students work on a single project throughout the course, allowing them to dive deeply into their chosen topic and apply their knowledge in a practical setting. groups or tribes for the capstone project are created in several ways. students may organize themselves into groups or tribes, or they may be assigned randomly if needed. each group typically consists of four to five students. a tribe consists of several groups. students seeking placement in specific groups should contact the teaching assistants ( tas ). the organizational points or grading of the capstone project is structured as follows ; 1 / 3 of the grade being a cohort ( tribe ) grade, and 2 / 3 of the grade being a group assignment. note that in rare cases group members are regarded independently. who should students contact if they want to be placed in a specific group?",
        "predicted_answer": "students seeking placement in specific groups should contact the teaching assistants ( tas ).",
        "true_answer": "contact the teaching assistants ( tas )."
    },
    {
        "question": "an important aspect of a software product is the need to talk to stakeholders. to do this effectively, you have to prepare a pitch and a demo. a pitch should take 2 - 5 minutes, be simple, straight to the point, fun ( if possible ), and insightful. it should let people understand why they should give you money. a pitch should be structured as follows : problem ( job - to - be - done ), your solution ( why is your solution creating a paradigm shift ), market and competitor analysis, team, business case, unique insights that you have, and ask. the problem section answers the \" why \" question. start with a question like, \" did you ever ask yourself? \" and explain the problem from the customer's perspective. your solution answers \" what \" and \" how. \". present your solution quickly and efficiently, explain the benefits, how it solves the problem, and how it changes everything ( paradigm shift ). for market and competitor analysis, make a 2 - dimensional graph ( find the right axes where your solution fits ) and show the market size if possible. in the team section, present your team with 2 + founders ( include pictures ). the business case should show a \" hockey stick \" growth projection but not promise anything before 3 years. explain your unique insight ( this is why you are the startup that will make it ). in the ask section, indicate what you need, be it money, feedback, or advertisement. the demo should be compelling, answer the problem statement nicely, be short, and work. what should be shown in the team section of a pitch?",
        "predicted_answer": "in the team section, present your team with 2 + founders ( include pictures ).",
        "true_answer": "your team with 2 + founders ( include pictures )."
    },
    {
        "question": "an important aspect of a software product is the need to talk to stakeholders. to do this effectively, you have to prepare a pitch and a demo. a pitch should take 2 - 5 minutes, be simple, straight to the point, fun ( if possible ), and insightful. it should let people understand why they should give you money. a pitch should be structured as follows : problem ( job - to - be - done ), your solution ( why is your solution creating a paradigm shift ), market and competitor analysis, team, business case, unique insights that you have, and ask. the problem section answers the \" why \" question. start with a question like, \" did you ever ask yourself? \" and explain the problem from the customer's perspective. your solution answers \" what \" and \" how. \". present your solution quickly and efficiently, explain the benefits, how it solves the problem, and how it changes everything ( paradigm shift ). for market and competitor analysis, make a 2 - dimensional graph ( find the right axes where your solution fits ) and show the market size if possible. in the team section, present your team with 2 + founders ( include pictures ). the business case should show a \" hockey stick \" growth projection but not promise anything before 3 years. explain your unique insight ( this is why you are the startup that will make it ). in the ask section, indicate what you need, be it money, feedback, or advertisement. the demo should be compelling, answer the problem statement nicely, be short, and work. what type of graph should be made for market and competitor analysis?",
        "predicted_answer": "make a 2 - dimensional graph ( find the right axes where your solution fits ) and show the market size if possible.",
        "true_answer": "make a 2 - dimensional graph"
    },
    {
        "question": "the capstone project provides a complete experience of software development from ideation to product. the formal course structure is a mix of formal presentations and guest presentations. the course structure includes requirements elicitations with stakeholders, fast design and prototyping, architecture, practicalities of cybersecurity development following agile processes, and development using state - of - the - art development tools ( git repositories, integration servers, static analyzers ). if you want to learn more about the capstone project course, check the article in the 2nd international workshop on frontiers in software engineering education ( fisee 23 ), edited in lecture notes in computer science by springer ( https : / / link. springer. com / chapter / 10. 1007 / 978 - 3 - 031 - 48639 - 5 _ 3 ). the instructor of the capstone project is prof dr manuel oriol. manuel is a professor of computer science at constructor institute. he has 10 years of experience in academia, and 10 years in industry, co - authored 60 + articles on software engineering and software architecture, and graduated 4 doctoral students, and 25 + msc students. the teaching assistants are muhammad khalid and julia kotovich. mohammed is a phd researcher and lecturer at constructor university. julia kotovich is a phd researcher at constructor institute. to succeed in the program, students must have a strong foundation in programming skills in an imperative language at the cs bachelor level, as well as knowledge of algorithms and data structures at the same level. these foundational skills enable students to tackle the complexities of the capstone project and other advanced coursework. the course plan includes design & ideation, architecture, and initial development, portal ready and deployed, and advanced concepts and refinements based on customer feedback. the course includes an opportunity for students to attend guest lectures, which are presentations given by external lecturers from industry or academia. these lectures cover best practices and other computer science - related topics, providing students with insights from experienced professionals in the field. the start time of guest lectures can be verified in the actual course schedule. taking this course is mandatory for students enrolled in the ast and csse programs. it is a crucial part of the curriculum that ensures you gain the necessary practical and theoretical skills for your future career in software engineering and related fields. which instructor is in charge of the capstone project?",
        "predicted_answer": "manuel oriol.",
        "true_answer": "prof dr manuel oriol."
    },
    {
        "question": "there are several tools for the processes in software development. these tools are meant to support the development not to control it. during the development process in capstone, if tools do not work and this is expressed in a retrospective, it can be changed. the four main categories of tools that development teams need are design tools, source code versioning systems, software development platforms, and continuous integration servers. design tools help to present what a solution should look like and simulate its main interaction ( it is needed to show a project to stakeholders to make it concrete ). many people use powerpoint to show what they want to have. it is even possible to make clickable demos that way. many tools exist, an example is invision. this tool can be used to easily create a first draft. the main concepts are artboards ( screens / landing visualizations ), and interactions. interactions define an event and a landing artboard. a software development platform is a web tool that allows one to store and browse source code through a repository and organize the backlog and the testing process. there are now many platforms online that provide these kinds of functionalities for free or for subscriptions. popular examples include github ( bought by microsoft and is free for open source ), gitlab and gitorious ( free clones of github to use and install on - premises ), devops by microsoft, and jira by atlassian. a continuous integration server is a server that runs pipelines pulls from a repository, compiles the code, runs tests automatically, and notifies you if there is a problem. few recognized and professional tools exist. examples are jenkins ( open source and free ), gitlabci ( open source and free ), and azure pipelines ( by microsoft ). in the capstone project course, we will use the processes and tools that we presented. much of the training for tools should be done online by following tutorials. all these are the basics that everyone needs to understand to do a decent job. ta session will help and answer questions whenever possible. what are the four main categories of tools that development teams need?",
        "predicted_answer": "source code versioning systems, software development platforms, and continuous integration servers.",
        "true_answer": "the four main categories of tools that development teams need are design tools, source code versioning systems, software development platforms, and continuous integration servers."
    },
    {
        "question": "the first assignment for the capstone project consists of two parts. part 1 is individual, where each student must come up with an idea for a web application that is innovative, useful, and simple to explain. part 2 involves presenting the ideas to the group, discussing advantages and disadvantages, and collectively choosing one idea to develop further. the group will then create a clickable demo using a design tool and prepare slides for a 5 - minute presentation. the assignment deliverables include a presentation in pdf or ppt format with a recorded demo and a report. for the first assignment, the organization of the assignment is as follows ; individual work at the beginning, announcement of groups at the teaching assistant ( ta ) session, presentation given by groups in the session stated in the course lecture, and the delivery of a report. the presentation deliverable should contain an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide ). the report deliverable should include a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future ). what content is necessary for inclusion in the report deliverable for the first assignment of the capstone project course?",
        "predicted_answer": "the report deliverable should include a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future ).",
        "true_answer": "explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future )."
    },
    {
        "question": "the capstone project provides a complete experience of software development from ideation to product. the formal course structure is a mix of formal presentations and guest presentations. the course structure includes requirements elicitations with stakeholders, fast design and prototyping, architecture, practicalities of cybersecurity development following agile processes, and development using state - of - the - art development tools ( git repositories, integration servers, static analyzers ). if you want to learn more about the capstone project course, check the article in the 2nd international workshop on frontiers in software engineering education ( fisee 23 ), edited in lecture notes in computer science by springer ( https : / / link. springer. com / chapter / 10. 1007 / 978 - 3 - 031 - 48639 - 5 _ 3 ). the instructor of the capstone project is prof dr manuel oriol. manuel is a professor of computer science at constructor institute. he has 10 years of experience in academia, and 10 years in industry, co - authored 60 + articles on software engineering and software architecture, and graduated 4 doctoral students, and 25 + msc students. the teaching assistants are muhammad khalid and julia kotovich. mohammed is a phd researcher and lecturer at constructor university. julia kotovich is a phd researcher at constructor institute. to succeed in the program, students must have a strong foundation in programming skills in an imperative language at the cs bachelor level, as well as knowledge of algorithms and data structures at the same level. these foundational skills enable students to tackle the complexities of the capstone project and other advanced coursework. the course plan includes design & ideation, architecture, and initial development, portal ready and deployed, and advanced concepts and refinements based on customer feedback. the course includes an opportunity for students to attend guest lectures, which are presentations given by external lecturers from industry or academia. these lectures cover best practices and other computer science - related topics, providing students with insights from experienced professionals in the field. the start time of guest lectures can be verified in the actual course schedule. taking this course is mandatory for students enrolled in the ast and csse programs. it is a crucial part of the curriculum that ensures you gain the necessary practical and theoretical skills for your future career in software engineering and related fields. instructor of capstone project?",
        "predicted_answer": "prof dr manuel oriol.",
        "true_answer": "manuel oriol."
    },
    {
        "question": "the capstone project provides a complete experience of software development from ideation to product. the formal course structure is a mix of formal presentations and guest presentations. the course structure includes requirements elicitations with stakeholders, fast design and prototyping, architecture, practicalities of cybersecurity development following agile processes, and development using state - of - the - art development tools ( git repositories, integration servers, static analyzers ). if you want to learn more about the capstone project course, check the article in the 2nd international workshop on frontiers in software engineering education ( fisee 23 ), edited in lecture notes in computer science by springer ( https : / / link. springer. com / chapter / 10. 1007 / 978 - 3 - 031 - 48639 - 5 _ 3 ). the instructor of the capstone project is prof dr manuel oriol. manuel is a professor of computer science at constructor institute. he has 10 years of experience in academia, and 10 years in industry, co - authored 60 + articles on software engineering and software architecture, and graduated 4 doctoral students, and 25 + msc students. the teaching assistants are muhammad khalid and julia kotovich. mohammed is a phd researcher and lecturer at constructor university. julia kotovich is a phd researcher at constructor institute. to succeed in the program, students must have a strong foundation in programming skills in an imperative language at the cs bachelor level, as well as knowledge of algorithms and data structures at the same level. these foundational skills enable students to tackle the complexities of the capstone project and other advanced coursework. the course plan includes design & ideation, architecture, and initial development, portal ready and deployed, and advanced concepts and refinements based on customer feedback. the course includes an opportunity for students to attend guest lectures, which are presentations given by external lecturers from industry or academia. these lectures cover best practices and other computer science - related topics, providing students with insights from experienced professionals in the field. the start time of guest lectures can be verified in the actual course schedule. taking this course is mandatory for students enrolled in the ast and csse programs. it is a crucial part of the curriculum that ensures you gain the necessary practical and theoretical skills for your future career in software engineering and related fields. can you explain the concept of the capstone project?",
        "predicted_answer": "a complete experience of software development from ideation to product.",
        "true_answer": "provides a complete experience of software development from ideation to product."
    },
    {
        "question": "the capstone project provides a complete experience of software development from ideation to product. the formal course structure is a mix of formal presentations and guest presentations. the course structure includes requirements elicitations with stakeholders, fast design and prototyping, architecture, practicalities of cybersecurity development following agile processes, and development using state - of - the - art development tools ( git repositories, integration servers, static analyzers ). if you want to learn more about the capstone project course, check the article in the 2nd international workshop on frontiers in software engineering education ( fisee 23 ), edited in lecture notes in computer science by springer ( https : / / link. springer. com / chapter / 10. 1007 / 978 - 3 - 031 - 48639 - 5 _ 3 ). the instructor of the capstone project is prof dr manuel oriol. manuel is a professor of computer science at constructor institute. he has 10 years of experience in academia, and 10 years in industry, co - authored 60 + articles on software engineering and software architecture, and graduated 4 doctoral students, and 25 + msc students. the teaching assistants are muhammad khalid and julia kotovich. mohammed is a phd researcher and lecturer at constructor university. julia kotovich is a phd researcher at constructor institute. to succeed in the program, students must have a strong foundation in programming skills in an imperative language at the cs bachelor level, as well as knowledge of algorithms and data structures at the same level. these foundational skills enable students to tackle the complexities of the capstone project and other advanced coursework. the course plan includes design & ideation, architecture, and initial development, portal ready and deployed, and advanced concepts and refinements based on customer feedback. the course includes an opportunity for students to attend guest lectures, which are presentations given by external lecturers from industry or academia. these lectures cover best practices and other computer science - related topics, providing students with insights from experienced professionals in the field. the start time of guest lectures can be verified in the actual course schedule. taking this course is mandatory for students enrolled in the ast and csse programs. it is a crucial part of the curriculum that ensures you gain the necessary practical and theoretical skills for your future career in software engineering and related fields. what foundational skills must students have to succeed in the program?",
        "predicted_answer": "programming skills in an imperative language at the cs bachelor level, as well as knowledge of algorithms and data structures at the same level.",
        "true_answer": "students must have a strong foundation in programming skills in an imperative language at the cs bachelor level, as well as knowledge of algorithms and data structures at the same level."
    },
    {
        "question": "the capstone project provides a complete experience of software development from ideation to product. the formal course structure is a mix of formal presentations and guest presentations. the course structure includes requirements elicitations with stakeholders, fast design and prototyping, architecture, practicalities of cybersecurity development following agile processes, and development using state - of - the - art development tools ( git repositories, integration servers, static analyzers ). if you want to learn more about the capstone project course, check the article in the 2nd international workshop on frontiers in software engineering education ( fisee 23 ), edited in lecture notes in computer science by springer ( https : / / link. springer. com / chapter / 10. 1007 / 978 - 3 - 031 - 48639 - 5 _ 3 ). the instructor of the capstone project is prof dr manuel oriol. manuel is a professor of computer science at constructor institute. he has 10 years of experience in academia, and 10 years in industry, co - authored 60 + articles on software engineering and software architecture, and graduated 4 doctoral students, and 25 + msc students. the teaching assistants are muhammad khalid and julia kotovich. mohammed is a phd researcher and lecturer at constructor university. julia kotovich is a phd researcher at constructor institute. to succeed in the program, students must have a strong foundation in programming skills in an imperative language at the cs bachelor level, as well as knowledge of algorithms and data structures at the same level. these foundational skills enable students to tackle the complexities of the capstone project and other advanced coursework. the course plan includes design & ideation, architecture, and initial development, portal ready and deployed, and advanced concepts and refinements based on customer feedback. the course includes an opportunity for students to attend guest lectures, which are presentations given by external lecturers from industry or academia. these lectures cover best practices and other computer science - related topics, providing students with insights from experienced professionals in the field. the start time of guest lectures can be verified in the actual course schedule. taking this course is mandatory for students enrolled in the ast and csse programs. it is a crucial part of the curriculum that ensures you gain the necessary practical and theoretical skills for your future career in software engineering and related fields. provide further information about manuel oriol",
        "predicted_answer": "manuel is a professor of computer science at constructor institute. he has 10 years of experience in academia, and 10 years in industry, co - authored 60 + articles on software engineering and software architecture, and graduated 4 doctoral students, and 25 + msc students.",
        "true_answer": "manuel is a professor of computer science at constructor institute."
    },
    {
        "question": "software architecture is a high - level view of a piece of software indicating its main subparts, an explanation of the diverse pieces of software that collaborate, or simply a boxes and arrow diagram ( or several ). the book pattern - oriented software architecture : a system of patterns ( https : / / www. amazon. com / pattern - oriented - software - architecture - system - patterns / dp / 0471958697 ) is a suggested resource for learning about software architecture patterns. in essence, there are types of architecture that make sense from a requirements standpoint ( functional and non - functional ). examples of software architecture are mvc ( model - view - controller ), etl ( data extraction - transformation - loading ), layered, pub - sub ( publish subscribe ), and microservices. for quick reference on software architecture, visit the following wikipedia page ( https : / / en. wikipedia. org / wiki / architectural _ pattern ). information about mvc can be found at ( https : / / en. wikipedia. org / wiki / model - view - controller ). information about etl can be found at ( https : / / en. wikipedia. org / wiki / extract, _ transform, _ load ). information on layered architecture can be found at ( https : / / www. oreilly. com / library / view / software - architecture - patterns / 9781491971437 / ch01. html ). information on pub - sub can be found at ( https : / / cloud. google. com / pubsub / architecture ). information on microservices can be found at ( https : / / www. oreilly. com / library / view / software - architecture - patterns / 9781491971437 / ch04. html ). many other books on software architecture exist here are a few recommendations ( https : / / www. oreilly. com / library / view / fundamentals - of - software / 9781492043447 /, https : / / www. oreilly. com / library / view / building - microservices - 2nd / 9781492034018 /, https : / / www. amazon. com / just - enough - software - architecture - risk - driven / dp / 0984618104 ). can you define software architecture?",
        "predicted_answer": "high - level view of a piece of software indicating its main subparts,",
        "true_answer": "high - level view of a piece of software indicating its main subparts, an explanation of the diverse pieces of software that collaborate, or simply a boxes and arrow diagram ( or several )."
    },
    {
        "question": "the first assignment for the capstone project consists of two parts. part 1 is individual, where each student must come up with an idea for a web application that is innovative, useful, and simple to explain. part 2 involves presenting the ideas to the group, discussing advantages and disadvantages, and collectively choosing one idea to develop further. the group will then create a clickable demo using a design tool and prepare slides for a 5 - minute presentation. the assignment deliverables include a presentation in pdf or ppt format with a recorded demo and a report. for the first assignment, the organization of the assignment is as follows ; individual work at the beginning, announcement of groups at the teaching assistant ( ta ) session, presentation given by groups in the session stated in the course lecture, and the delivery of a report. the presentation deliverable should contain an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide ). the report deliverable should include a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future ). which aspects should be covered in the assignment one presentation submission of the capstone project course?",
        "predicted_answer": "an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide ).",
        "true_answer": "the presentation deliverable should contain an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide )."
    },
    {
        "question": "the capstone project provides a complete experience of software development from ideation to product. the formal course structure is a mix of formal presentations and guest presentations. the course structure includes requirements elicitations with stakeholders, fast design and prototyping, architecture, practicalities of cybersecurity development following agile processes, and development using state - of - the - art development tools ( git repositories, integration servers, static analyzers ). if you want to learn more about the capstone project course, check the article in the 2nd international workshop on frontiers in software engineering education ( fisee 23 ), edited in lecture notes in computer science by springer ( https : / / link. springer. com / chapter / 10. 1007 / 978 - 3 - 031 - 48639 - 5 _ 3 ). the instructor of the capstone project is prof dr manuel oriol. manuel is a professor of computer science at constructor institute. he has 10 years of experience in academia, and 10 years in industry, co - authored 60 + articles on software engineering and software architecture, and graduated 4 doctoral students, and 25 + msc students. the teaching assistants are muhammad khalid and julia kotovich. mohammed is a phd researcher and lecturer at constructor university. julia kotovich is a phd researcher at constructor institute. to succeed in the program, students must have a strong foundation in programming skills in an imperative language at the cs bachelor level, as well as knowledge of algorithms and data structures at the same level. these foundational skills enable students to tackle the complexities of the capstone project and other advanced coursework. the course plan includes design & ideation, architecture, and initial development, portal ready and deployed, and advanced concepts and refinements based on customer feedback. the course includes an opportunity for students to attend guest lectures, which are presentations given by external lecturers from industry or academia. these lectures cover best practices and other computer science - related topics, providing students with insights from experienced professionals in the field. the start time of guest lectures can be verified in the actual course schedule. taking this course is mandatory for students enrolled in the ast and csse programs. it is a crucial part of the curriculum that ensures you gain the necessary practical and theoretical skills for your future career in software engineering and related fields. who is the instructor of the capstone project course?",
        "predicted_answer": "prof dr manuel oriol.",
        "true_answer": "manuel oriol."
    },
    {
        "question": "scrum is a framework used primarily in agile software development, but it's also utilized in various other fields. in scrum, the work is organized in sprints with a duration of 1 week to 1 month. during a sprint, requirements do not change. at the beginning of the sprint, there is a sprint planning event, in which work items are scheduled for the sprint. during the sprint, daily 15 - minute scrum meetings take place for the team to organize and talk about potential issues. people indicate what they did the day before, and what they will do today. if there are impediments to the sprint goals. at the end of the sprint, there is a sprint review which presents the results of the sprint to stakeholders and uses demos. the group discusses their plans for the future. after that, there is a sprint retrospective where the team talks about their impediments, issues, and positive aspects and tries to improve the process for the next sprint and forward. roles in scrum are scrum master, product owner, and development team. a scrum master is the person who takes care of the process, coaches people on scrum, ensures that there is harmony in the team, and makes sure that everyone is going in the right direction. a product owner defines what is in the product backlog, makes sure that everyone understands the backlog and the direction it takes for the requirements, and defines the requirements for the project and the sprint. the development team is made up of developers. work in scrum is organized following a backlog. a backlog is a list of work items that are organized with priorities. work items should be achievable in a sprint. work items list the requirements of the change that needs to be done, they also often include a definition of done. often such requirements are expressed as a user story following this structure : \" as a... i want to... so that... \". there is the product backlog for the whole product and the sprint backlog for a given sprint. if user stories are too large, they can be an epic which then contains several user stories. in the capstone project, a sprint is 2 weeks long, each review is typically graded, and each time student feedback is gathered using menti. what are the designated roles in the scrum methodology?",
        "predicted_answer": "scrum master, product owner, and development team.",
        "true_answer": "roles in scrum are scrum master, product owner, and development team."
    },
    {
        "question": "the capstone project spans three semesters. each semester offers 5 ects credits and each ects credit corresponds to 25 to 30 working hours. during the first semester of the capstone project, students focus on creating and proposing mocks, performing requirements elicitation, prototyping, approaching customers and users, specifying user stories, and organizing themselves using collaborative tools. in the second semester, students work on describing and defending a software architecture, coding in groups and as a large team, integrating independent works, using a source code versioning system, and specifying user stories. in the third semester, students engage in practical cybersecurity, hold discussions with stakeholders, practice machine learning, work with continuous improvement tools, and organize themselves through collaborative tools. students work on a single project throughout the course, allowing them to dive deeply into their chosen topic and apply their knowledge in a practical setting. groups or tribes for the capstone project are created in several ways. students may organize themselves into groups or tribes, or they may be assigned randomly if needed. each group typically consists of four to five students. a tribe consists of several groups. students seeking placement in specific groups should contact the teaching assistants ( tas ). the organizational points or grading of the capstone project is structured as follows ; 1 / 3 of the grade being a cohort ( tribe ) grade, and 2 / 3 of the grade being a group assignment. note that in rare cases group members are regarded independently. how many ects credits are provided in each semester?",
        "predicted_answer": "5 ects credits",
        "true_answer": "5 ects"
    },
    {
        "question": "the first assignment for the capstone project consists of two parts. part 1 is individual, where each student must come up with an idea for a web application that is innovative, useful, and simple to explain. part 2 involves presenting the ideas to the group, discussing advantages and disadvantages, and collectively choosing one idea to develop further. the group will then create a clickable demo using a design tool and prepare slides for a 5 - minute presentation. the assignment deliverables include a presentation in pdf or ppt format with a recorded demo and a report. for the first assignment, the organization of the assignment is as follows ; individual work at the beginning, announcement of groups at the teaching assistant ( ta ) session, presentation given by groups in the session stated in the course lecture, and the delivery of a report. the presentation deliverable should contain an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide ). the report deliverable should include a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future ). what is the deliverable for the first assignment of the capstone project?",
        "predicted_answer": "the assignment deliverables include a presentation in pdf or ppt format with a recorded demo and a report.",
        "true_answer": "deliverables include a presentation in pdf or ppt format with a recorded demo and a report."
    },
    {
        "question": "the capstone project spans three semesters. each semester offers 5 ects credits and each ects credit corresponds to 25 to 30 working hours. during the first semester of the capstone project, students focus on creating and proposing mocks, performing requirements elicitation, prototyping, approaching customers and users, specifying user stories, and organizing themselves using collaborative tools. in the second semester, students work on describing and defending a software architecture, coding in groups and as a large team, integrating independent works, using a source code versioning system, and specifying user stories. in the third semester, students engage in practical cybersecurity, hold discussions with stakeholders, practice machine learning, work with continuous improvement tools, and organize themselves through collaborative tools. students work on a single project throughout the course, allowing them to dive deeply into their chosen topic and apply their knowledge in a practical setting. groups or tribes for the capstone project are created in several ways. students may organize themselves into groups or tribes, or they may be assigned randomly if needed. each group typically consists of four to five students. a tribe consists of several groups. students seeking placement in specific groups should contact the teaching assistants ( tas ). the organizational points or grading of the capstone project is structured as follows ; 1 / 3 of the grade being a cohort ( tribe ) grade, and 2 / 3 of the grade being a group assignment. note that in rare cases group members are regarded independently. what is the grading criteria of the capstone project?",
        "predicted_answer": "1 / 3 of the grade being a cohort ( tribe ) grade, and 2 / 3 of the grade being a group assignment.",
        "true_answer": "grading of the capstone project is structured as follows ; 1 / 3 of the grade being a cohort ( tribe ) grade, and 2 / 3 of the grade being a group assignment."
    },
    {
        "question": "the first assignment for the capstone project consists of two parts. part 1 is individual, where each student must come up with an idea for a web application that is innovative, useful, and simple to explain. part 2 involves presenting the ideas to the group, discussing advantages and disadvantages, and collectively choosing one idea to develop further. the group will then create a clickable demo using a design tool and prepare slides for a 5 - minute presentation. the assignment deliverables include a presentation in pdf or ppt format with a recorded demo and a report. for the first assignment, the organization of the assignment is as follows ; individual work at the beginning, announcement of groups at the teaching assistant ( ta ) session, presentation given by groups in the session stated in the course lecture, and the delivery of a report. the presentation deliverable should contain an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide ). the report deliverable should include a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future ). what content is required for the report deliverable in assignment one of the capstone project course?",
        "predicted_answer": "the report deliverable should include a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future ).",
        "true_answer": "a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future )."
    },
    {
        "question": "the first assignment for the capstone project consists of two parts. part 1 is individual, where each student must come up with an idea for a web application that is innovative, useful, and simple to explain. part 2 involves presenting the ideas to the group, discussing advantages and disadvantages, and collectively choosing one idea to develop further. the group will then create a clickable demo using a design tool and prepare slides for a 5 - minute presentation. the assignment deliverables include a presentation in pdf or ppt format with a recorded demo and a report. for the first assignment, the organization of the assignment is as follows ; individual work at the beginning, announcement of groups at the teaching assistant ( ta ) session, presentation given by groups in the session stated in the course lecture, and the delivery of a report. the presentation deliverable should contain an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide ). the report deliverable should include a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future ). what information should be contained within the report deliverable for the first assignment of the capstone project course?",
        "predicted_answer": "the report deliverable should include a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future ).",
        "true_answer": "a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future )."
    },
    {
        "question": "the capstone project spans three semesters. each semester offers 5 ects credits and each ects credit corresponds to 25 to 30 working hours. during the first semester of the capstone project, students focus on creating and proposing mocks, performing requirements elicitation, prototyping, approaching customers and users, specifying user stories, and organizing themselves using collaborative tools. in the second semester, students work on describing and defending a software architecture, coding in groups and as a large team, integrating independent works, using a source code versioning system, and specifying user stories. in the third semester, students engage in practical cybersecurity, hold discussions with stakeholders, practice machine learning, work with continuous improvement tools, and organize themselves through collaborative tools. students work on a single project throughout the course, allowing them to dive deeply into their chosen topic and apply their knowledge in a practical setting. groups or tribes for the capstone project are created in several ways. students may organize themselves into groups or tribes, or they may be assigned randomly if needed. each group typically consists of four to five students. a tribe consists of several groups. students seeking placement in specific groups should contact the teaching assistants ( tas ). the organizational points or grading of the capstone project is structured as follows ; 1 / 3 of the grade being a cohort ( tribe ) grade, and 2 / 3 of the grade being a group assignment. note that in rare cases group members are regarded independently. how many ects credits are provided in each semester?",
        "predicted_answer": "5 ects credits",
        "true_answer": "5"
    },
    {
        "question": "the first assignment for the capstone project consists of two parts. part 1 is individual, where each student must come up with an idea for a web application that is innovative, useful, and simple to explain. part 2 involves presenting the ideas to the group, discussing advantages and disadvantages, and collectively choosing one idea to develop further. the group will then create a clickable demo using a design tool and prepare slides for a 5 - minute presentation. the assignment deliverables include a presentation in pdf or ppt format with a recorded demo and a report. for the first assignment, the organization of the assignment is as follows ; individual work at the beginning, announcement of groups at the teaching assistant ( ta ) session, presentation given by groups in the session stated in the course lecture, and the delivery of a report. the presentation deliverable should contain an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide ). the report deliverable should include a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future ). what should be contained in the report deliverable for assignment one of the capstone project course?",
        "predicted_answer": "the report deliverable should include a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future ).",
        "true_answer": "explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future )."
    },
    {
        "question": "software architecture is a high - level view of a piece of software indicating its main subparts, an explanation of the diverse pieces of software that collaborate, or simply a boxes and arrow diagram ( or several ). the book pattern - oriented software architecture : a system of patterns ( https : / / www. amazon. com / pattern - oriented - software - architecture - system - patterns / dp / 0471958697 ) is a suggested resource for learning about software architecture patterns. in essence, there are types of architecture that make sense from a requirements standpoint ( functional and non - functional ). examples of software architecture are mvc ( model - view - controller ), etl ( data extraction - transformation - loading ), layered, pub - sub ( publish subscribe ), and microservices. for quick reference on software architecture, visit the following wikipedia page ( https : / / en. wikipedia. org / wiki / architectural _ pattern ). information about mvc can be found at ( https : / / en. wikipedia. org / wiki / model - view - controller ). information about etl can be found at ( https : / / en. wikipedia. org / wiki / extract, _ transform, _ load ). information on layered architecture can be found at ( https : / / www. oreilly. com / library / view / software - architecture - patterns / 9781491971437 / ch01. html ). information on pub - sub can be found at ( https : / / cloud. google. com / pubsub / architecture ). information on microservices can be found at ( https : / / www. oreilly. com / library / view / software - architecture - patterns / 9781491971437 / ch04. html ). many other books on software architecture exist here are a few recommendations ( https : / / www. oreilly. com / library / view / fundamentals - of - software / 9781492043447 /, https : / / www. oreilly. com / library / view / building - microservices - 2nd / 9781492034018 /, https : / / www. amazon. com / just - enough - software - architecture - risk - driven / dp / 0984618104 ). can you define software architecture?",
        "predicted_answer": "high - level view of a piece of software indicating its main subparts,",
        "true_answer": "high - level view of a piece of software indicating its main subparts, an explanation of the diverse pieces of software that collaborate, or simply a boxes and arrow diagram ( or several )."
    },
    {
        "question": "the first assignment for the capstone project consists of two parts. part 1 is individual, where each student must come up with an idea for a web application that is innovative, useful, and simple to explain. part 2 involves presenting the ideas to the group, discussing advantages and disadvantages, and collectively choosing one idea to develop further. the group will then create a clickable demo using a design tool and prepare slides for a 5 - minute presentation. the assignment deliverables include a presentation in pdf or ppt format with a recorded demo and a report. for the first assignment, the organization of the assignment is as follows ; individual work at the beginning, announcement of groups at the teaching assistant ( ta ) session, presentation given by groups in the session stated in the course lecture, and the delivery of a report. the presentation deliverable should contain an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide ). the report deliverable should include a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future ). what components should the presentation submission of assignment one contain?",
        "predicted_answer": "an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide ).",
        "true_answer": "the presentation deliverable should contain an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide )."
    },
    {
        "question": "the first assignment for the capstone project consists of two parts. part 1 is individual, where each student must come up with an idea for a web application that is innovative, useful, and simple to explain. part 2 involves presenting the ideas to the group, discussing advantages and disadvantages, and collectively choosing one idea to develop further. the group will then create a clickable demo using a design tool and prepare slides for a 5 - minute presentation. the assignment deliverables include a presentation in pdf or ppt format with a recorded demo and a report. for the first assignment, the organization of the assignment is as follows ; individual work at the beginning, announcement of groups at the teaching assistant ( ta ) session, presentation given by groups in the session stated in the course lecture, and the delivery of a report. the presentation deliverable should contain an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide ). the report deliverable should include a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future ). what should the report deliverable consist of for assignment one in the capstone project course?",
        "predicted_answer": "explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future ).",
        "true_answer": "a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future )."
    },
    {
        "question": "software architecture is a high - level view of a piece of software indicating its main subparts, an explanation of the diverse pieces of software that collaborate, or simply a boxes and arrow diagram ( or several ). the book pattern - oriented software architecture : a system of patterns ( https : / / www. amazon. com / pattern - oriented - software - architecture - system - patterns / dp / 0471958697 ) is a suggested resource for learning about software architecture patterns. in essence, there are types of architecture that make sense from a requirements standpoint ( functional and non - functional ). examples of software architecture are mvc ( model - view - controller ), etl ( data extraction - transformation - loading ), layered, pub - sub ( publish subscribe ), and microservices. for quick reference on software architecture, visit the following wikipedia page ( https : / / en. wikipedia. org / wiki / architectural _ pattern ). information about mvc can be found at ( https : / / en. wikipedia. org / wiki / model - view - controller ). information about etl can be found at ( https : / / en. wikipedia. org / wiki / extract, _ transform, _ load ). information on layered architecture can be found at ( https : / / www. oreilly. com / library / view / software - architecture - patterns / 9781491971437 / ch01. html ). information on pub - sub can be found at ( https : / / cloud. google. com / pubsub / architecture ). information on microservices can be found at ( https : / / www. oreilly. com / library / view / software - architecture - patterns / 9781491971437 / ch04. html ). many other books on software architecture exist here are a few recommendations ( https : / / www. oreilly. com / library / view / fundamentals - of - software / 9781492043447 /, https : / / www. oreilly. com / library / view / building - microservices - 2nd / 9781492034018 /, https : / / www. amazon. com / just - enough - software - architecture - risk - driven / dp / 0984618104 ). what is the concept of software architecture?",
        "predicted_answer": "high - level view of a piece of software indicating its main subparts,",
        "true_answer": "high - level view of a piece of software indicating its main subparts, an explanation of the diverse pieces of software that collaborate, or simply a boxes and arrow diagram ( or several )."
    },
    {
        "question": "teams can be challenging environments for personal and collective growth. common reasons include feeling that everything is wrong, struggling to understand others or to be understood, perceiving teammates as too different, fearing that collaboration is impossible, disagreeing on common goals, and believing that the problem isn't your fault ( especially if you've integrated well into teams before ). to better navigate and improve team dynamics, consider exploring the following resources on team development and building : tuckman's model of team development, which is detailed in these readings : ( https : / / www. challengeapplications. com / stages - of - team - development ) and ( https : / / agilescrumguide. com / blog / files / tag - 5 - stages - of - team - development. html ). these resources provide valuable insights into the stages of team development and practical guidance on fostering a cohesive team. some tips for team collaboration in the capstone project are as follows ; when interacting with others in a team recognize the phase of team development you are in, use strategies to get to the next level, wait for things to settle, because they will if everyone stays positive ( some teams don't get away from some of these steps because they do not feel they can succeed and also, do not think it will not happen in a new team because you already know the others ), let go some of the things when it is not important for you. what are the tips to prevent issues in team collaboration?",
        "predicted_answer": "recognize the phase of team development you are in, use strategies to get to the next level, wait for things to settle, because they will if everyone stays positive ( some teams don't get away from some of these steps because they do not feel they can succeed and also, do not think it will not happen in a new team because you already know the others ), let go some of the things when it is not important for you.",
        "true_answer": "when interacting with others in a team recognize the phase of team development you are in, use strategies to get to the next level, wait for things to settle, because they will if everyone stays positive ( some teams don't get away from some of these steps because they do not feel they can succeed and also, do not think it will not happen in a new team because you already know the others ), let go some of the things when it is not important for you."
    },
    {
        "question": "the first assignment for the capstone project consists of two parts. part 1 is individual, where each student must come up with an idea for a web application that is innovative, useful, and simple to explain. part 2 involves presenting the ideas to the group, discussing advantages and disadvantages, and collectively choosing one idea to develop further. the group will then create a clickable demo using a design tool and prepare slides for a 5 - minute presentation. the assignment deliverables include a presentation in pdf or ppt format with a recorded demo and a report. for the first assignment, the organization of the assignment is as follows ; individual work at the beginning, announcement of groups at the teaching assistant ( ta ) session, presentation given by groups in the session stated in the course lecture, and the delivery of a report. the presentation deliverable should contain an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide ). the report deliverable should include a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future ). what content is necessary for inclusion in the report deliverable for the first assignment of the capstone project course?",
        "predicted_answer": "the report deliverable should include a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future ).",
        "true_answer": "a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future )."
    },
    {
        "question": "the first assignment for the capstone project consists of two parts. part 1 is individual, where each student must come up with an idea for a web application that is innovative, useful, and simple to explain. part 2 involves presenting the ideas to the group, discussing advantages and disadvantages, and collectively choosing one idea to develop further. the group will then create a clickable demo using a design tool and prepare slides for a 5 - minute presentation. the assignment deliverables include a presentation in pdf or ppt format with a recorded demo and a report. for the first assignment, the organization of the assignment is as follows ; individual work at the beginning, announcement of groups at the teaching assistant ( ta ) session, presentation given by groups in the session stated in the course lecture, and the delivery of a report. the presentation deliverable should contain an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide ). the report deliverable should include a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future ). what content is necessary for inclusion in the presentation deliverable of assignment one?",
        "predicted_answer": "an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide ).",
        "true_answer": "the presentation deliverable should contain an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide )."
    },
    {
        "question": "an important aspect of a software product is the need to talk to stakeholders. to do this effectively, you have to prepare a pitch and a demo. a pitch should take 2 - 5 minutes, be simple, straight to the point, fun ( if possible ), and insightful. it should let people understand why they should give you money. a pitch should be structured as follows : problem ( job - to - be - done ), your solution ( why is your solution creating a paradigm shift ), market and competitor analysis, team, business case, unique insights that you have, and ask. the problem section answers the \" why \" question. start with a question like, \" did you ever ask yourself? \" and explain the problem from the customer's perspective. your solution answers \" what \" and \" how. \". present your solution quickly and efficiently, explain the benefits, how it solves the problem, and how it changes everything ( paradigm shift ). for market and competitor analysis, make a 2 - dimensional graph ( find the right axes where your solution fits ) and show the market size if possible. in the team section, present your team with 2 + founders ( include pictures ). the business case should show a \" hockey stick \" growth projection but not promise anything before 3 years. explain your unique insight ( this is why you are the startup that will make it ). in the ask section, indicate what you need, be it money, feedback, or advertisement. the demo should be compelling, answer the problem statement nicely, be short, and work. how should you present your solution in a pitch?",
        "predicted_answer": "present your solution quickly and efficiently, explain the benefits, how it solves the problem, and how it changes everything ( paradigm shift ).",
        "true_answer": "quickly and efficiently,"
    },
    {
        "question": "the capstone project provides a complete experience of software development from ideation to product. the formal course structure is a mix of formal presentations and guest presentations. the course structure includes requirements elicitations with stakeholders, fast design and prototyping, architecture, practicalities of cybersecurity development following agile processes, and development using state - of - the - art development tools ( git repositories, integration servers, static analyzers ). if you want to learn more about the capstone project course, check the article in the 2nd international workshop on frontiers in software engineering education ( fisee 23 ), edited in lecture notes in computer science by springer ( https : / / link. springer. com / chapter / 10. 1007 / 978 - 3 - 031 - 48639 - 5 _ 3 ). the instructor of the capstone project is prof dr manuel oriol. manuel is a professor of computer science at constructor institute. he has 10 years of experience in academia, and 10 years in industry, co - authored 60 + articles on software engineering and software architecture, and graduated 4 doctoral students, and 25 + msc students. the teaching assistants are muhammad khalid and julia kotovich. mohammed is a phd researcher and lecturer at constructor university. julia kotovich is a phd researcher at constructor institute. to succeed in the program, students must have a strong foundation in programming skills in an imperative language at the cs bachelor level, as well as knowledge of algorithms and data structures at the same level. these foundational skills enable students to tackle the complexities of the capstone project and other advanced coursework. the course plan includes design & ideation, architecture, and initial development, portal ready and deployed, and advanced concepts and refinements based on customer feedback. the course includes an opportunity for students to attend guest lectures, which are presentations given by external lecturers from industry or academia. these lectures cover best practices and other computer science - related topics, providing students with insights from experienced professionals in the field. the start time of guest lectures can be verified in the actual course schedule. taking this course is mandatory for students enrolled in the ast and csse programs. it is a crucial part of the curriculum that ensures you gain the necessary practical and theoretical skills for your future career in software engineering and related fields. who conducts the guest lectures for the capstone project course?",
        "predicted_answer": "external lecturers from industry or academia. these lectures cover best practices and other computer science - related topics, providing students with insights from experienced professionals in the field.",
        "true_answer": "external lecturers from industry or academia."
    },
    {
        "question": "the capstone project provides a complete experience of software development from ideation to product. the formal course structure is a mix of formal presentations and guest presentations. the course structure includes requirements elicitations with stakeholders, fast design and prototyping, architecture, practicalities of cybersecurity development following agile processes, and development using state - of - the - art development tools ( git repositories, integration servers, static analyzers ). if you want to learn more about the capstone project course, check the article in the 2nd international workshop on frontiers in software engineering education ( fisee 23 ), edited in lecture notes in computer science by springer ( https : / / link. springer. com / chapter / 10. 1007 / 978 - 3 - 031 - 48639 - 5 _ 3 ). the instructor of the capstone project is prof dr manuel oriol. manuel is a professor of computer science at constructor institute. he has 10 years of experience in academia, and 10 years in industry, co - authored 60 + articles on software engineering and software architecture, and graduated 4 doctoral students, and 25 + msc students. the teaching assistants are muhammad khalid and julia kotovich. mohammed is a phd researcher and lecturer at constructor university. julia kotovich is a phd researcher at constructor institute. to succeed in the program, students must have a strong foundation in programming skills in an imperative language at the cs bachelor level, as well as knowledge of algorithms and data structures at the same level. these foundational skills enable students to tackle the complexities of the capstone project and other advanced coursework. the course plan includes design & ideation, architecture, and initial development, portal ready and deployed, and advanced concepts and refinements based on customer feedback. the course includes an opportunity for students to attend guest lectures, which are presentations given by external lecturers from industry or academia. these lectures cover best practices and other computer science - related topics, providing students with insights from experienced professionals in the field. the start time of guest lectures can be verified in the actual course schedule. taking this course is mandatory for students enrolled in the ast and csse programs. it is a crucial part of the curriculum that ensures you gain the necessary practical and theoretical skills for your future career in software engineering and related fields. how can students verify the start time of guest lectures?",
        "predicted_answer": "the start time of guest lectures can be verified in the actual course schedule.",
        "true_answer": "can be verified in the actual course schedule."
    },
    {
        "question": "the capstone project provides a complete experience of software development from ideation to product. the formal course structure is a mix of formal presentations and guest presentations. the course structure includes requirements elicitations with stakeholders, fast design and prototyping, architecture, practicalities of cybersecurity development following agile processes, and development using state - of - the - art development tools ( git repositories, integration servers, static analyzers ). if you want to learn more about the capstone project course, check the article in the 2nd international workshop on frontiers in software engineering education ( fisee 23 ), edited in lecture notes in computer science by springer ( https : / / link. springer. com / chapter / 10. 1007 / 978 - 3 - 031 - 48639 - 5 _ 3 ). the instructor of the capstone project is prof dr manuel oriol. manuel is a professor of computer science at constructor institute. he has 10 years of experience in academia, and 10 years in industry, co - authored 60 + articles on software engineering and software architecture, and graduated 4 doctoral students, and 25 + msc students. the teaching assistants are muhammad khalid and julia kotovich. mohammed is a phd researcher and lecturer at constructor university. julia kotovich is a phd researcher at constructor institute. to succeed in the program, students must have a strong foundation in programming skills in an imperative language at the cs bachelor level, as well as knowledge of algorithms and data structures at the same level. these foundational skills enable students to tackle the complexities of the capstone project and other advanced coursework. the course plan includes design & ideation, architecture, and initial development, portal ready and deployed, and advanced concepts and refinements based on customer feedback. the course includes an opportunity for students to attend guest lectures, which are presentations given by external lecturers from industry or academia. these lectures cover best practices and other computer science - related topics, providing students with insights from experienced professionals in the field. the start time of guest lectures can be verified in the actual course schedule. taking this course is mandatory for students enrolled in the ast and csse programs. it is a crucial part of the curriculum that ensures you gain the necessary practical and theoretical skills for your future career in software engineering and related fields. who is julia kotovich?",
        "predicted_answer": "phd researcher at constructor institute.",
        "true_answer": "a phd researcher at constructor institute."
    },
    {
        "question": "the first assignment for the capstone project consists of two parts. part 1 is individual, where each student must come up with an idea for a web application that is innovative, useful, and simple to explain. part 2 involves presenting the ideas to the group, discussing advantages and disadvantages, and collectively choosing one idea to develop further. the group will then create a clickable demo using a design tool and prepare slides for a 5 - minute presentation. the assignment deliverables include a presentation in pdf or ppt format with a recorded demo and a report. for the first assignment, the organization of the assignment is as follows ; individual work at the beginning, announcement of groups at the teaching assistant ( ta ) session, presentation given by groups in the session stated in the course lecture, and the delivery of a report. the presentation deliverable should contain an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide ). the report deliverable should include a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future ). the first assignment for the capstone project course is what?",
        "predicted_answer": "part 1 is individual, where each student must come up with an idea for a web application that is innovative, useful, and simple to explain. part 2 involves presenting the ideas to the group, discussing advantages and disadvantages, and collectively choosing one idea to develop further.",
        "true_answer": "the first assignment for the capstone project consists of two parts. part 1 is individual, where each student must come up with an idea for a web application that is innovative, useful, and simple to explain. part 2 involves presenting the ideas to the group, discussing advantages and disadvantages, and collectively choosing one idea to develop further."
    },
    {
        "question": "teams can be challenging environments for personal and collective growth. common reasons include feeling that everything is wrong, struggling to understand others or to be understood, perceiving teammates as too different, fearing that collaboration is impossible, disagreeing on common goals, and believing that the problem isn't your fault ( especially if you've integrated well into teams before ). to better navigate and improve team dynamics, consider exploring the following resources on team development and building : tuckman's model of team development, which is detailed in these readings : ( https : / / www. challengeapplications. com / stages - of - team - development ) and ( https : / / agilescrumguide. com / blog / files / tag - 5 - stages - of - team - development. html ). these resources provide valuable insights into the stages of team development and practical guidance on fostering a cohesive team. some tips for team collaboration in the capstone project are as follows ; when interacting with others in a team recognize the phase of team development you are in, use strategies to get to the next level, wait for things to settle, because they will if everyone stays positive ( some teams don't get away from some of these steps because they do not feel they can succeed and also, do not think it will not happen in a new team because you already know the others ), let go some of the things when it is not important for you. what strategies can be employed to avoid collaboration issues in teams?",
        "predicted_answer": "when interacting with others in a team recognize the phase of team development you are in, use strategies to get to the next level, wait for things to settle, because they will if everyone stays positive ( some teams don't get away from some of these steps because they do not feel they can succeed and also, do not think it will not happen in a new team because you already know the others ), let go some of the things when it is not important for you.",
        "true_answer": "recognize the phase of team development you are in, use strategies to get to the next level, wait for things to settle, because they will if everyone stays positive ( some teams don't get away from some of these steps because they do not feel they can succeed and also, do not think it will not happen in a new team because you already know the others ), let go some of the things when it is not important for you."
    },
    {
        "question": "nowadays, most developers use an agile approach because it is supposed to give better results and is appealing to programmers. many development processes correspond to the agile approach, which is explained in the agile manifesto ( https : / / agilemanifesto. org ). this have become so prevalent that even large companies that relied heavily on the waterfall model now have agile versions of their processes. why do most developers use an agile approach nowadays?",
        "predicted_answer": "because it is supposed to give better results and is appealing to programmers.",
        "true_answer": "most developers use an agile approach because it is supposed to give better results and is appealing to programmers."
    },
    {
        "question": "the first assignment for the capstone project consists of two parts. part 1 is individual, where each student must come up with an idea for a web application that is innovative, useful, and simple to explain. part 2 involves presenting the ideas to the group, discussing advantages and disadvantages, and collectively choosing one idea to develop further. the group will then create a clickable demo using a design tool and prepare slides for a 5 - minute presentation. the assignment deliverables include a presentation in pdf or ppt format with a recorded demo and a report. for the first assignment, the organization of the assignment is as follows ; individual work at the beginning, announcement of groups at the teaching assistant ( ta ) session, presentation given by groups in the session stated in the course lecture, and the delivery of a report. the presentation deliverable should contain an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide ). the report deliverable should include a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future ). which details need to be included in the presentation deliverable of assignment 1?",
        "predicted_answer": "an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide ).",
        "true_answer": "the presentation deliverable should contain an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide )."
    },
    {
        "question": "scrum is a framework used primarily in agile software development, but it's also utilized in various other fields. in scrum, the work is organized in sprints with a duration of 1 week to 1 month. during a sprint, requirements do not change. at the beginning of the sprint, there is a sprint planning event, in which work items are scheduled for the sprint. during the sprint, daily 15 - minute scrum meetings take place for the team to organize and talk about potential issues. people indicate what they did the day before, and what they will do today. if there are impediments to the sprint goals. at the end of the sprint, there is a sprint review which presents the results of the sprint to stakeholders and uses demos. the group discusses their plans for the future. after that, there is a sprint retrospective where the team talks about their impediments, issues, and positive aspects and tries to improve the process for the next sprint and forward. roles in scrum are scrum master, product owner, and development team. a scrum master is the person who takes care of the process, coaches people on scrum, ensures that there is harmony in the team, and makes sure that everyone is going in the right direction. a product owner defines what is in the product backlog, makes sure that everyone understands the backlog and the direction it takes for the requirements, and defines the requirements for the project and the sprint. the development team is made up of developers. work in scrum is organized following a backlog. a backlog is a list of work items that are organized with priorities. work items should be achievable in a sprint. work items list the requirements of the change that needs to be done, they also often include a definition of done. often such requirements are expressed as a user story following this structure : \" as a... i want to... so that... \". there is the product backlog for the whole product and the sprint backlog for a given sprint. if user stories are too large, they can be an epic which then contains several user stories. in the capstone project, a sprint is 2 weeks long, each review is typically graded, and each time student feedback is gathered using menti. what is the goal of daily scrum mettings?",
        "predicted_answer": "to organize and talk about potential issues.",
        "true_answer": "daily 15 - minute scrum meetings take place for the team to organize and talk about potential issues."
    },
    {
        "question": "software architecture is a high - level view of a piece of software indicating its main subparts, an explanation of the diverse pieces of software that collaborate, or simply a boxes and arrow diagram ( or several ). the book pattern - oriented software architecture : a system of patterns ( https : / / www. amazon. com / pattern - oriented - software - architecture - system - patterns / dp / 0471958697 ) is a suggested resource for learning about software architecture patterns. in essence, there are types of architecture that make sense from a requirements standpoint ( functional and non - functional ). examples of software architecture are mvc ( model - view - controller ), etl ( data extraction - transformation - loading ), layered, pub - sub ( publish subscribe ), and microservices. for quick reference on software architecture, visit the following wikipedia page ( https : / / en. wikipedia. org / wiki / architectural _ pattern ). information about mvc can be found at ( https : / / en. wikipedia. org / wiki / model - view - controller ). information about etl can be found at ( https : / / en. wikipedia. org / wiki / extract, _ transform, _ load ). information on layered architecture can be found at ( https : / / www. oreilly. com / library / view / software - architecture - patterns / 9781491971437 / ch01. html ). information on pub - sub can be found at ( https : / / cloud. google. com / pubsub / architecture ). information on microservices can be found at ( https : / / www. oreilly. com / library / view / software - architecture - patterns / 9781491971437 / ch04. html ). many other books on software architecture exist here are a few recommendations ( https : / / www. oreilly. com / library / view / fundamentals - of - software / 9781492043447 /, https : / / www. oreilly. com / library / view / building - microservices - 2nd / 9781492034018 /, https : / / www. amazon. com / just - enough - software - architecture - risk - driven / dp / 0984618104 ). what does software architecture mean?",
        "predicted_answer": "high - level view of a piece of software indicating its main subparts,",
        "true_answer": "high - level view of a piece of software indicating its main subparts, an explanation of the diverse pieces of software that collaborate, or simply a boxes and arrow diagram ( or several )."
    },
    {
        "question": "an important aspect of a software product is the need to talk to stakeholders. to do this effectively, you have to prepare a pitch and a demo. a pitch should take 2 - 5 minutes, be simple, straight to the point, fun ( if possible ), and insightful. it should let people understand why they should give you money. a pitch should be structured as follows : problem ( job - to - be - done ), your solution ( why is your solution creating a paradigm shift ), market and competitor analysis, team, business case, unique insights that you have, and ask. the problem section answers the \" why \" question. start with a question like, \" did you ever ask yourself? \" and explain the problem from the customer's perspective. your solution answers \" what \" and \" how. \". present your solution quickly and efficiently, explain the benefits, how it solves the problem, and how it changes everything ( paradigm shift ). for market and competitor analysis, make a 2 - dimensional graph ( find the right axes where your solution fits ) and show the market size if possible. in the team section, present your team with 2 + founders ( include pictures ). the business case should show a \" hockey stick \" growth projection but not promise anything before 3 years. explain your unique insight ( this is why you are the startup that will make it ). in the ask section, indicate what you need, be it money, feedback, or advertisement. the demo should be compelling, answer the problem statement nicely, be short, and work. how should you present your solution in a pitch?",
        "predicted_answer": "present your solution quickly and efficiently, explain the benefits, how it solves the problem, and how it changes everything ( paradigm shift ).",
        "true_answer": "present your solution quickly and efficiently,"
    },
    {
        "question": "the capstone project provides a complete experience of software development from ideation to product. the formal course structure is a mix of formal presentations and guest presentations. the course structure includes requirements elicitations with stakeholders, fast design and prototyping, architecture, practicalities of cybersecurity development following agile processes, and development using state - of - the - art development tools ( git repositories, integration servers, static analyzers ). if you want to learn more about the capstone project course, check the article in the 2nd international workshop on frontiers in software engineering education ( fisee 23 ), edited in lecture notes in computer science by springer ( https : / / link. springer. com / chapter / 10. 1007 / 978 - 3 - 031 - 48639 - 5 _ 3 ). the instructor of the capstone project is prof dr manuel oriol. manuel is a professor of computer science at constructor institute. he has 10 years of experience in academia, and 10 years in industry, co - authored 60 + articles on software engineering and software architecture, and graduated 4 doctoral students, and 25 + msc students. the teaching assistants are muhammad khalid and julia kotovich. mohammed is a phd researcher and lecturer at constructor university. julia kotovich is a phd researcher at constructor institute. to succeed in the program, students must have a strong foundation in programming skills in an imperative language at the cs bachelor level, as well as knowledge of algorithms and data structures at the same level. these foundational skills enable students to tackle the complexities of the capstone project and other advanced coursework. the course plan includes design & ideation, architecture, and initial development, portal ready and deployed, and advanced concepts and refinements based on customer feedback. the course includes an opportunity for students to attend guest lectures, which are presentations given by external lecturers from industry or academia. these lectures cover best practices and other computer science - related topics, providing students with insights from experienced professionals in the field. the start time of guest lectures can be verified in the actual course schedule. taking this course is mandatory for students enrolled in the ast and csse programs. it is a crucial part of the curriculum that ensures you gain the necessary practical and theoretical skills for your future career in software engineering and related fields. what is the purpose of capstone project?",
        "predicted_answer": "a complete experience of software development from ideation to product.",
        "true_answer": "provides a complete experience of software development from ideation to product."
    },
    {
        "question": "the first assignment for the capstone project consists of two parts. part 1 is individual, where each student must come up with an idea for a web application that is innovative, useful, and simple to explain. part 2 involves presenting the ideas to the group, discussing advantages and disadvantages, and collectively choosing one idea to develop further. the group will then create a clickable demo using a design tool and prepare slides for a 5 - minute presentation. the assignment deliverables include a presentation in pdf or ppt format with a recorded demo and a report. for the first assignment, the organization of the assignment is as follows ; individual work at the beginning, announcement of groups at the teaching assistant ( ta ) session, presentation given by groups in the session stated in the course lecture, and the delivery of a report. the presentation deliverable should contain an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide ). the report deliverable should include a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future ). what is the deliverable for the first assignment of the capstone project course?",
        "predicted_answer": "the assignment deliverables include a presentation in pdf or ppt format with a recorded demo and a report.",
        "true_answer": "deliverables include a presentation in pdf or ppt format with a recorded demo and a report."
    },
    {
        "question": "scrum is a framework used primarily in agile software development, but it's also utilized in various other fields. in scrum, the work is organized in sprints with a duration of 1 week to 1 month. during a sprint, requirements do not change. at the beginning of the sprint, there is a sprint planning event, in which work items are scheduled for the sprint. during the sprint, daily 15 - minute scrum meetings take place for the team to organize and talk about potential issues. people indicate what they did the day before, and what they will do today. if there are impediments to the sprint goals. at the end of the sprint, there is a sprint review which presents the results of the sprint to stakeholders and uses demos. the group discusses their plans for the future. after that, there is a sprint retrospective where the team talks about their impediments, issues, and positive aspects and tries to improve the process for the next sprint and forward. roles in scrum are scrum master, product owner, and development team. a scrum master is the person who takes care of the process, coaches people on scrum, ensures that there is harmony in the team, and makes sure that everyone is going in the right direction. a product owner defines what is in the product backlog, makes sure that everyone understands the backlog and the direction it takes for the requirements, and defines the requirements for the project and the sprint. the development team is made up of developers. work in scrum is organized following a backlog. a backlog is a list of work items that are organized with priorities. work items should be achievable in a sprint. work items list the requirements of the change that needs to be done, they also often include a definition of done. often such requirements are expressed as a user story following this structure : \" as a... i want to... so that... \". there is the product backlog for the whole product and the sprint backlog for a given sprint. if user stories are too large, they can be an epic which then contains several user stories. in the capstone project, a sprint is 2 weeks long, each review is typically graded, and each time student feedback is gathered using menti. what is scrum?",
        "predicted_answer": "scrum is a framework used primarily in agile software development,",
        "true_answer": "scrum is a framework used primarily in agile software development, but it's also utilized in various other fields."
    },
    {
        "question": "the capstone project provides a complete experience of software development from ideation to product. the formal course structure is a mix of formal presentations and guest presentations. the course structure includes requirements elicitations with stakeholders, fast design and prototyping, architecture, practicalities of cybersecurity development following agile processes, and development using state - of - the - art development tools ( git repositories, integration servers, static analyzers ). if you want to learn more about the capstone project course, check the article in the 2nd international workshop on frontiers in software engineering education ( fisee 23 ), edited in lecture notes in computer science by springer ( https : / / link. springer. com / chapter / 10. 1007 / 978 - 3 - 031 - 48639 - 5 _ 3 ). the instructor of the capstone project is prof dr manuel oriol. manuel is a professor of computer science at constructor institute. he has 10 years of experience in academia, and 10 years in industry, co - authored 60 + articles on software engineering and software architecture, and graduated 4 doctoral students, and 25 + msc students. the teaching assistants are muhammad khalid and julia kotovich. mohammed is a phd researcher and lecturer at constructor university. julia kotovich is a phd researcher at constructor institute. to succeed in the program, students must have a strong foundation in programming skills in an imperative language at the cs bachelor level, as well as knowledge of algorithms and data structures at the same level. these foundational skills enable students to tackle the complexities of the capstone project and other advanced coursework. the course plan includes design & ideation, architecture, and initial development, portal ready and deployed, and advanced concepts and refinements based on customer feedback. the course includes an opportunity for students to attend guest lectures, which are presentations given by external lecturers from industry or academia. these lectures cover best practices and other computer science - related topics, providing students with insights from experienced professionals in the field. the start time of guest lectures can be verified in the actual course schedule. taking this course is mandatory for students enrolled in the ast and csse programs. it is a crucial part of the curriculum that ensures you gain the necessary practical and theoretical skills for your future career in software engineering and related fields. who gives the guest lectures in the capstone project course?",
        "predicted_answer": "external lecturers from industry or academia. these lectures cover best practices and other computer science - related topics, providing students with insights from experienced professionals in the field.",
        "true_answer": "external lecturers from industry or academia."
    },
    {
        "question": "the first assignment for the capstone project consists of two parts. part 1 is individual, where each student must come up with an idea for a web application that is innovative, useful, and simple to explain. part 2 involves presenting the ideas to the group, discussing advantages and disadvantages, and collectively choosing one idea to develop further. the group will then create a clickable demo using a design tool and prepare slides for a 5 - minute presentation. the assignment deliverables include a presentation in pdf or ppt format with a recorded demo and a report. for the first assignment, the organization of the assignment is as follows ; individual work at the beginning, announcement of groups at the teaching assistant ( ta ) session, presentation given by groups in the session stated in the course lecture, and the delivery of a report. the presentation deliverable should contain an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide ). the report deliverable should include a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future ). what content should be part of the report deliverable for assignment one of the capstone project course?",
        "predicted_answer": "the report deliverable should include a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future ).",
        "true_answer": "explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future )."
    },
    {
        "question": "the capstone project provides a complete experience of software development from ideation to product. the formal course structure is a mix of formal presentations and guest presentations. the course structure includes requirements elicitations with stakeholders, fast design and prototyping, architecture, practicalities of cybersecurity development following agile processes, and development using state - of - the - art development tools ( git repositories, integration servers, static analyzers ). if you want to learn more about the capstone project course, check the article in the 2nd international workshop on frontiers in software engineering education ( fisee 23 ), edited in lecture notes in computer science by springer ( https : / / link. springer. com / chapter / 10. 1007 / 978 - 3 - 031 - 48639 - 5 _ 3 ). the instructor of the capstone project is prof dr manuel oriol. manuel is a professor of computer science at constructor institute. he has 10 years of experience in academia, and 10 years in industry, co - authored 60 + articles on software engineering and software architecture, and graduated 4 doctoral students, and 25 + msc students. the teaching assistants are muhammad khalid and julia kotovich. mohammed is a phd researcher and lecturer at constructor university. julia kotovich is a phd researcher at constructor institute. to succeed in the program, students must have a strong foundation in programming skills in an imperative language at the cs bachelor level, as well as knowledge of algorithms and data structures at the same level. these foundational skills enable students to tackle the complexities of the capstone project and other advanced coursework. the course plan includes design & ideation, architecture, and initial development, portal ready and deployed, and advanced concepts and refinements based on customer feedback. the course includes an opportunity for students to attend guest lectures, which are presentations given by external lecturers from industry or academia. these lectures cover best practices and other computer science - related topics, providing students with insights from experienced professionals in the field. the start time of guest lectures can be verified in the actual course schedule. taking this course is mandatory for students enrolled in the ast and csse programs. it is a crucial part of the curriculum that ensures you gain the necessary practical and theoretical skills for your future career in software engineering and related fields. what is the capstone project?",
        "predicted_answer": "a complete experience of software development from ideation to product.",
        "true_answer": "provides a complete experience of software development from ideation to product."
    },
    {
        "question": "software architecture is a high - level view of a piece of software indicating its main subparts, an explanation of the diverse pieces of software that collaborate, or simply a boxes and arrow diagram ( or several ). the book pattern - oriented software architecture : a system of patterns ( https : / / www. amazon. com / pattern - oriented - software - architecture - system - patterns / dp / 0471958697 ) is a suggested resource for learning about software architecture patterns. in essence, there are types of architecture that make sense from a requirements standpoint ( functional and non - functional ). examples of software architecture are mvc ( model - view - controller ), etl ( data extraction - transformation - loading ), layered, pub - sub ( publish subscribe ), and microservices. for quick reference on software architecture, visit the following wikipedia page ( https : / / en. wikipedia. org / wiki / architectural _ pattern ). information about mvc can be found at ( https : / / en. wikipedia. org / wiki / model - view - controller ). information about etl can be found at ( https : / / en. wikipedia. org / wiki / extract, _ transform, _ load ). information on layered architecture can be found at ( https : / / www. oreilly. com / library / view / software - architecture - patterns / 9781491971437 / ch01. html ). information on pub - sub can be found at ( https : / / cloud. google. com / pubsub / architecture ). information on microservices can be found at ( https : / / www. oreilly. com / library / view / software - architecture - patterns / 9781491971437 / ch04. html ). many other books on software architecture exist here are a few recommendations ( https : / / www. oreilly. com / library / view / fundamentals - of - software / 9781492043447 /, https : / / www. oreilly. com / library / view / building - microservices - 2nd / 9781492034018 /, https : / / www. amazon. com / just - enough - software - architecture - risk - driven / dp / 0984618104 ). what is the definition of software architecture?",
        "predicted_answer": "high - level view of a piece of software indicating its main subparts,",
        "true_answer": "a high - level view of a piece of software indicating its main subparts,"
    },
    {
        "question": "the capstone project spans three semesters. each semester offers 5 ects credits and each ects credit corresponds to 25 to 30 working hours. during the first semester of the capstone project, students focus on creating and proposing mocks, performing requirements elicitation, prototyping, approaching customers and users, specifying user stories, and organizing themselves using collaborative tools. in the second semester, students work on describing and defending a software architecture, coding in groups and as a large team, integrating independent works, using a source code versioning system, and specifying user stories. in the third semester, students engage in practical cybersecurity, hold discussions with stakeholders, practice machine learning, work with continuous improvement tools, and organize themselves through collaborative tools. students work on a single project throughout the course, allowing them to dive deeply into their chosen topic and apply their knowledge in a practical setting. groups or tribes for the capstone project are created in several ways. students may organize themselves into groups or tribes, or they may be assigned randomly if needed. each group typically consists of four to five students. a tribe consists of several groups. students seeking placement in specific groups should contact the teaching assistants ( tas ). the organizational points or grading of the capstone project is structured as follows ; 1 / 3 of the grade being a cohort ( tribe ) grade, and 2 / 3 of the grade being a group assignment. note that in rare cases group members are regarded independently. what proportion of the grade is determined by the group assignment in the capstone project grading?",
        "predicted_answer": "1 / 3 of the grade being a cohort ( tribe ) grade, and 2 / 3 of the grade being a group assignment.",
        "true_answer": "2 / 3"
    },
    {
        "question": "the capstone project spans three semesters. each semester offers 5 ects credits and each ects credit corresponds to 25 to 30 working hours. during the first semester of the capstone project, students focus on creating and proposing mocks, performing requirements elicitation, prototyping, approaching customers and users, specifying user stories, and organizing themselves using collaborative tools. in the second semester, students work on describing and defending a software architecture, coding in groups and as a large team, integrating independent works, using a source code versioning system, and specifying user stories. in the third semester, students engage in practical cybersecurity, hold discussions with stakeholders, practice machine learning, work with continuous improvement tools, and organize themselves through collaborative tools. students work on a single project throughout the course, allowing them to dive deeply into their chosen topic and apply their knowledge in a practical setting. groups or tribes for the capstone project are created in several ways. students may organize themselves into groups or tribes, or they may be assigned randomly if needed. each group typically consists of four to five students. a tribe consists of several groups. students seeking placement in specific groups should contact the teaching assistants ( tas ). the organizational points or grading of the capstone project is structured as follows ; 1 / 3 of the grade being a cohort ( tribe ) grade, and 2 / 3 of the grade being a group assignment. note that in rare cases group members are regarded independently. how many ects credits does each term offer?",
        "predicted_answer": "5 ects credits",
        "true_answer": "5 ects"
    },
    {
        "question": "software architecture is a high - level view of a piece of software indicating its main subparts, an explanation of the diverse pieces of software that collaborate, or simply a boxes and arrow diagram ( or several ). the book pattern - oriented software architecture : a system of patterns ( https : / / www. amazon. com / pattern - oriented - software - architecture - system - patterns / dp / 0471958697 ) is a suggested resource for learning about software architecture patterns. in essence, there are types of architecture that make sense from a requirements standpoint ( functional and non - functional ). examples of software architecture are mvc ( model - view - controller ), etl ( data extraction - transformation - loading ), layered, pub - sub ( publish subscribe ), and microservices. for quick reference on software architecture, visit the following wikipedia page ( https : / / en. wikipedia. org / wiki / architectural _ pattern ). information about mvc can be found at ( https : / / en. wikipedia. org / wiki / model - view - controller ). information about etl can be found at ( https : / / en. wikipedia. org / wiki / extract, _ transform, _ load ). information on layered architecture can be found at ( https : / / www. oreilly. com / library / view / software - architecture - patterns / 9781491971437 / ch01. html ). information on pub - sub can be found at ( https : / / cloud. google. com / pubsub / architecture ). information on microservices can be found at ( https : / / www. oreilly. com / library / view / software - architecture - patterns / 9781491971437 / ch04. html ). many other books on software architecture exist here are a few recommendations ( https : / / www. oreilly. com / library / view / fundamentals - of - software / 9781492043447 /, https : / / www. oreilly. com / library / view / building - microservices - 2nd / 9781492034018 /, https : / / www. amazon. com / just - enough - software - architecture - risk - driven / dp / 0984618104 ). define software architecture",
        "predicted_answer": "high - level view of a piece of software indicating its main subparts,",
        "true_answer": "high - level view of a piece of software indicating its main subparts, an explanation of the diverse pieces of software that collaborate, or simply a boxes and arrow diagram ( or several )."
    },
    {
        "question": "the first assignment for the capstone project consists of two parts. part 1 is individual, where each student must come up with an idea for a web application that is innovative, useful, and simple to explain. part 2 involves presenting the ideas to the group, discussing advantages and disadvantages, and collectively choosing one idea to develop further. the group will then create a clickable demo using a design tool and prepare slides for a 5 - minute presentation. the assignment deliverables include a presentation in pdf or ppt format with a recorded demo and a report. for the first assignment, the organization of the assignment is as follows ; individual work at the beginning, announcement of groups at the teaching assistant ( ta ) session, presentation given by groups in the session stated in the course lecture, and the delivery of a report. the presentation deliverable should contain an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide ). the report deliverable should include a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future ). what should be contained in the presentation deliverable?",
        "predicted_answer": "an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide ).",
        "true_answer": "the presentation deliverable should contain an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide )."
    },
    {
        "question": "software architecture is a high - level view of a piece of software indicating its main subparts, an explanation of the diverse pieces of software that collaborate, or simply a boxes and arrow diagram ( or several ). the book pattern - oriented software architecture : a system of patterns ( https : / / www. amazon. com / pattern - oriented - software - architecture - system - patterns / dp / 0471958697 ) is a suggested resource for learning about software architecture patterns. in essence, there are types of architecture that make sense from a requirements standpoint ( functional and non - functional ). examples of software architecture are mvc ( model - view - controller ), etl ( data extraction - transformation - loading ), layered, pub - sub ( publish subscribe ), and microservices. for quick reference on software architecture, visit the following wikipedia page ( https : / / en. wikipedia. org / wiki / architectural _ pattern ). information about mvc can be found at ( https : / / en. wikipedia. org / wiki / model - view - controller ). information about etl can be found at ( https : / / en. wikipedia. org / wiki / extract, _ transform, _ load ). information on layered architecture can be found at ( https : / / www. oreilly. com / library / view / software - architecture - patterns / 9781491971437 / ch01. html ). information on pub - sub can be found at ( https : / / cloud. google. com / pubsub / architecture ). information on microservices can be found at ( https : / / www. oreilly. com / library / view / software - architecture - patterns / 9781491971437 / ch04. html ). many other books on software architecture exist here are a few recommendations ( https : / / www. oreilly. com / library / view / fundamentals - of - software / 9781492043447 /, https : / / www. oreilly. com / library / view / building - microservices - 2nd / 9781492034018 /, https : / / www. amazon. com / just - enough - software - architecture - risk - driven / dp / 0984618104 ). what is meant by software architecture?",
        "predicted_answer": "high - level view of a piece of software indicating its main subparts,",
        "true_answer": "high - level view of a piece of software indicating its main subparts, an explanation of the diverse pieces of software that collaborate, or simply a boxes and arrow diagram ( or several )."
    },
    {
        "question": "the first assignment for the capstone project consists of two parts. part 1 is individual, where each student must come up with an idea for a web application that is innovative, useful, and simple to explain. part 2 involves presenting the ideas to the group, discussing advantages and disadvantages, and collectively choosing one idea to develop further. the group will then create a clickable demo using a design tool and prepare slides for a 5 - minute presentation. the assignment deliverables include a presentation in pdf or ppt format with a recorded demo and a report. for the first assignment, the organization of the assignment is as follows ; individual work at the beginning, announcement of groups at the teaching assistant ( ta ) session, presentation given by groups in the session stated in the course lecture, and the delivery of a report. the presentation deliverable should contain an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide ). the report deliverable should include a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future ). which aspects should be covered in the report for assignment one of the capstone project course?",
        "predicted_answer": "explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future ).",
        "true_answer": "a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future )."
    },
    {
        "question": "the first assignment for the capstone project consists of two parts. part 1 is individual, where each student must come up with an idea for a web application that is innovative, useful, and simple to explain. part 2 involves presenting the ideas to the group, discussing advantages and disadvantages, and collectively choosing one idea to develop further. the group will then create a clickable demo using a design tool and prepare slides for a 5 - minute presentation. the assignment deliverables include a presentation in pdf or ppt format with a recorded demo and a report. for the first assignment, the organization of the assignment is as follows ; individual work at the beginning, announcement of groups at the teaching assistant ( ta ) session, presentation given by groups in the session stated in the course lecture, and the delivery of a report. the presentation deliverable should contain an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide ). the report deliverable should include a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future ). which aspects should be covered in the presentation submission of assignment 1?",
        "predicted_answer": "an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide ).",
        "true_answer": "the presentation deliverable should contain an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide )."
    },
    {
        "question": "the first assignment for the capstone project consists of two parts. part 1 is individual, where each student must come up with an idea for a web application that is innovative, useful, and simple to explain. part 2 involves presenting the ideas to the group, discussing advantages and disadvantages, and collectively choosing one idea to develop further. the group will then create a clickable demo using a design tool and prepare slides for a 5 - minute presentation. the assignment deliverables include a presentation in pdf or ppt format with a recorded demo and a report. for the first assignment, the organization of the assignment is as follows ; individual work at the beginning, announcement of groups at the teaching assistant ( ta ) session, presentation given by groups in the session stated in the course lecture, and the delivery of a report. the presentation deliverable should contain an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide ). the report deliverable should include a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future ). what content is required for the presentation deliverable of the first assignment?",
        "predicted_answer": "an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide ).",
        "true_answer": "the presentation deliverable should contain an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide )."
    },
    {
        "question": "the capstone project provides a complete experience of software development from ideation to product. the formal course structure is a mix of formal presentations and guest presentations. the course structure includes requirements elicitations with stakeholders, fast design and prototyping, architecture, practicalities of cybersecurity development following agile processes, and development using state - of - the - art development tools ( git repositories, integration servers, static analyzers ). if you want to learn more about the capstone project course, check the article in the 2nd international workshop on frontiers in software engineering education ( fisee 23 ), edited in lecture notes in computer science by springer ( https : / / link. springer. com / chapter / 10. 1007 / 978 - 3 - 031 - 48639 - 5 _ 3 ). the instructor of the capstone project is prof dr manuel oriol. manuel is a professor of computer science at constructor institute. he has 10 years of experience in academia, and 10 years in industry, co - authored 60 + articles on software engineering and software architecture, and graduated 4 doctoral students, and 25 + msc students. the teaching assistants are muhammad khalid and julia kotovich. mohammed is a phd researcher and lecturer at constructor university. julia kotovich is a phd researcher at constructor institute. to succeed in the program, students must have a strong foundation in programming skills in an imperative language at the cs bachelor level, as well as knowledge of algorithms and data structures at the same level. these foundational skills enable students to tackle the complexities of the capstone project and other advanced coursework. the course plan includes design & ideation, architecture, and initial development, portal ready and deployed, and advanced concepts and refinements based on customer feedback. the course includes an opportunity for students to attend guest lectures, which are presentations given by external lecturers from industry or academia. these lectures cover best practices and other computer science - related topics, providing students with insights from experienced professionals in the field. the start time of guest lectures can be verified in the actual course schedule. taking this course is mandatory for students enrolled in the ast and csse programs. it is a crucial part of the curriculum that ensures you gain the necessary practical and theoretical skills for your future career in software engineering and related fields. how should students verify the start time of guest lectures?",
        "predicted_answer": "the start time of guest lectures can be verified in the actual course schedule.",
        "true_answer": "start time of guest lectures can be verified in the actual course schedule."
    },
    {
        "question": "the first assignment for the capstone project consists of two parts. part 1 is individual, where each student must come up with an idea for a web application that is innovative, useful, and simple to explain. part 2 involves presenting the ideas to the group, discussing advantages and disadvantages, and collectively choosing one idea to develop further. the group will then create a clickable demo using a design tool and prepare slides for a 5 - minute presentation. the assignment deliverables include a presentation in pdf or ppt format with a recorded demo and a report. for the first assignment, the organization of the assignment is as follows ; individual work at the beginning, announcement of groups at the teaching assistant ( ta ) session, presentation given by groups in the session stated in the course lecture, and the delivery of a report. the presentation deliverable should contain an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide ). the report deliverable should include a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future ). what information should be contained within the presentation deliverable of assignment one?",
        "predicted_answer": "an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide ).",
        "true_answer": "the presentation deliverable should contain an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide )."
    },
    {
        "question": "an important aspect of a software product is the need to talk to stakeholders. to do this effectively, you have to prepare a pitch and a demo. a pitch should take 2 - 5 minutes, be simple, straight to the point, fun ( if possible ), and insightful. it should let people understand why they should give you money. a pitch should be structured as follows : problem ( job - to - be - done ), your solution ( why is your solution creating a paradigm shift ), market and competitor analysis, team, business case, unique insights that you have, and ask. the problem section answers the \" why \" question. start with a question like, \" did you ever ask yourself? \" and explain the problem from the customer's perspective. your solution answers \" what \" and \" how. \". present your solution quickly and efficiently, explain the benefits, how it solves the problem, and how it changes everything ( paradigm shift ). for market and competitor analysis, make a 2 - dimensional graph ( find the right axes where your solution fits ) and show the market size if possible. in the team section, present your team with 2 + founders ( include pictures ). the business case should show a \" hockey stick \" growth projection but not promise anything before 3 years. explain your unique insight ( this is why you are the startup that will make it ). in the ask section, indicate what you need, be it money, feedback, or advertisement. the demo should be compelling, answer the problem statement nicely, be short, and work. what should be included in the team section of a pitch?",
        "predicted_answer": "in the team section, present your team with 2 + founders ( include pictures ).",
        "true_answer": "present your team with 2 + founders ( include pictures )."
    },
    {
        "question": "the first assignment for the capstone project consists of two parts. part 1 is individual, where each student must come up with an idea for a web application that is innovative, useful, and simple to explain. part 2 involves presenting the ideas to the group, discussing advantages and disadvantages, and collectively choosing one idea to develop further. the group will then create a clickable demo using a design tool and prepare slides for a 5 - minute presentation. the assignment deliverables include a presentation in pdf or ppt format with a recorded demo and a report. for the first assignment, the organization of the assignment is as follows ; individual work at the beginning, announcement of groups at the teaching assistant ( ta ) session, presentation given by groups in the session stated in the course lecture, and the delivery of a report. the presentation deliverable should contain an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide ). the report deliverable should include a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future ). what should the report deliverable consist of for assignment one in the capstone project course?",
        "predicted_answer": "explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future ).",
        "true_answer": "the report deliverable should include a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future )."
    },
    {
        "question": "software architecture is a high - level view of a piece of software indicating its main subparts, an explanation of the diverse pieces of software that collaborate, or simply a boxes and arrow diagram ( or several ). the book pattern - oriented software architecture : a system of patterns ( https : / / www. amazon. com / pattern - oriented - software - architecture - system - patterns / dp / 0471958697 ) is a suggested resource for learning about software architecture patterns. in essence, there are types of architecture that make sense from a requirements standpoint ( functional and non - functional ). examples of software architecture are mvc ( model - view - controller ), etl ( data extraction - transformation - loading ), layered, pub - sub ( publish subscribe ), and microservices. for quick reference on software architecture, visit the following wikipedia page ( https : / / en. wikipedia. org / wiki / architectural _ pattern ). information about mvc can be found at ( https : / / en. wikipedia. org / wiki / model - view - controller ). information about etl can be found at ( https : / / en. wikipedia. org / wiki / extract, _ transform, _ load ). information on layered architecture can be found at ( https : / / www. oreilly. com / library / view / software - architecture - patterns / 9781491971437 / ch01. html ). information on pub - sub can be found at ( https : / / cloud. google. com / pubsub / architecture ). information on microservices can be found at ( https : / / www. oreilly. com / library / view / software - architecture - patterns / 9781491971437 / ch04. html ). many other books on software architecture exist here are a few recommendations ( https : / / www. oreilly. com / library / view / fundamentals - of - software / 9781492043447 /, https : / / www. oreilly. com / library / view / building - microservices - 2nd / 9781492034018 /, https : / / www. amazon. com / just - enough - software - architecture - risk - driven / dp / 0984618104 ). what is software architecture?",
        "predicted_answer": "high - level view of a piece of software indicating its main subparts,",
        "true_answer": "a high - level view of a piece of software indicating its main subparts,"
    },
    {
        "question": "the first assignment for the capstone project consists of two parts. part 1 is individual, where each student must come up with an idea for a web application that is innovative, useful, and simple to explain. part 2 involves presenting the ideas to the group, discussing advantages and disadvantages, and collectively choosing one idea to develop further. the group will then create a clickable demo using a design tool and prepare slides for a 5 - minute presentation. the assignment deliverables include a presentation in pdf or ppt format with a recorded demo and a report. for the first assignment, the organization of the assignment is as follows ; individual work at the beginning, announcement of groups at the teaching assistant ( ta ) session, presentation given by groups in the session stated in the course lecture, and the delivery of a report. the presentation deliverable should contain an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide ). the report deliverable should include a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future ). what components should the presentation submission of the capstone project assignment one contain?",
        "predicted_answer": "an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide ).",
        "true_answer": "the presentation deliverable should contain an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide )."
    },
    {
        "question": "scrum is a framework used primarily in agile software development, but it's also utilized in various other fields. in scrum, the work is organized in sprints with a duration of 1 week to 1 month. during a sprint, requirements do not change. at the beginning of the sprint, there is a sprint planning event, in which work items are scheduled for the sprint. during the sprint, daily 15 - minute scrum meetings take place for the team to organize and talk about potential issues. people indicate what they did the day before, and what they will do today. if there are impediments to the sprint goals. at the end of the sprint, there is a sprint review which presents the results of the sprint to stakeholders and uses demos. the group discusses their plans for the future. after that, there is a sprint retrospective where the team talks about their impediments, issues, and positive aspects and tries to improve the process for the next sprint and forward. roles in scrum are scrum master, product owner, and development team. a scrum master is the person who takes care of the process, coaches people on scrum, ensures that there is harmony in the team, and makes sure that everyone is going in the right direction. a product owner defines what is in the product backlog, makes sure that everyone understands the backlog and the direction it takes for the requirements, and defines the requirements for the project and the sprint. the development team is made up of developers. work in scrum is organized following a backlog. a backlog is a list of work items that are organized with priorities. work items should be achievable in a sprint. work items list the requirements of the change that needs to be done, they also often include a definition of done. often such requirements are expressed as a user story following this structure : \" as a... i want to... so that... \". there is the product backlog for the whole product and the sprint backlog for a given sprint. if user stories are too large, they can be an epic which then contains several user stories. in the capstone project, a sprint is 2 weeks long, each review is typically graded, and each time student feedback is gathered using menti. what are the roles in scrum",
        "predicted_answer": "scrum master, product owner, and development team.",
        "true_answer": "roles in scrum are scrum master, product owner, and development team."
    },
    {
        "question": "the first assignment for the capstone project consists of two parts. part 1 is individual, where each student must come up with an idea for a web application that is innovative, useful, and simple to explain. part 2 involves presenting the ideas to the group, discussing advantages and disadvantages, and collectively choosing one idea to develop further. the group will then create a clickable demo using a design tool and prepare slides for a 5 - minute presentation. the assignment deliverables include a presentation in pdf or ppt format with a recorded demo and a report. for the first assignment, the organization of the assignment is as follows ; individual work at the beginning, announcement of groups at the teaching assistant ( ta ) session, presentation given by groups in the session stated in the course lecture, and the delivery of a report. the presentation deliverable should contain an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide ). the report deliverable should include a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future ). what should the report deliverable encompass for assignment one of the capstone project course?",
        "predicted_answer": "explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future ).",
        "true_answer": "the report deliverable should include a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future )."
    },
    {
        "question": "software architecture is a high - level view of a piece of software indicating its main subparts, an explanation of the diverse pieces of software that collaborate, or simply a boxes and arrow diagram ( or several ). the book pattern - oriented software architecture : a system of patterns ( https : / / www. amazon. com / pattern - oriented - software - architecture - system - patterns / dp / 0471958697 ) is a suggested resource for learning about software architecture patterns. in essence, there are types of architecture that make sense from a requirements standpoint ( functional and non - functional ). examples of software architecture are mvc ( model - view - controller ), etl ( data extraction - transformation - loading ), layered, pub - sub ( publish subscribe ), and microservices. for quick reference on software architecture, visit the following wikipedia page ( https : / / en. wikipedia. org / wiki / architectural _ pattern ). information about mvc can be found at ( https : / / en. wikipedia. org / wiki / model - view - controller ). information about etl can be found at ( https : / / en. wikipedia. org / wiki / extract, _ transform, _ load ). information on layered architecture can be found at ( https : / / www. oreilly. com / library / view / software - architecture - patterns / 9781491971437 / ch01. html ). information on pub - sub can be found at ( https : / / cloud. google. com / pubsub / architecture ). information on microservices can be found at ( https : / / www. oreilly. com / library / view / software - architecture - patterns / 9781491971437 / ch04. html ). many other books on software architecture exist here are a few recommendations ( https : / / www. oreilly. com / library / view / fundamentals - of - software / 9781492043447 /, https : / / www. oreilly. com / library / view / building - microservices - 2nd / 9781492034018 /, https : / / www. amazon. com / just - enough - software - architecture - risk - driven / dp / 0984618104 ). how would you define software architecture?",
        "predicted_answer": "high - level view of a piece of software indicating its main subparts,",
        "true_answer": "high - level view of a piece of software indicating its main subparts, an explanation of the diverse pieces of software that collaborate, or simply a boxes and arrow diagram ( or several )."
    },
    {
        "question": "software architecture is a high - level view of a piece of software indicating its main subparts, an explanation of the diverse pieces of software that collaborate, or simply a boxes and arrow diagram ( or several ). the book pattern - oriented software architecture : a system of patterns ( https : / / www. amazon. com / pattern - oriented - software - architecture - system - patterns / dp / 0471958697 ) is a suggested resource for learning about software architecture patterns. in essence, there are types of architecture that make sense from a requirements standpoint ( functional and non - functional ). examples of software architecture are mvc ( model - view - controller ), etl ( data extraction - transformation - loading ), layered, pub - sub ( publish subscribe ), and microservices. for quick reference on software architecture, visit the following wikipedia page ( https : / / en. wikipedia. org / wiki / architectural _ pattern ). information about mvc can be found at ( https : / / en. wikipedia. org / wiki / model - view - controller ). information about etl can be found at ( https : / / en. wikipedia. org / wiki / extract, _ transform, _ load ). information on layered architecture can be found at ( https : / / www. oreilly. com / library / view / software - architecture - patterns / 9781491971437 / ch01. html ). information on pub - sub can be found at ( https : / / cloud. google. com / pubsub / architecture ). information on microservices can be found at ( https : / / www. oreilly. com / library / view / software - architecture - patterns / 9781491971437 / ch04. html ). many other books on software architecture exist here are a few recommendations ( https : / / www. oreilly. com / library / view / fundamentals - of - software / 9781492043447 /, https : / / www. oreilly. com / library / view / building - microservices - 2nd / 9781492034018 /, https : / / www. amazon. com / just - enough - software - architecture - risk - driven / dp / 0984618104 ). what is the definition of software architecture?",
        "predicted_answer": "high - level view of a piece of software indicating its main subparts,",
        "true_answer": "high - level view of a piece of software indicating its main subparts, an explanation of the diverse pieces of software that collaborate, or simply a boxes and arrow diagram ( or several )."
    },
    {
        "question": "software architecture is a high - level view of a piece of software indicating its main subparts, an explanation of the diverse pieces of software that collaborate, or simply a boxes and arrow diagram ( or several ). the book pattern - oriented software architecture : a system of patterns ( https : / / www. amazon. com / pattern - oriented - software - architecture - system - patterns / dp / 0471958697 ) is a suggested resource for learning about software architecture patterns. in essence, there are types of architecture that make sense from a requirements standpoint ( functional and non - functional ). examples of software architecture are mvc ( model - view - controller ), etl ( data extraction - transformation - loading ), layered, pub - sub ( publish subscribe ), and microservices. for quick reference on software architecture, visit the following wikipedia page ( https : / / en. wikipedia. org / wiki / architectural _ pattern ). information about mvc can be found at ( https : / / en. wikipedia. org / wiki / model - view - controller ). information about etl can be found at ( https : / / en. wikipedia. org / wiki / extract, _ transform, _ load ). information on layered architecture can be found at ( https : / / www. oreilly. com / library / view / software - architecture - patterns / 9781491971437 / ch01. html ). information on pub - sub can be found at ( https : / / cloud. google. com / pubsub / architecture ). information on microservices can be found at ( https : / / www. oreilly. com / library / view / software - architecture - patterns / 9781491971437 / ch04. html ). many other books on software architecture exist here are a few recommendations ( https : / / www. oreilly. com / library / view / fundamentals - of - software / 9781492043447 /, https : / / www. oreilly. com / library / view / building - microservices - 2nd / 9781492034018 /, https : / / www. amazon. com / just - enough - software - architecture - risk - driven / dp / 0984618104 ). where can you find information about etl?",
        "predicted_answer": "( https : / / en. wikipedia. org / wiki / model - view - controller ). information about etl can be found at ( https : / / en. wikipedia. org / wiki / extract, _ transform, _ load ).",
        "true_answer": "( https : / / en. wikipedia. org / wiki / extract, _ transform, _ load )."
    },
    {
        "question": "software architecture is a high - level view of a piece of software indicating its main subparts, an explanation of the diverse pieces of software that collaborate, or simply a boxes and arrow diagram ( or several ). the book pattern - oriented software architecture : a system of patterns ( https : / / www. amazon. com / pattern - oriented - software - architecture - system - patterns / dp / 0471958697 ) is a suggested resource for learning about software architecture patterns. in essence, there are types of architecture that make sense from a requirements standpoint ( functional and non - functional ). examples of software architecture are mvc ( model - view - controller ), etl ( data extraction - transformation - loading ), layered, pub - sub ( publish subscribe ), and microservices. for quick reference on software architecture, visit the following wikipedia page ( https : / / en. wikipedia. org / wiki / architectural _ pattern ). information about mvc can be found at ( https : / / en. wikipedia. org / wiki / model - view - controller ). information about etl can be found at ( https : / / en. wikipedia. org / wiki / extract, _ transform, _ load ). information on layered architecture can be found at ( https : / / www. oreilly. com / library / view / software - architecture - patterns / 9781491971437 / ch01. html ). information on pub - sub can be found at ( https : / / cloud. google. com / pubsub / architecture ). information on microservices can be found at ( https : / / www. oreilly. com / library / view / software - architecture - patterns / 9781491971437 / ch04. html ). many other books on software architecture exist here are a few recommendations ( https : / / www. oreilly. com / library / view / fundamentals - of - software / 9781492043447 /, https : / / www. oreilly. com / library / view / building - microservices - 2nd / 9781492034018 /, https : / / www. amazon. com / just - enough - software - architecture - risk - driven / dp / 0984618104 ). where can you find information about etl?",
        "predicted_answer": "( https : / / en. wikipedia. org / wiki / model - view - controller ). information about etl can be found at ( https : / / en. wikipedia. org / wiki / extract, _ transform, _ load ).",
        "true_answer": "( https : / / en. wikipedia. org / wiki / extract, _ transform, _ load )."
    },
    {
        "question": "the capstone project provides a complete experience of software development from ideation to product. the formal course structure is a mix of formal presentations and guest presentations. the course structure includes requirements elicitations with stakeholders, fast design and prototyping, architecture, practicalities of cybersecurity development following agile processes, and development using state - of - the - art development tools ( git repositories, integration servers, static analyzers ). if you want to learn more about the capstone project course, check the article in the 2nd international workshop on frontiers in software engineering education ( fisee 23 ), edited in lecture notes in computer science by springer ( https : / / link. springer. com / chapter / 10. 1007 / 978 - 3 - 031 - 48639 - 5 _ 3 ). the instructor of the capstone project is prof dr manuel oriol. manuel is a professor of computer science at constructor institute. he has 10 years of experience in academia, and 10 years in industry, co - authored 60 + articles on software engineering and software architecture, and graduated 4 doctoral students, and 25 + msc students. the teaching assistants are muhammad khalid and julia kotovich. mohammed is a phd researcher and lecturer at constructor university. julia kotovich is a phd researcher at constructor institute. to succeed in the program, students must have a strong foundation in programming skills in an imperative language at the cs bachelor level, as well as knowledge of algorithms and data structures at the same level. these foundational skills enable students to tackle the complexities of the capstone project and other advanced coursework. the course plan includes design & ideation, architecture, and initial development, portal ready and deployed, and advanced concepts and refinements based on customer feedback. the course includes an opportunity for students to attend guest lectures, which are presentations given by external lecturers from industry or academia. these lectures cover best practices and other computer science - related topics, providing students with insights from experienced professionals in the field. the start time of guest lectures can be verified in the actual course schedule. taking this course is mandatory for students enrolled in the ast and csse programs. it is a crucial part of the curriculum that ensures you gain the necessary practical and theoretical skills for your future career in software engineering and related fields. what is the definition of the capstone project course",
        "predicted_answer": "a complete experience of software development from ideation to product.",
        "true_answer": "provides a complete experience of software development from ideation to product."
    },
    {
        "question": "the capstone project provides a complete experience of software development from ideation to product. the formal course structure is a mix of formal presentations and guest presentations. the course structure includes requirements elicitations with stakeholders, fast design and prototyping, architecture, practicalities of cybersecurity development following agile processes, and development using state - of - the - art development tools ( git repositories, integration servers, static analyzers ). if you want to learn more about the capstone project course, check the article in the 2nd international workshop on frontiers in software engineering education ( fisee 23 ), edited in lecture notes in computer science by springer ( https : / / link. springer. com / chapter / 10. 1007 / 978 - 3 - 031 - 48639 - 5 _ 3 ). the instructor of the capstone project is prof dr manuel oriol. manuel is a professor of computer science at constructor institute. he has 10 years of experience in academia, and 10 years in industry, co - authored 60 + articles on software engineering and software architecture, and graduated 4 doctoral students, and 25 + msc students. the teaching assistants are muhammad khalid and julia kotovich. mohammed is a phd researcher and lecturer at constructor university. julia kotovich is a phd researcher at constructor institute. to succeed in the program, students must have a strong foundation in programming skills in an imperative language at the cs bachelor level, as well as knowledge of algorithms and data structures at the same level. these foundational skills enable students to tackle the complexities of the capstone project and other advanced coursework. the course plan includes design & ideation, architecture, and initial development, portal ready and deployed, and advanced concepts and refinements based on customer feedback. the course includes an opportunity for students to attend guest lectures, which are presentations given by external lecturers from industry or academia. these lectures cover best practices and other computer science - related topics, providing students with insights from experienced professionals in the field. the start time of guest lectures can be verified in the actual course schedule. taking this course is mandatory for students enrolled in the ast and csse programs. it is a crucial part of the curriculum that ensures you gain the necessary practical and theoretical skills for your future career in software engineering and related fields. what opportunity does the capstone project course provide for students?",
        "predicted_answer": "guest lectures, which are presentations given by external lecturers from industry or academia.",
        "true_answer": "opportunity for students to attend guest lectures, which are presentations given by external lecturers from industry or academia."
    },
    {
        "question": "the first assignment for the capstone project consists of two parts. part 1 is individual, where each student must come up with an idea for a web application that is innovative, useful, and simple to explain. part 2 involves presenting the ideas to the group, discussing advantages and disadvantages, and collectively choosing one idea to develop further. the group will then create a clickable demo using a design tool and prepare slides for a 5 - minute presentation. the assignment deliverables include a presentation in pdf or ppt format with a recorded demo and a report. for the first assignment, the organization of the assignment is as follows ; individual work at the beginning, announcement of groups at the teaching assistant ( ta ) session, presentation given by groups in the session stated in the course lecture, and the delivery of a report. the presentation deliverable should contain an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide ). the report deliverable should include a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future ). what is the prescribed deliverable for the first assignment in the capstone project course?",
        "predicted_answer": "deliverables include a presentation in pdf or ppt format with a recorded demo and a report.",
        "true_answer": "the assignment deliverables include a presentation in pdf or ppt format with a recorded demo and a report."
    },
    {
        "question": "there are several tools for the processes in software development. these tools are meant to support the development not to control it. during the development process in capstone, if tools do not work and this is expressed in a retrospective, it can be changed. the four main categories of tools that development teams need are design tools, source code versioning systems, software development platforms, and continuous integration servers. design tools help to present what a solution should look like and simulate its main interaction ( it is needed to show a project to stakeholders to make it concrete ). many people use powerpoint to show what they want to have. it is even possible to make clickable demos that way. many tools exist, an example is invision. this tool can be used to easily create a first draft. the main concepts are artboards ( screens / landing visualizations ), and interactions. interactions define an event and a landing artboard. a software development platform is a web tool that allows one to store and browse source code through a repository and organize the backlog and the testing process. there are now many platforms online that provide these kinds of functionalities for free or for subscriptions. popular examples include github ( bought by microsoft and is free for open source ), gitlab and gitorious ( free clones of github to use and install on - premises ), devops by microsoft, and jira by atlassian. a continuous integration server is a server that runs pipelines pulls from a repository, compiles the code, runs tests automatically, and notifies you if there is a problem. few recognized and professional tools exist. examples are jenkins ( open source and free ), gitlabci ( open source and free ), and azure pipelines ( by microsoft ). in the capstone project course, we will use the processes and tools that we presented. much of the training for tools should be done online by following tutorials. all these are the basics that everyone needs to understand to do a decent job. ta session will help and answer questions whenever possible. give the definition of a software development platform",
        "predicted_answer": "a web tool that allows one to store and browse source code through a repository and organize the backlog and the testing process.",
        "true_answer": "web tool that allows one to store and browse source code through a repository and organize the backlog and the testing process."
    },
    {
        "question": "an important aspect of a software product is the need to talk to stakeholders. to do this effectively, you have to prepare a pitch and a demo. a pitch should take 2 - 5 minutes, be simple, straight to the point, fun ( if possible ), and insightful. it should let people understand why they should give you money. a pitch should be structured as follows : problem ( job - to - be - done ), your solution ( why is your solution creating a paradigm shift ), market and competitor analysis, team, business case, unique insights that you have, and ask. the problem section answers the \" why \" question. start with a question like, \" did you ever ask yourself? \" and explain the problem from the customer's perspective. your solution answers \" what \" and \" how. \". present your solution quickly and efficiently, explain the benefits, how it solves the problem, and how it changes everything ( paradigm shift ). for market and competitor analysis, make a 2 - dimensional graph ( find the right axes where your solution fits ) and show the market size if possible. in the team section, present your team with 2 + founders ( include pictures ). the business case should show a \" hockey stick \" growth projection but not promise anything before 3 years. explain your unique insight ( this is why you are the startup that will make it ). in the ask section, indicate what you need, be it money, feedback, or advertisement. the demo should be compelling, answer the problem statement nicely, be short, and work. what should be included in a stakeholder presentation session?",
        "predicted_answer": "a pitch",
        "true_answer": "a pitch and a demo."
    },
    {
        "question": "software architecture is a high - level view of a piece of software indicating its main subparts, an explanation of the diverse pieces of software that collaborate, or simply a boxes and arrow diagram ( or several ). the book pattern - oriented software architecture : a system of patterns ( https : / / www. amazon. com / pattern - oriented - software - architecture - system - patterns / dp / 0471958697 ) is a suggested resource for learning about software architecture patterns. in essence, there are types of architecture that make sense from a requirements standpoint ( functional and non - functional ). examples of software architecture are mvc ( model - view - controller ), etl ( data extraction - transformation - loading ), layered, pub - sub ( publish subscribe ), and microservices. for quick reference on software architecture, visit the following wikipedia page ( https : / / en. wikipedia. org / wiki / architectural _ pattern ). information about mvc can be found at ( https : / / en. wikipedia. org / wiki / model - view - controller ). information about etl can be found at ( https : / / en. wikipedia. org / wiki / extract, _ transform, _ load ). information on layered architecture can be found at ( https : / / www. oreilly. com / library / view / software - architecture - patterns / 9781491971437 / ch01. html ). information on pub - sub can be found at ( https : / / cloud. google. com / pubsub / architecture ). information on microservices can be found at ( https : / / www. oreilly. com / library / view / software - architecture - patterns / 9781491971437 / ch04. html ). many other books on software architecture exist here are a few recommendations ( https : / / www. oreilly. com / library / view / fundamentals - of - software / 9781492043447 /, https : / / www. oreilly. com / library / view / building - microservices - 2nd / 9781492034018 /, https : / / www. amazon. com / just - enough - software - architecture - risk - driven / dp / 0984618104 ). where can you find information about pub - sub architecture?",
        "predicted_answer": "( https : / / cloud. google. com / pubsub / architecture ). information on microservices can be found at ( https : / / www. oreilly. com / library / view / software - architecture - patterns / 9781491971437 / ch04. html ).",
        "true_answer": "( https : / / cloud. google. com / pubsub / architecture )."
    },
    {
        "question": "scrum is a framework used primarily in agile software development, but it's also utilized in various other fields. in scrum, the work is organized in sprints with a duration of 1 week to 1 month. during a sprint, requirements do not change. at the beginning of the sprint, there is a sprint planning event, in which work items are scheduled for the sprint. during the sprint, daily 15 - minute scrum meetings take place for the team to organize and talk about potential issues. people indicate what they did the day before, and what they will do today. if there are impediments to the sprint goals. at the end of the sprint, there is a sprint review which presents the results of the sprint to stakeholders and uses demos. the group discusses their plans for the future. after that, there is a sprint retrospective where the team talks about their impediments, issues, and positive aspects and tries to improve the process for the next sprint and forward. roles in scrum are scrum master, product owner, and development team. a scrum master is the person who takes care of the process, coaches people on scrum, ensures that there is harmony in the team, and makes sure that everyone is going in the right direction. a product owner defines what is in the product backlog, makes sure that everyone understands the backlog and the direction it takes for the requirements, and defines the requirements for the project and the sprint. the development team is made up of developers. work in scrum is organized following a backlog. a backlog is a list of work items that are organized with priorities. work items should be achievable in a sprint. work items list the requirements of the change that needs to be done, they also often include a definition of done. often such requirements are expressed as a user story following this structure : \" as a... i want to... so that... \". there is the product backlog for the whole product and the sprint backlog for a given sprint. if user stories are too large, they can be an epic which then contains several user stories. in the capstone project, a sprint is 2 weeks long, each review is typically graded, and each time student feedback is gathered using menti. about scrum",
        "predicted_answer": "scrum is a framework used primarily in agile software development,",
        "true_answer": "scrum is a framework used primarily in agile software development, but it's also utilized in various other fields."
    },
    {
        "question": "the capstone project spans three semesters. each semester offers 5 ects credits and each ects credit corresponds to 25 to 30 working hours. during the first semester of the capstone project, students focus on creating and proposing mocks, performing requirements elicitation, prototyping, approaching customers and users, specifying user stories, and organizing themselves using collaborative tools. in the second semester, students work on describing and defending a software architecture, coding in groups and as a large team, integrating independent works, using a source code versioning system, and specifying user stories. in the third semester, students engage in practical cybersecurity, hold discussions with stakeholders, practice machine learning, work with continuous improvement tools, and organize themselves through collaborative tools. students work on a single project throughout the course, allowing them to dive deeply into their chosen topic and apply their knowledge in a practical setting. groups or tribes for the capstone project are created in several ways. students may organize themselves into groups or tribes, or they may be assigned randomly if needed. each group typically consists of four to five students. a tribe consists of several groups. students seeking placement in specific groups should contact the teaching assistants ( tas ). the organizational points or grading of the capstone project is structured as follows ; 1 / 3 of the grade being a cohort ( tribe ) grade, and 2 / 3 of the grade being a group assignment. note that in rare cases group members are regarded independently. how can a student join a specific group?",
        "predicted_answer": "contact the teaching assistants ( tas ).",
        "true_answer": "students seeking placement in specific groups should contact the teaching assistants ( tas )."
    },
    {
        "question": "an important aspect of a software product is the need to talk to stakeholders. to do this effectively, you have to prepare a pitch and a demo. a pitch should take 2 - 5 minutes, be simple, straight to the point, fun ( if possible ), and insightful. it should let people understand why they should give you money. a pitch should be structured as follows : problem ( job - to - be - done ), your solution ( why is your solution creating a paradigm shift ), market and competitor analysis, team, business case, unique insights that you have, and ask. the problem section answers the \" why \" question. start with a question like, \" did you ever ask yourself? \" and explain the problem from the customer's perspective. your solution answers \" what \" and \" how. \". present your solution quickly and efficiently, explain the benefits, how it solves the problem, and how it changes everything ( paradigm shift ). for market and competitor analysis, make a 2 - dimensional graph ( find the right axes where your solution fits ) and show the market size if possible. in the team section, present your team with 2 + founders ( include pictures ). the business case should show a \" hockey stick \" growth projection but not promise anything before 3 years. explain your unique insight ( this is why you are the startup that will make it ). in the ask section, indicate what you need, be it money, feedback, or advertisement. the demo should be compelling, answer the problem statement nicely, be short, and work. what kind of growth projection should the business case show?",
        "predicted_answer": "the business case should show a \" hockey stick \" growth projection but not promise anything before 3 years.",
        "true_answer": "a \" hockey stick \" growth projection but not promise anything before 3 years."
    },
    {
        "question": "the capstone project provides a complete experience of software development from ideation to product. the formal course structure is a mix of formal presentations and guest presentations. the course structure includes requirements elicitations with stakeholders, fast design and prototyping, architecture, practicalities of cybersecurity development following agile processes, and development using state - of - the - art development tools ( git repositories, integration servers, static analyzers ). if you want to learn more about the capstone project course, check the article in the 2nd international workshop on frontiers in software engineering education ( fisee 23 ), edited in lecture notes in computer science by springer ( https : / / link. springer. com / chapter / 10. 1007 / 978 - 3 - 031 - 48639 - 5 _ 3 ). the instructor of the capstone project is prof dr manuel oriol. manuel is a professor of computer science at constructor institute. he has 10 years of experience in academia, and 10 years in industry, co - authored 60 + articles on software engineering and software architecture, and graduated 4 doctoral students, and 25 + msc students. the teaching assistants are muhammad khalid and julia kotovich. mohammed is a phd researcher and lecturer at constructor university. julia kotovich is a phd researcher at constructor institute. to succeed in the program, students must have a strong foundation in programming skills in an imperative language at the cs bachelor level, as well as knowledge of algorithms and data structures at the same level. these foundational skills enable students to tackle the complexities of the capstone project and other advanced coursework. the course plan includes design & ideation, architecture, and initial development, portal ready and deployed, and advanced concepts and refinements based on customer feedback. the course includes an opportunity for students to attend guest lectures, which are presentations given by external lecturers from industry or academia. these lectures cover best practices and other computer science - related topics, providing students with insights from experienced professionals in the field. the start time of guest lectures can be verified in the actual course schedule. taking this course is mandatory for students enrolled in the ast and csse programs. it is a crucial part of the curriculum that ensures you gain the necessary practical and theoretical skills for your future career in software engineering and related fields. could you provide basic details regarding manuel oriol?",
        "predicted_answer": "manuel is a professor of computer science at constructor institute. he has 10 years of experience in academia, and 10 years in industry, co - authored 60 + articles on software engineering and software architecture, and graduated 4 doctoral students, and 25 + msc students.",
        "true_answer": "manuel is a professor of computer science at constructor institute. he has 10 years of experience in academia,"
    },
    {
        "question": "the first assignment for the capstone project consists of two parts. part 1 is individual, where each student must come up with an idea for a web application that is innovative, useful, and simple to explain. part 2 involves presenting the ideas to the group, discussing advantages and disadvantages, and collectively choosing one idea to develop further. the group will then create a clickable demo using a design tool and prepare slides for a 5 - minute presentation. the assignment deliverables include a presentation in pdf or ppt format with a recorded demo and a report. for the first assignment, the organization of the assignment is as follows ; individual work at the beginning, announcement of groups at the teaching assistant ( ta ) session, presentation given by groups in the session stated in the course lecture, and the delivery of a report. the presentation deliverable should contain an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide ). the report deliverable should include a short explanation of the ideas of each group member with their name on one page each possibly with pictures or screenshots, and a detailed explanation of the chosen idea that answers the three questions what? why? how?, a description of the demo with screenshots, a description of the roles in the team, a description of the difficulties and the solutions you found, and lessons learned ( what could be improved or changed in the future ). which elements should be featured in the presentation deliverable of assignment one?",
        "predicted_answer": "an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide ).",
        "true_answer": "the presentation deliverable should contain an explanation about the idea that was chosen that answers the question what? why? how? ( 1 slide ), how the group work was organized ( include. meeting times, tools you used, roles and decision processes, 1 slide ), and finally lessons learned ( 1 slide )."
    }
]